export const middle = [
    '가창로221길',
    '경안로',
    '경안로45길',
    '경안로45안길',
    '고모로',
    '고모로18길',
    '고모로20길',
    '고모로22길',
    '고모로24길',
    '고모로26길',
    '고모로28길',
    '고모로33길',
    '고모로39길',
    '고모로41길',
    '고산로',
    '고산로4길',
    '고산로12길',
    '고산로18길',
    '고산로4안길',
    '공경로',
    '공경로2길',
    '공경로3길',
    '공경로5길',
    '공경로6길',
    '공경로7길',
    '교학로',
    '교학로2길',
    '교학로4길',
    '교학로5길',
    '교학로6길',
    '교학로7길',
    '교학로8길',
    '교학로11길',
    '교학로12길',
    '교학로16길',
    '교학로19길',
    '국채보상로',
    '국채보상로162길',
    '국채보상로164길',
    '국채보상로180길',
    '국채보상로186길',
    '국채보상로192길',
    '국채보상로194길',
    '국채보상로200길',
    '국채보상로202길',
    '국채보상로204길',
    '국채보상로205길',
    '국채보상로207길',
    '국채보상로209길',
    '국채보상로214길',
    '국채보상로216길',
    '국채보상로218길',
    '노변공원로',
    '노변공원로1길',
    '노변공원로3길',
    '노변공원로7길',
    '노변공원로13길',
    '노변로',
    '달구벌대로',
    '달구벌대로454길',
    '달구벌대로456길',
    '달구벌대로458길',
    '달구벌대로467길',
    '달구벌대로469길',
    '달구벌대로471길',
    '달구벌대로480길',
    '달구벌대로488길',
    '달구벌대로489길',
    '달구벌대로492길',
    '달구벌대로495길',
    '달구벌대로496길',
    '달구벌대로501길',
    '달구벌대로502길',
    '달구벌대로504길',
    '달구벌대로508길',
    '달구벌대로511길',
    '달구벌대로512길',
    '달구벌대로522길',
    '달구벌대로525길',
    '달구벌대로526길',
    '달구벌대로527길',
    '달구벌대로528길',
    '달구벌대로530길',
    '달구벌대로536길',
    '달구벌대로541길',
    '달구벌대로559길',
    '달구벌대로568길',
    '달구벌대로569길',
    '달구벌대로574길',
    '달구벌대로576길',
    '달구벌대로604길',
    '달구벌대로606길',
    '달구벌대로617길',
    '달구벌대로618길',
    '달구벌대로619길',
    '달구벌대로621길',
    '달구벌대로622길',
    '달구벌대로625길',
    '달구벌대로627길',
    '달구벌대로631길',
    '달구벌대로637길',
    '달구벌대로641길',
    '달구벌대로645길',
    '달구벌대로647길',
    '달구벌대로649길',
    '달구벌대로650길',
    '달구벌대로651길',
    '달구벌대로652길',
    '달구벌대로656길',
    '달구벌대로659길',
    '달구벌대로661길',
    '달구벌대로669길',
    '달구벌대로488안길',
    '달구벌대로489안길',
    '달구벌대로526안길',
    '동대구로',
    '동대구로3길',
    '동대구로6길',
    '동대구로7길',
    '동대구로8길',
    '동대구로12길',
    '동대구로14길',
    '동대구로15길',
    '동대구로20길',
    '동대구로25길',
    '동대구로29길',
    '동대구로38길',
    '동대구로41길',
    '동대구로42길',
    '동대구로45길',
    '동대구로46길',
    '동대구로48길',
    '동대구로49길',
    '동대구로50길',
    '동대구로52길',
    '동대구로54길',
    '동대구로55길',
    '동대구로56길',
    '동대구로57길',
    '동대구로58길',
    '동대구로59길',
    '동대구로73길',
    '동대구로74길',
    '동대구로77길',
    '동대구로80길',
    '동대구로12안길',
    '동대구로38안길',
    '동대구로74안길',
    '동원로',
    '동원로1길',
    '동원로2길',
    '동원로5길',
    '동원로6길',
    '동원로8길',
    '동원로11길',
    '동원로12길',
    '동원로28길',
    '들안로',
    '들안로1길',
    '들안로2길',
    '들안로8길',
    '들안로9길',
    '들안로13길',
    '들안로14길',
    '들안로16길',
    '들안로18길',
    '들안로19길',
    '들안로20길',
    '들안로25길',
    '들안로28길',
    '들안로29길',
    '들안로32길',
    '들안로33길',
    '들안로40길',
    '들안로42길',
    '들안로44길',
    '들안로46길',
    '들안로48길',
    '들안로50길',
    '들안로52길',
    '들안로54길',
    '들안로56길',
    '들안로60길',
    '들안로64길',
    '들안로67길',
    '들안로70길',
    '들안로71길',
    '들안로73길',
    '들안로77길',
    '들안로78길',
    '들안로81길',
    '들안로2안길',
    '들안로40안길',
    '들안로42안길',
    '만촌로',
    '만촌로1길',
    '만촌로3길',
    '만촌로4길',
    '만촌로5길',
    '만촌로8길',
    '만촌로12길',
    '만촌로14길',
    '만촌로20길',
    '만촌로24길',
    '만촌로26길',
    '만촌로28길',
    '만촌로32길',
    '명덕로',
    '명덕로73길',
    '명덕로75길',
    '명덕로76길',
    '명덕로76안길',
    '무열로',
    '무열로8길',
    '무열로11길',
    '무열로15길',
    '무열로19길',
    '무열로29길',
    '무열로39길',
    '무열로15안길',
    '무열로19안길',
    '무학로',
    '무학로11길',
    '무학로17길',
    '무학로21길',
    '무학로23길',
    '무학로27길',
    '무학로29길',
    '무학로31길',
    '무학로33길',
    '무학로35길',
    '무학로37길',
    '무학로21안길',
    '무학로37안길',
    '미술관로',
    '범안로',
    '범안로1길',
    '범안로2길',
    '범안로3길',
    '범안로4길',
    '범안로8길',
    '범안로16길',
    '범안로20길',
    '범안로60길',
    '범안로64길',
    '범안로65길',
    '범안로91길',
    '범안로3안길',
    '범안로4안길',
    '범어로',
    '범어로12길',
    '범어로16길',
    '범어로18길',
    '범어로19길',
    '범어로20길',
    '범어로24길',
    '범어로26길',
    '범어로27길',
    '범어로32길',
    '범어로34길',
    '범어천로',
    '상록로',
    '상록로2길',
    '상록로11길',
    '상록로16길',
    '상화로',
    '상화로1길',
    '상화로3길',
    '상화로4길',
    '상화로5길',
    '상화로7길',
    '성동로',
    '성동로15길',
    '성동로16길',
    '성동로33길',
    '성동로37길',
    '세진로',
    '세진로1길',
    '세진로3길',
    '세진로12길',
    '수성로',
    '수성로1길',
    '수성로5길',
    '수성로12길',
    '수성로14길',
    '수성로15길',
    '수성로19길',
    '수성로20길',
    '수성로23길',
    '수성로24길',
    '수성로25길',
    '수성로29길',
    '수성로32길',
    '수성로35길',
    '수성로37길',
    '수성로38길',
    '수성로39길',
    '수성로41길',
    '수성로43길',
    '수성로46길',
    '수성로50길',
    '수성로51길',
    '수성로52길',
    '수성로53길',
    '수성로54길',
    '수성로56길',
    '수성로57길',
    '수성로58길',
    '수성로60길',
    '수성로62길',
    '수성로64길',
    '수성로66길',
    '수성로68길',
    '수성로69길',
    '수성로70길',
    '수성로72길',
    '수성로74길',
    '수성로75길',
    '수성로76길',
    '수성로77길',
    '수성로39안길',
    '수성로50안길',
    '수성로52안길',
    '수성못길',
    '수성못2길',
    '수성못6길',
    '시지로',
    '시지로1길',
    '시지로3길',
    '시지로14길',
    '신매로',
    '신매로2길',
    '신매로4길',
    '신매로6길',
    '신매로8길',
    '신매로16길',
    '신매로19길',
    '신천대로',
    '신천동로',
    '신천동로22길',
    '신천동로26길',
    '신천동로34길',
    '신천동로46길',
    '신천동로48길',
    '신천동로52길',
    '신천동로62길',
    '신천동로84길',
    '신천동로86길',
    '신천동로88길',
    '신천동로96길',
    '신천동로98길',
    '신천동로86안길',
    '신천동쪽자전거길',
    '알파시티1로',
    '알파시티1로4길',
    '알파시티1로23길',
    '알파시티1로27길',
    '알파시티1로31길',
    '알파시티1로32길',
    '알파시티1로35길',
    '알파시티1로37길',
    '알파시티1로40길',
    '알파시티1로42길',
    '알파시티2로',
    '알파시티2로3길',
    '알파시티2로4길',
    '알파시티2로9길',
    '알파시티2로12길',
    '알파시티3로',
    '알파시티3로8길',
    '앞산터널로',
    '야구전설로',
    '용학로',
    '용학로25길',
    '용학로28길',
    '용학로30길',
    '용학로31길',
    '용학로33길',
    '용학로34길',
    '용학로35길',
    '용학로36길',
    '용학로40길',
    '용학로42길',
    '용학로44길',
    '용학로46길',
    '용학로48길',
    '용학로50길',
    '용학로25안길',
    '용학로31안길',
    '욱수길',
    '욱수천로',
    '월드컵로',
    '월드컵로5길',
    '월드컵로6길',
    '월드컵로5안길',
    '월드컵로6안길',
    '유니버시아드로',
    '유니버시아드로11길',
    '유니버시아드로42길',
    '유니버시아드로68길',
    '중앙고속도로',
    '지범로',
    '지범로1길',
    '지범로13길',
    '지범로17길',
    '지범로21길',
    '지범로22길',
    '지범로23길',
    '지범로25길',
    '지범로27길',
    '지범로29길',
    '지범로31길',
    '지범로39길',
    '지범로40길',
    '지범로41길',
    '지범로45길',
    '지범로46길',
    '지범로47길',
    '지범로48길',
    '지범로50길',
    '지범로52길',
    '지범로54길',
    '지범로31안길',
    '지산로',
    '지산로3길',
    '지산로9길',
    '지산로11길',
    '지산로13길',
    '지산로14길',
    '지산로14안길',
    '진밭길',
    '천을로',
    '천을로8길',
    '천을로23길',
    '천을로31길',
    '청솔로',
    '청솔로2길',
    '청솔로4길',
    '청솔로6길',
    '청솔로8길',
    '청솔로12길',
    '청솔로14길',
    '청솔로16길',
    '청솔로18길',
    '청솔로20길',
    '청솔로22길',
    '청수로',
    '청수로1길',
    '청수로3길',
    '청수로4길',
    '청수로9길',
    '청수로12길',
    '청수로20길',
    '청수로24길',
    '청수로25길',
    '청수로26길',
    '청수로29길',
    '청수로31길',
    '청수로34길',
    '청수로35길',
    '청수로36길',
    '청수로38길',
    '청수로40길',
    '청수로45길',
    '청호로',
    '청호로22길',
    '청호로46길',
    '청호로57길',
    '청호로67길',
    '청호로69길',
    '청호로76길',
    '청호로84길',
    '청호로85길',
    '청호로88길',
    '청호로92길',
    '청호로94길',
    '청호로95길',
    '청호로96길',
    '청호로84안길',
    '청호로85안길',
    '청호로88안길',
    '청호로96안길',
    '충의로',
    '충의로4길',
    '충의로6길',
    '충의로8길',
    '파동로',
    '파동로2길',
    '파동로3길',
    '파동로8길',
    '파동로12길',
    '파동로14길',
    '파동로16길',
    '파동로18길',
    '파동로22길',
    '파동로25길',
    '파동로26길',
    '파동로28길',
    '파동로30길',
    '파동로32길',
    '파동로37길',
    '파동로38길',
    '파동로40길',
    '파동로44길',
    '파동로46길',
    '파동로48길',
    '파동로51길',
    '파동로2안길',
    '파동로18안길',
    '팔현길',
    '화랑로',
    '화랑로2길',
    '화랑로8길',
    '화랑로12길',
    '화랑로32길',
    '화랑로34길',
    '화랑로36길',
    '화랑로38길',
    '화랑로40길',
    '화랑로42길',
    '효행로',
    '효행로2길',
    '희망로',
    '희망로19길',
    '희망로20길',
    '희망로21길',
    '희망로24길',
    '희망로30길',
    '희망로36길',
  ],
  address = [
    '서울특별시',
    '부산광역시',
    '인천광역시',
    '대구광역시',
    '대전광역시',
    '광주광역시',
    '울산광역시',
    '경기도 수원시',
    '경기도 고양시',
    '경기도 용인시',
    '경상남도 창원시',
    '경기도 성남시',
    '충청북도 청주시',
    '경기도 부천시',
    '경기도 화성시',
    '경기도 남양주시',
    '전라북도 전주시',
    '충청남도 천안시',
    '경기도 안산시',
    '경기도 안양시',
    '경상남도 김해시',
    '경기도 평택시',
    '경상북도 포항시',
    '제주특별자치도 제주시',
    '경기도 시흥시',
    '경기도 파주시',
    '경기도 의정부시',
    '경기도 김포시',
    '경상북도 구미시',
    '경기도 광주시',
    '경상남도 양산시',
    '강원도 원주시',
    '경상남도 진주시',
    '세종특별자치시',
    '경기도 광명시',
    '충청남도 아산시',
    '전라북도 익산시',
    '강원도 춘천시',
    '경상북도 경산시',
    '경기도 군포시',
    '전라북도 군산시',
    '경기도 하남시',
    '전라남도 여수시',
    '전라남도 순천시',
    '경상북도 경주시',
    '경상남도 거제시',
    '전라남도 목포시',
    '경기도 오산시',
    '경기도 이천시',
    '강원도 강릉시',
    '경기도 양주시',
    '충청북도 충주시',
    '경기도 안성시',
    '경기도 구리시',
    '충청남도 서산시',
    '제주특별자치도 서귀포시',
    '충청남도 당진시',
    '경상북도 안동시',
    '경기도 포천시',
    '경기도 의왕시',
    '전라남도 광양시',
    '경상북도 김천시',
    '충청북도 제천시',
    '경상남도 통영시',
    '충청남도 논산시',
    '경상북도 칠곡군',
    '경상남도 사천시',
    '경기도 여주시',
    '충청남도 공주시',
    '경기도 양평군',
    '전라북도 정읍시',
    '경상북도 영주시',
    '전라남도 나주시',
    '충청북도 음성군',
    '경상남도 밀양시',
    '충청남도 홍성군',
    '충청남도 보령시',
    '전라북도 완주군',
    '경상북도 상주시',
    '경상북도 영천시',
    '경기도 동두천시',
    '강원도 동해시',
    '전라북도 김제시',
    '전라남도 무안군',
    '전라북도 남원시',
    '충청북도 진천군',
    '충청남도 예산군',
    '강원도 속초시',
    '경상북도 문경시',
    '경상남도 함안군',
    '강원도 삼척시',
    '강원도 홍천군',
    '전라남도 해남군',
    '충청남도 부여군',
    '경상남도 창녕군',
    '충청남도 태안군',
    '전라남도 고흥군',
    '전라남도 화순군',
    '경상남도 거창군',
    '경기도 가평군',
    '전라남도 영암군',
    '충청남도 금산군',
    '전라북도 고창군',
    '경기도 과천시',
    '충청남도 서천군',
    '경상남도 고성군',
    '전라북도 부안군',
    '경상북도 의성군',
    '충청북도 옥천군',
    '전라남도 영광군',
    '충청북도 영동군',
    '경상북도 울진군',
    '전라남도 완도군',
    '경상북도 예천군',
    '강원도 철원군',
    '강원도 태백시',
    '경기도 연천군',
    '전라남도 담양군',
    '경상남도 합천군',
    '경상남도 하동군',
    '강원도 횡성군',
    '경상남도 남해군',
    '충청남도 계룡시',
    '전라남도 장성군',
    '경상북도 청도군',
    '경상북도 성주군',
    '강원도 평창군',
    '전라남도 보성군',
    '충청북도 괴산군',
    '경상남도 함양군',
    '충청북도 증평군',
    '강원도 영월군',
    '전라남도 장흥군',
    '경상북도 영덕군',
    '강원도 정선군',
    '전라남도 신안군',
    '경상남도 산청군',
    '전라남도 강진군',
    '경상북도 고령군',
    '충청북도 보은군',
    '충청남도 청양군',
    '경상북도 봉화군',
    '전라남도 함평군',
    '강원도 인제군',
    '전라남도 진도군',
    '전라남도 곡성군',
    '강원도 고성군',
    '충청북도 단양군',
    '전라북도 순창군',
    '전라북도 임실군',
    '경상남도 의령군',
    '강원도 양양군',
    '강원도 화천군',
    '경상북도 청송군',
    '전라남도 구례군',
    '전라북도 무주군',
    '전라북도 진안군',
    '강원도 양구군',
    '경상북도 군위군',
    '전라북도 장수군',
    '경상북도 영양군',
    '경상북도 울릉군',
  ],
  rand = ['', 0, '', 1, '', '', 2, '', 3, 4, '', 5, 6, '', 7, 8, '', 9],
  mails = [
    '@gmail.com',
    '@naver.com',
    '@daum.net',
    '@nate.com',
    '@apple.com',
    '@hotmail.com',
    '@microsoft.com',
    '@office.kr',
  ],
  lastNames = [
    '민준',
    '서준',
    '예준',
    '도윤',
    '시우',
    '주원',
    '하준',
    '지호',
    '지후',
    '준서',
    '준우',
    '현우',
    '도현',
    '지훈',
    '건우',
    '우진',
    '선우',
    '서진',
    '민재',
    '현준',
    '연우',
    '유준',
    '정우',
    '승우',
    '승현',
    '시윤',
    '준혁',
    '은우',
    '지환',
    '승민',
    '지우',
    '유찬',
    '윤우',
    '민성',
    '준영',
    '시후',
    '진우',
    '지원',
    '수현',
    '재윤',
    '시현',
    '동현',
    '수호',
    '태윤',
    '민규',
    '재원',
    '한결',
    '민우',
    '재민',
    '은찬',
    '윤호',
    '시원',
    '이준',
    '민찬',
    '지안',
    '시온',
    '성민',
    '준호',
    '승준',
    '성현',
    '이안',
    '현서',
    '재현',
    '하율',
    '지한',
    '우빈',
    '태민',
    '지성',
    '예성',
    '민호',
    '태현',
    '지율',
    '민혁',
    '서우',
    '성준',
    '은호',
    '규민',
    '정민',
    '준',
    '지민',
    '윤성',
    '율',
    '윤재',
    '하람',
    '하진',
    '민석',
    '준수',
    '은성',
    '태양',
    '예찬',
    '준희',
    '도훈',
    '하민',
    '준성',
    '건',
    '지완',
    '현수',
    '승원',
    '강민',
    '정현',
    '서연',
    '서윤',
    '지우',
    '서현',
    '민서',
    '하은',
    '하윤',
    '윤서',
    '지유',
    '지민',
    '채원',
    '지윤',
    '은서',
    '수아',
    '다은',
    '예은',
    '지아',
    '수빈',
    '소율',
    '예린',
    '예원',
    '지원',
    '소윤',
    '지안',
    '하린',
    '시은',
    '유진',
    '채은',
    '윤아',
    '유나',
    '가은',
    '서영',
    '민지',
    '예진',
    '서아',
    '수민',
    '수연',
    '연우',
    '예나',
    '예서',
    '주아',
    '시연',
    '연서',
    '하율',
    '다인',
    '다연',
    '시아',
    '아인',
    '현서',
    '서은',
    '유주',
    '아린',
    '서우',
    '하연',
    '서율',
    '서진',
    '채윤',
    '유빈',
    '지율',
    '나윤',
    '수현',
    '예지',
    '다현',
    '소은',
    '나은',
    '나연',
    '지은',
    '민주',
    '아윤',
    '사랑',
    '시현',
    '예빈',
    '윤지',
    '서하',
    '지현',
    '소연',
    '혜원',
    '지수',
    '은채',
    '주하',
    '채아',
    '승아',
    '다윤',
    '소민',
    '서희',
    '나현',
    '민아',
    '채린',
    '하영',
    '세아',
    '세은',
    '도연',
    '규리',
    '아영',
    '다온',
    '가윤',
    '지연',
    '예림',
    '태희',
    '민채',
  ],
  firstNames = [
    '가',
    '간',
    '갈',
    '감',
    '강',
    '개',
    '견',
    '경',
    '계',
    '고',
    '곡',
    '공',
    '곽',
    '교',
    '구',
    '국',
    '군',
    '궁',
    '궉',
    '권',
    '근',
    '금',
    '기',
    '길',
    '김',
    '나',
    '남',
    '낭',
    '내',
    '노',
    '뇌',
    '누',
    '단',
    '담',
    '당',
    '대',
    '도',
    '독',
    '돈',
    '동',
    '두',
    '류',
    '마',
    '만',
    '망',
    '매',
    '맹',
    '명',
    '모',
    '묘',
    '목',
    '무',
    '묵',
    '문',
    '미',
    '민',
    '박',
    '반',
    '방',
    '배',
    '백',
    '범',
    '변',
    '복',
    '봉',
    '부',
    '비',
    '빈',
    '빙',
    '사',
    '삼',
    '상',
    '새',
    '서',
    '석',
    '선',
    '설',
    '섭',
    '성',
    '소',
    '손',
    '송',
    '수',
    '순',
    '승',
    '시',
    '신',
    '심',
    '아',
    '안',
    '애',
    '야',
    '양',
    '어',
    '엄',
    '여',
    '연',
    '염',
    '영',
    '예',
    '오',
    '옥',
    '온',
    '옹',
    '왕',
    '요',
    '용',
    '우',
    '운',
    '원',
    '위',
    '유',
    '육',
    '윤',
    '은',
    '음',
    '이',
    '인',
    '임',
    '자',
    '장',
    '전',
    '점',
    '정',
    '제',
    '조',
    '종',
    '좌',
    '주',
    '준',
    '지',
    '진',
    '즙',
    '차',
    '창',
    '채',
    '척',
    '천',
    '초',
    '총',
    '최',
    '추',
    '쾌',
    '탁',
    '탄',
    '태',
    '판',
    '팽',
    '편',
    '평',
    '포',
    '표',
    '풍',
    '피',
    '필',
    '하',
    '학',
    '한',
    '함',
    '해',
    '허',
    '현',
    '형',
    '호',
    '홍',
    '화',
    '환',
    '황',
  ],
  numberRange = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9],
  titles = [
    '우아한 PM의 밤을 다녀와서',
    '내 디자인을 돋보이게 만드는 목업 사이트들',
    '팬덤을 만드는 브랜드 소통법',
    'UTM 변수를 활용한 G4 데이터 수집 및 채널 분류',
    '라이프스타일을 기준으로 탐색 화면을 개선하자',
    '다방이 쉬운 방 찾기를 검색 화면 내 제공하는 이유',
    '의존관계 주입(DI, Dependency Injection)은 왜 사용할까? (+Spring IoC)',
    '사람들이 문자를 보내는 진짜 이유는 무엇일가?',
    '슬립 사운드 출시기 (1) : 어떻게 이토록 빠르게 출시할 수 있었을까?',
    '한물간 줄 알았던 네이버 블로그의 부활',
    '모비데이즈 선정 2022 Creative Trends',
    '여성 리더가 나오기 힘든 이유',
    'yarn patch — 패키지를 수정해서 사용해볼..까?',
    '반드시 기억해야 할 노동법 Q&A',
    'GA4 잠재고객(Audiences) 활용하기',
    '데이터 분석가가 조직에 대해 이해해야 하는 이유',
    '컬리 검색이 카프카를 들여다본 이야기 1',
    '대체 그런 선택을 하신 이유가 뭔가요?',
    '생산성 극대화를 위해 완료주의자 되기',
    '5개의 사업 중 성공한 사업과 실패한 사업의 차이 [박재욱] 1편',
    '프리텐다드 폰트로의 이주',
    '“네이버와 쿠팡만 성장할 것” 네이버의 커머스 사업 분석',
    '첫 장기적 생각',
    '사용자 리텐션에 대한 고찰',
    '[7월] 전월대비 투자금·투자건수 주춤',
    'MOBETTERWORKS BRAND DESIGN',
    'Various illustrations/summer',
    'Do not use arrow function as methods in Vue.js',
    '내 맘대로 위클리 뉴스 - 2022년 30주(2022.07.24 - 2022.07.30)',
    '섭섭금지! 서핏 위클리 개편🎉',
    '합성 컴포넌트로 재사용성 극대화하기',
    '타게팅의 시대에서 논타게팅의 시대에 적응하는 방법',
    '커머스 솔루션에서 자사 커머스 플랫폼으로 이전',
    '일 못하는 사람을 제어하라',
    '링크드인 인재 트렌드 보고서 2022 총정리',
    'Danielle Levitt',
    'A/B 테스트에 적정한 표본의 크기와 주의 사항',
    '더 빠르고 스마트하게 일하는 린 UX 실행전략',
    'UX writing 할 때는 제이콥의 법칙은 넣어둬요.',
    '자바스크립트 함수 합성, 뭐가 그렇게 대단할까?',
    '당근마켓에 웹 프로젝트 배포하기 #2 — 웹 서버로 돌아가기',
    'B2B 마케터가 할 수 있는 주요 만족도 조사 2가지',
    '당신이 아는 마케팅은 틀렸다!',
    '퇴사한 소프트웨어 회사 PM의 인수인계 파일',
    '웹사이트에 GA4 연결하기 (3) GTM 계정 만들고 웹사이트에 설치하기',
    '데이터를 다루기 시작한 스타트업에서는 어떻게 데이터를 보면 좋을까요?',
    '뉴욕타임즈의 과거, 현재, 미래',
    '[혁신의숲] 스타트업 7월 투자 결산',
    '엔데믹 시대 HR로 리딩하는 법',
    'Invader Studio - Visual Identity',
    '인식성이란 무엇인가?',
    '리디가 이북리더기를 디자인하는 방식',
    '확장성 높은 카프카 구성을 위한 서비스 설계',
    '가장 최신 사례만 쏙쏙 골라온 친환경 덤고구마말랭이 특집!',
    '성공적인 비즈니스를 위한 완벽 인스타그램 마케팅 가이드',
    'Danielle Levitt',
    '테라폼 모듈 구조잡기 - feat with GCP',
    '스타트업 리더에 필요한 정신건강 코칭',
    '이커머스 기업들은 왜 대부분 적자일까요?',
    '진화하는 창업가',
    '검로드 : 회의, 데드라인, 풀타임 직원 없는 기적의 회사',
    '데이브가 매일 사용하는 10가지 생산성 도구',
    '행복하고 건강한 여생을 위하여',
    '[스플X북저널리즘] 스트리밍 플랫폼 레드오션에서 살아남기',
    '지도는 움직이는 거야ㅣ카카오의 상상법 EP.02',
    '레이아웃 RFC',
    '정체성은 어디에서 오는가',
    'Glideapps.com',
    '내 맘대로 위클리 뉴스 - 2022년 29주(2022.07.17 - 2022.07.23)',
    '#구독자님을위한 #해시태그 #성공비법공개',
    '마케팅이 정확히 뭘 하는 거죠?',
    '천사 같던 반려견이 지옥문을 연다면?',
    '디지털 콘텐츠 에디터를 위한 필수 뉴스레터',
    '다시 보고 싶은 설문조사를 디자인하는 6가지 팁',
    'Hello, Pyscript! 알파 버전 알아보기',
    '30년 커리어를 설정하는 방법을 알려주는 고마운 책',
    '게으른 통제자 (The Lazy Controller)',
    '실리콘밸리 인턴에서 대표까지 14년 동안 깨달은 ‘인생에서 가장 중요한 것’',
    '데이터베이스 스키마를 관리하는 도구, Flyway',
    "디즈니의 진짜 무기는 IP가 아니라, '어피니티(Affinity)'입니다!",
    'tvN의 VIP를 위한 프로모션 키트 제작사례 by 신시어리',
    '우리가 헤어질 때, 고민해야 할 것들.',
    "흔들리는 알리바바의 전략 '핀둬둬+a’",
    '후퇴는 없다, 쏘카 IPO 계속 추진',
    'MODERNA',
    'Modular Architecture 를 향한 여정 Part 1 — XcodeGen 도입과 모듈화의 시작',
    '‘놀면서 일한다’ 일본도 워케이션 열풍!',
    '경로를 이탈하였습니다 | 카카오의 상상법 EP.01',
    '[미국 UX취업하기] 유학+취업 vs 바로 취업',
    '아디다스 오즈월드: 나만의 아바타 만들기',
    '데이터 리터러시(Data Literacy)를 올리는 방법',
    'A/B 트래픽과 결과의 유의미함이 무슨 상관인가요?',
    '웹 접근성을 고려한 다양한 디자인 패턴과 예제를 볼 수 있는 곳!',
    '브랜드의 강점을 잘 살린 신규 서비스 사례가 궁금하다면? 클릭!',
    '난세의 영웅 gRPC',
    '#5 토스 PO Session 바이럴 성장 만들기',
    '토스뿌시기 01. 광고전화 차단하기',
    '고객과의 소통을 돕는 서베이 툴 4가지',
    'Linktree had a makeover!',
    'PostCSS, IE 그리고 함수형 프로그래밍',
    '스티비의 프로덕트 디자이너가 일하는 방법',
    'B2B 세일즈 핵심 총정리 "유효한 고객을 제대로 찾고 판매하려면?"',
    '음식점 예약 과정, 링크드인 채용 모델 등 여러 다이어그램 샘플을 확인할 수 있는 곳!',
    '화면만 잘 그린다고, 서비스 기획을 잘하는 게 아니다',
    '새로운 채용 아이템을 찾으세요?',
    "커피 브랜드가 '이것'을 판다고?",
    '마케팅을 넘어 브랜딩으로',
    '대박나는 스타트업 아이디어를 발견하는 법',
    '비전&목표를 실현하는 효과적 방법, 프로덕트로드맵(3)',
    '월간 개발자스럽다 #81',
    'Framer',
    'Brazuca',
    'Gleec',
    'CSS 모듈이란? (feat. vueJS)',
    '감성적인 이공계 소년, 구글 디자인 리드가 되기까지. 2편',
    "스타트업들의 '한글 로고' 사랑",
    '스티비의 프로덕트 디자이너가 일하는 방법',
    '신뢰 자본',
    'Factory Method Pattern',
    'AWS DynamoDB 모델링',
    "Nginx와 Let's Encrypt로 HTTPS 웹 서비스 배포하기 (feat. Certbot)",
    '도커 컨테이너 5분 만에 무료로 배포하기(feat. fly.io)',
    '버튼에 시각적 무게를 두면 행위를 유도할 수 있다',
    'A/B 테스트 계산기 세팅 & 해석하기',
    '#4 토스 PO Session 바이럴 성장과 CC 2탄',
    '일의 매듭 짓기: 개발자의 ABC',
    '뉴닉의 뉴스레터 구독자 GA로 분석하겠슴!',
    '인하우스 UX 리서치의 의미',
    'PO가 느낀 스프린트 방식의 장단점',
    "Zapier's new look",
    '위대한 창업가는 어떻게 탄생할까',
    '안드로이드 TV 플레이어, 책임과 협력으로',
    '자유로운 조직문화가 부럽나요? 이를 위해 리더 & 구성원이 해야 할 일',
    '무신사가 유아인을 가지고도, 무아인을 만든 이유',
    '공헌이익은 정말 의미 없는 지표일까요?',
    '더 나은 고객 경험을 만들기 위해서는 무엇을 해야 할까요?',
    'UTM 파라미터 (3) GA4에서 유입경로 데이터 확인하기',
    'UX 프로젝트 초반에 사용성 가설이 왜 중요할까요?',
    '서비스 구분과 상황에 따라 활용하기 좋은 이메일 내용을 정리해주는 : Mailmodo',
    '리액트 코드에서 버그를 줄이는 방법',
    '앱노트',
    'Oh my Xus!',
    'A/B 테스트의 뒤에 숨은 기초 통계 이해하기',
    '이력서, 웹서비스처럼 만들어야 하는 이유 4가지',
    '#3 토스의 PO Session 아하 모멘트 구하기!',
    '자바스크립트의 새로운 기능들',
    'Retention Plateau의 중심에서 PMF를 외치다',
    'React Query 를 통하여 서버 데이터 관리하기',
    'UXer에게 유용한 툴 Miro',
    '화면 공간을 최대한 절약해야 합니다',
    '[Storybook] Storybook 200% 활용하기',
    '성공적인 콘텐츠를 위한 블로그 글쓰기 팁 12',
    'NPM 워크스페이스와 모노레포',
    'Otherside',
    'UTM 파라미터 (1) 유입채널 데이터는 어떻게 볼 수 있을까?',
    'UTM 파라미터 (2) 쓴다고 다가 아니다',
    'CS팀에서도 데이터로 의사결정 할 수 있어요',
    '실리콘밸리 거물의 깨달음, “성공은 찐-우정에서 나오더라”',
    '스타트업 필독/세계 1등 액셀러레이터 Why, YC?',
    '이메일 마케팅 입문자 가이드',
    '신입/주니어에게 글쓰기가 주는 5가지 혜택',
    '스타트업 사냥하러 샤크가 온다!',
    '보이지 않는 마케팅. 브랜드가 말 없이 제품을 판매하는 방법',
    'Stryds',
    '시장조사 이전에 고객 조사가 필요한 이유',
    'NIKE AJ3 SEOUL SPECIAL KIT',
    '분석가는 아니지만 분석은 해야 한다면',
    '데이터 프로덕트는 결국 프로덕트다 (번역)',
    '프리토타입: 실패의 세계에 오신 걸 환영합니다',
    '웹어셈블리에 주목하라',
    '탐색의 사용성을 높이는 디자인',
    '쉽게 사용하는 채용 지표 3가지',
    '파이토치로 CNN 모델을 구현해보자! (GoogleNet편)',
    '그림으로 쉽게 보는 IP 주소 (하)',
    '시대를 초월한 BX 디자인 바이블',
    '최소한의 컨텐츠만 제공합시다! - UX 디자인 원칙',
    "요즘 브랜드는 이렇게 '커뮤니티' 키웁니다.",
    'Exhibition of Nicolás Muller',
    'D2C 비즈니스 황금기가 끝났다',
    '프론트엔드 프로젝트 최신화 - 1편 : Yarn berry',
    '오아시스가 자꾸 동맹군을 늘려가는 이유는',
    '시장 점유율 3% 기업의 생존기',
    'Converge',
    '제품의 성장단계를 진단하는 초간단 가이드, 그로스사이클',
    '설명은 잘하는데, 설득이 어려울 때',
    '[Best Korea Brands 2022] HUMAN 본질을 파고드는 힘',
    "'데드풀' 라이언 레이놀즈가 마케팅 천재가 된 비결",
    '“나 오늘 동해에서 일해” 야놀자도 ‘워케이션’중입니다',
    '5년만 매출 700억, 오늘식탁의 비결',
    '전년동기 대비, 상반기 거래액이 고속 성장한 스타트업5',
    '메타버스로 세계관 확장하는 기업들',
    '서비스 개발자를 위한 컨테이너 뽀개기 (a.k.a 컨테이너인터널)',
    '디스코드는 어떻게 커뮤니티 툴의 강자가 됐나?',
    '내 맘대로 위클리 뉴스 - 2022년 28주(2022.07.10 - 2022.07.16)',
    '첫 브랜딩',
    '인간 중심 디자인을 위한 5가지 심리학 이론',
    '기획자가 피그마 쓰는 법: 3부',
    'A/B 테스트를 설계할 때의 우리의 진짜 질문',
    '실전에서 써먹는 리더의 피드백 스킬!',
    'UX 디자인? 서비스 디자인?',
    '리디가 검색 과정을 명확하게 구분한 이유',
    '#2 토스의 PO Session 리텐션과 엑티베이션!',
    '명확한 리액트 파일/디렉터리 구조',
    'DynamoDB를 사용하는 Go 서비스의 응답 시간 최적화 #2 TLS Handshake',
    'PHP에서 callable로 배열 필터하기',
    '데이터베이스 migration을 위한 script 만들기',
    '파이토치로 CNN 모델을 구현해보자! (VGGNet편)',
    '작은 브랜드가 꼭 알아야할 카카오 기능 총정리 | 카카오채널 , 카카오싱크 , 채널메시지',
    'TVING',
    '요즘 마케터는 어떻게 일하냐고?',
    '토트넘 초청으로 쿠팡의 효과는 ??',
    '기존 고객부터 신규 고객까지, Video Experiment로 다양한 타겟군에 대한 디지털 포맷 소재의 효과를 검증한 설화수',
    '뉴스레터로 (광고)를 보내기 위해서',
    'Elmillax',
    'Pyla - Brand identity',
    'SNFCC - GIVE ME 5 TRIVIA',
    '요즘 마케팅 업계가 주목한 키워드, 휴식',
    '오늘 몇 개의 광고가 기억나나요?',
    'GA4 필터를 활용한 내부 트래픽 제외하기',
    '50세 한국인의 실리콘밸리 도전기',
    'JavaScript Currying 이해하기',
    '진보된 프로그래밍에 대한 몇 가지 생각',
    '좋은 콘텐츠 글쓰기에 AIDA를 활용하는 방법',
    '2022.7월 FWA가 선정한 크리에이티브',
    '내 삶에 필요한 집착과 투지',
    '알리바바가 외친 “열려라 참깨”에는 열리지 않는 문',
    'New Form Capital',
    'Horror Special with Maplestory',
    '개발자의 성장 가능성은 어떻게 측정 가능한가?',
    '치폴레 앱 가입자가 스타벅스 넘어선 비결',
    'UNFUR Project',
    '핫한 이벤트 텍소노미 taxonomy 를 배우고 싶으시다면! - 1편',
    'Fix Studio',
    '복잡하고 어려운 Redux 적응기',
    '빌 게이츠는 저커버그 못지않게 메타버스에 긍정적이다',
    'Readwise: 읽고 메모하고 밑줄 긋기를 한 곳에',
    'Saslong Ski',
    '뱅크 아닌 유전자 샐러드 사용기',
    'Vue SSR 제대로 적용하기 (feat. Vanilla SSR)',
    '하인즈 케첩은 어떻게 마케팅 맛집으로 소문이 났을까?',
    '유튜브 VS 블로그 성공방정식 3가지',
    '사이 좋게 네트워크를 나눠 쓰는 방법, TCP의 혼잡 제어',
    '가능한 화면 요소를 덜어내고 덜어내자',
    '이더리움 테스트넷 사용법 기초',
    '서비스 종류에 따른 결제 및 구독 화면 사례를 만나볼 수 있는 곳!',
    '원활한 고객 경험을 완성시키는 방법',
    'GraphQL Interface 자동생성으로 빠르게 프론트엔드 개발하기',
    '조직 개편, 어떻게 해야할까?',
    '팀으로 일하기 위해 우리가 생각해 봐야 하는 것들',
    'Giddy Citizen',
    'Evernote의 변화, Notion의 변신',
    '정성적 차이',
    '동일한 Bean(Class)에서 @Transactional 동작 방식',
    '투자자는 어떤 스타트업에게 주목하고 있을까?',
    '글로벌 인플루언서 마케팅에 대해서 알아야 할 5가지',
    '브랜드가 서로 Win-Win하는 콜라보레이션 굿즈',
    '네이버페이vs카카오페이, 간편결제 최강자는? (2)',
    '구글 신호 데이터 활성화로 얻을 수 있는 효과',
    '[2022년 7월] 나스미디어 20대 NPR Target Report',
    '[2022년 7월] 나스미디어 10대 NPR Target Report',
    '오늘의집은 고객을 어떻게 불러들였을까 AARRR',
    '서비스 기획 면접관은 무슨 생각을 할까?',
    '[2022년 7월] 나스미디어 30대 NPR Target Report',
    '이것 때문에 입사전환율이 높아진다',
    '영국회사에서 사용하는 UXUI관련 영어 표현들 (1)',
    '노션의 커뮤니티를 기반성장 전략',
    'HeimatFrisch / Branding',
    '토스는 왜 알뜰폰 사업을 시작할까요?',
    '#1 토스의 PO Session CC를 아시나요?',
    '구글 검색을 흔드는 아마존, 레딧, 틱톡',
    '여름휴가 시즌, 기억해야 할 노무 이슈',
    '구글 서치 콘솔 시작하기',
    '22년 상반기 M&A된 스타트업 데이터가 궁금하다면?',
    'reindex 성능 및 속도 최적화 방법',
    '내 맘대로 위클리 뉴스 - 2022년 27주(2022.07.03 - 2022.07.09)',
    'BentoML 을 활용하여 딥러닝 모델 API 서빙하기',
    '[UI 명칭] [Menu UI] 이제 땡땡땡 아이콘 말고 이름으로 불러주세요.',
    'Google Translate 서비스 사용 불가 오류 해결하기',
    '[2022년 7월] 나스미디어 NPR Target Infographics',
    '데이터 분석을 극대화하는 고객 인터뷰 만들기',
    '[2022년 7월] 나스미디어 40대 NPR Target Report',
    '다양한 종류의 디자인 버튼과 적용 방법을 확인할 수 있는 곳!',
    '네이버페이vs카카오페이, 간편결제 최강자는? (1)',
    '보고 싶은 것만 보는 리더?! 확증편향에 빠지지 않으려면',
    '간단한 프로미스(Promise, 약속)을 직접 구현해보자!',
    'Image Tracer: 비트맵을 벡터로 바꿔주는 피그마 플러그인',
    '카멜, 파스칼은 가라. 세종대왕 표기법이 온다 (네이밍 컨벤션)',
    "'키오스크, UX가 문제는 아닌가요?' '",
    '토스가 알뜰폰 시장에 진출하는 이유',
    'GA4 전환 이벤트 추가하기',
    'FGD, FGI, 좌담회 중 뭐가 맞는 말일까? 포커스 그룹 조사 알아보기 ',
    'PHP Annotated – July 2022',
    '데이터에 신뢰성과 재사용성까지, Analytics Engineering with dbt',
    'IT 인력 부족, 채용 풍경도 바꿨다',
    'ARCHIVEAT Brand Identity Development',
    '크레이버',
    '27th Internatonal Poster Biennale',
    '좋은 git commit 메시지를 위한 영어 사전',
    '팬데믹 전후 3년간 식생활 분야에서 일어난 가장 큰 변화 4가지',
    '[7월3주]야나두, 메타버스 품고 6천억 기업가치 돌파',
    'Lost Geometry 3D Illustrations',
    'useEffect가 나를 열받게 했다',
    '감성적인 이공계 소년, 구글 디자인 리드가 되기까지. 1편',
    '사용성 테스트 과제 시나리오 요소: 배경과 내용',
    '드롭다운은 최후 수단이어야 합니다',
    '광고영역에도 UX가 필요하다',
    '새 정부 노동정책과 HR의 변화 방향',
    '프로덕트 기능의 우선순위는 어떻게 정하는 것이 좋을까?',
    '서브타이핑, 서브클래스, 개체 지향 프로그래밍의 문제',
    '브랜딩과 마케팅은 어떻게 다를까?',
    '파이썬으로 유저 리뷰 수집하기',
    'Android Studio에서 CPU 프로파일러를 사용하여 UI 버벅거림을 감지해 보세요',
    '어떻게 해야 변화의 흐름을 남들보다 빨리, 잘 읽을 수 있을까?',
    '네이버 성과형 DA 신규 기능 파헤쳐 보기',
    '평사원 히라이 가즈오가 소니를 살린 비결',
    '네이버 NOW가 검색화면을 개선한 이유',
    '좋아하는 일을 업으로 만들고 싶다면 이렇게 하세요! with #스몰브랜더 #뉴스레터',
    '스티브 잡스가 사랑한 의사결정 구조 : DRI',
    'Compound Component Pattern (합성 컴포넌트 패턴) 알아보기',
    'System Usability Scale 측정 방법',
    '[2022 상반기] 스타트업 투자 동향 리포트',
    "창업자에게 '회복탄력성'이 중요한 이유",
    "'Yes or Yes?' 질문법이 탁월한 이유",
    '프로덕트 디자이너는 징검다리를 잘 만들어야 한다',
    'CI/CD (지속적 통합/지속적 제공)',
    '초기 스타트업 Go-to-Market 모델 수립 플로우차트(The GTM Motion Flowchart)',
    '리눅스 시스템 로그 1편 – 입맛대로 설정해보자',
    '디자이너를 위한 좋은 앉기 자세',
    'Documentarist',
    '리액트 상태 관리의 새로운 흐름',
    'OnePlus Community',
    'BACK TO BASICS',
    '안 된다고 말하는 사람의 이유',
    'AWS 워크스페이스를 이용한 망분리 환경 구축하기',
    'Aaron Poe & Co',
    '리서치와 꼭 맞는 대상자 선정하기',
    'PlanB 브랜드 리뉴얼 프로젝트',
    '중고거래 검색 랭킹 개선하기: 카테고리 잘 활용해보기',
    '[책추천]임파워드-PM,PO가 팀의 성과를 내려면?',
    '웹로그 JavaScript SDK 개발 맛보기',
    '무료 피그마 컴포넌트를 카테고리에 따라 확인하고 복사할 수 있는 곳!',
    '초성 검색 UX 디자인 가이드 원칙 VS 한번쯤생각하기',
    '사람들에게 선택 받는 콘텐츠의 3가지 요건',
    '제로 파티 데이터, 더 나은 개인화를 위한 필수 요건',
    '진짜 고객의 문제를 발견하는 인터뷰하기 (2탄)',
    'IT 스타트업들은 무조건 지름길을 선택합니다',
    '컴포트존 벗어나기',
    '[핀테크in] 투자 심리 위축에 핀테크 “기업가치 낮춰서라도 투자유치”',
    '[차원축소] 변수 추출법 - Multi-Dimensional Scaling (MDS)',
    'UXW Study│현업의 괴롬 포인트 5',
    '옵트인 vs 옵트아웃, 유리천장 깨기 위한 리더 선발 방식은?',
    '맛집 vs. 숙소 vs. 교통, 2022 해외여행 소비 계획 미리보기',
    '처음 PM이 된 당신에게 필요한 넓고 얕은 지식 ',
    'Illustration Play 3',
    'OFFF BARCELONA 2022 & tonik',
    'D.D,D (Deserve Dessert Darling)',
    '내 맘대로 위클리 뉴스 - 2022년 26주(2022.06.26 - 2022.07.02)',
    '핏펫 개발팀의 소통을 위한 협업툴의 사용법',
    '탐색 PO 입장에서 "구매"와 "예약"은 무엇이 다를까',
    '[북리뷰] 100일을 디자인하라',
    '[스플X수오재] 나의 소중한 기술과 정보, 영업비밀로 보호받을 수 있는 방법',
    '알아 두면 좋은, 테마별 유튜브 채널 8',
    '소프트웨어 엔지니어의 이력서',
    '소셜미디어가 구독서비스를 도입할 수밖에 없었던 이유',
    '기아와 KT는 왜 뱅크샐러드에 투자했을까요?',
    "ESG 잘 하는 기업은 '이런' 콘텐츠를 만든다",
    'NODE Berlin Oslo - typo/graphic posters',
    '예비창업자가 꼭 알아야 할 지식재산 - "일레클" 사례',
    'UX 디자인은 형식적으로 하면 절대 안 된다',
    '배포를 빠르게 - DIY(Deploy It Yourself)',
    '딜라이트룸에서는 재무제표를 프로덕트의 관점으로 바라본다고?',
    '프로세스 이코노미, 프로세스 브랜딩',
    '콘텐츠 수익화, 어떻게 해야 할까?',
    '타겟 혹은 브랜딩에 집중한 색다른 웰컴키트',
    '보이 스카웃 규칙',
    '요즘 기업이 채용 브랜딩을 하는 이유',
    '[리딩 노트 4] 인지 착각(Cognitive Illusion)',
    '일하는 사람에게 중요한 3가지 자질',
    '사장님 여기 열선시트하나 추가요!',
    'OTT브랜드네이밍의 기원을 찾아서',
    '유저 행동 데이터를 티끌모아태산으로 (hotjar, google analytics)',
    '글로벌 스타트업, 가자. 세계로',
    '지속가능한 스타트업 되려면? ‘스마트 진성리더십’',
    'OpenID(OIDC) 개념과 동작원리',
    'Dafi Kühne - typo/graphic posters',
    'Solana Summer Camp - logo animation',
    'Periplo, visual identity',
    'UX에서 의미성의 5가지 요소',
    '사용자의 눈길을 끄는 추천 제공하기',
    'React-Query 도입을 위한 고민 (feat. Recoil)',
    '딥링크의 모든것 (feat. App Link, Universal Link, Deferred DeepLink)',
    '구글 설문 데이터 노션 데이터베이스에 입력하기',
    '코로나 시대에 사용자 만나기',
    "신입 PM/PO가 '1인분'을 해내려면",
    '알라미 구독 지표 개선을 이끌어낸, 지표 모니터링 사례',
    '조건부 (if~else) 로직 테스트코드에서 사용하지 않기',
    '부정확한 데이터 가공이 계속되는 이유',
    '국내 OTT 플랫폼 성장 분석 (티빙, 웨이브, 왓챠)',
    'TriviaWhizz',
    '2022년 2분기 스타트업 투자동향',
    'LoadRunner Cloud 구조 간단히 살펴보기',
    '이커머스는 정말 유통의 왕이 되었나요?',
    'CausalImpact는 어떻게 이벤트 효과를 추정할까?',
    'TANG! | Inspiration Archiving App',
    'Hyundai Ioniq 6 EV is a personal mobile studio on four wheels for content creators - Yanko Design',
    'Compound',
    'Beeper',
    'Solana Summer Camp',
    '잇다소프트',
    'An image from the inside. Poster',
    '시대를 초월한 UX 디자인 바이블',
    '구글 UX디자인 EP07. 유저스토리',
    '모니모',
    'OLLOPA',
    'Heart Aerospace',
    '실전 UI/UX -   피플카 고객경험 개선하기',
    'Replica 에 Write 가 된다고?',
    '문제해결, 의사결정 등에 도움이 되는 활용방안이 모여있는 곳!',
    '실전 Infinite Scroll with React',
    'JVM + Container 환경에서 수상한 Memory 사용량 증가 현상 분석하기',
    '2022년에 기대할 수 있는 브랜딩 트렌드 12가지',
    '2022년 iOS16 시장은 스티브 잡스가 이끈다.',
    '‘만타(Manta)’ 제품팀장 이윤재님 인터뷰',
    '인플레 시대에 아마존, 월마트가 가입자 지키는 법',
    '7월 2주차 스타트업 투자동향',
    'CentOS의 향후 대안 Rockcy Linux와 Ubuntu',
    '메타인지를 높이는 9가지 방법',
    '다짜고짜 배워보는 시계열 분석 | 패턴 쪼개기 (Seasonal Decomposition) - 1편',
    'Pop in the city: 여름에 어울리는 플라스틱 질감',
    '디마 기초지식 : 매체와 광고주, 어트리뷰션 툴',
    '보낸사람: 북크루, 당신의 책장을 더욱 풍요롭게',
    '컨셉으로 승부 보는 아트 크리에이터',
    'MZ세대의 노동시장 진입, 노사관계 변화는?',
    '[차원축소] 이상치 탐지 기법 - 이상치 탐지 개요 및 밀도 기반 이상치탐지',
    '지식 그래프를 이용한 인재 추천 시스템',
    'UI 컴포넌트 - 체크 박스, 라디오 버튼, 토글 차이',
    '대중을 만족시키려는 제품이 실패할 수 밖에 없는 이유',
    '"고객이 원한다"는 것의 정의',
    '지표 정의에서 분석은 끝난다',
    'Largest Contentful Paint (LCP) 최적화하기',
    '왓챠가 검색 화면을 개선한 이유',
    'UI설계에 필요한 용어들-2',
    'Carrying Capacity 심화편',
    '사용자 조사 체험단 운영하기 노하우',
    '언제 끝날지 모르는 코로나...구성원 관리는 원온원으로!',
    '쉘 스크립트와 함께하는 달록의 스프링부트 어플리케이션 배포 자동화',
    'GA4 버튼 클릭 데이터 수집하기',
    '인플레이션이 쿠팡의 ‘호재’라고?',
    '아마존이 배달까지 품었을 때 일어날 일',
    '[차원축소] 변수 선택법',
    'vh 버그 해결방법(dvh 사용법, js 계산법)',
    '닥터나우',
    'Untitled UI Icons- Free Icons for Figma',
    "Mengmeng and page's fantasy new world",
    '피드백 주는 컴포넌트, Toast/Snackbar(1)',
    'Next/Image를 활용한 이미지 최적화',
    '퍼포먼스 마케팅, A/B 테스트가 최선인가?',
    'Product for Net Zero',
    'Tableland',
    '사용자 습관 형성을 위한 6가지 방법',
    '이직하고 가장 먼저 파악해야 하는 것은?',
    '클릭률을 높일 수 있는 광고 소재 만들기',
    "어때요? '컴포넌트' 참 쉽죠?",
    '핏펫몰 개발 스쿼드의 git 전략 연대기',
    '디자이너가 만능 엔터테이너는 아니잖아요',
    'Java GC 튜닝',
    '머릿속 직관(시스템 1)과 사고(시스템 2)',
    '브라우저의 프리로드 스캐너(pre-load scanner)와 파싱 동작의 이해',
    'Web 3.0시대에 알면 좋을 것들: NFT',
    '초성검색이 뭐예요?',
    '자기 이야기를 전하는 리더를 추앙하는 시대',
    '노란색에 진심인 오뚜기의 팝업 스토어는?',
    '프러덕트 디자이너가 N잡을 찾아내는 방법',
    'PHP 열거형(enumerations) 정리',
    '눈으로 기억되는 리디',
    '소비자를 속이는 e-commerce 서비스들의 교묘한 UIUX : 다크 패턴(Dark Pattern)',
    'Google Password Manager',
    '토스 브랜드 마케팅 매니저 의 파운드(FOUND) 기획 노트',
    'Pizza 24 Icons',
    'React 개발자를 위한 피그마 플러그인 개발',
    '구글 UX디자인 - 디자인 스프린트',
    '고객의 구매 여정 데이터 분석하기(feat. Amplitude)',
    '개발자와 소통 잘하는 HR담당자 되는 법',
    '품절대란이 사라진 스타벅스 마케팅',
    '우당탕탕 주문서 개발기',
    '고객 페르소나로 그로쓰 하기!',
    '한 달만에 브랜드 전시회를 만들라니요',
    '카카오 어드민 UI 컴포넌트를 모노레포로 개발하여 얻은 것들',
    'Journey Map을 어떻게 만드는 것일까?',
    '네트워크 커널 튜닝',
    'UXW Study│15일 라이팅 챌린지',
    '나만의 eslint 룰 만들어보기',
    '데이터프로젝트의 단단한 초석 쌓기',
    '데이터로 설명 가능한 광고 기획법',
    'Hennessy House of Moves: 미니 VR 쇼케이스 경험',
    '최근 화제된 반응형 웹사이트가 궁금하다면? 클릭!',
    '데이터 분석의 코어 : 수학 아니고 수학적 생각',
    'Arcadia',
    '모바일 개발자를 위한 30-60-90일 성공 계획서',
    '디자인에 생각을 담아야 하는 이유',
    'Motion For Mobile',
    '승승장구하는 틱톡이 유독 유럽과 미국서 고전하는 이유',
    '카카오는 왜 금방 구글에 무릎을 꿇었나',
    'neofetch 를 활용하여 terminal 이쁘게 사용하기',
    '새로운 글로벌 시장으로의 도전',
    "'전자상거래의 여왕'은 핀터레스트를 어떻게 바꿀까",
    '고객 앞으로! 직진하는 브랜드들',
    '코로나 탓에 떠난 방문객 잡기 위한 디즈니는 이런 생각까지 했다',
    '브랜드의 높이와 깊이',
    '[머신러닝][시계열] AR, MA, ARMA, ARIMA의 모든 것 - 개념편',
    '연세우유는 있는데 왜 고대우유는 없는 걸까?',
    '리더가 바라보는 ‘정상으로 가는 가장 빠른 방식’',
    'CSRF 란 무엇일까?',
    'Urban Jungle',
    'I/O에서 발표된 폼 팩터에 대해 꼭 알아야 할 3가지 사항을 살펴보세요',
    '나다운 글쓰기 수련법',
    "'변화 수용성'을 높이기 위한 7가지",
    '이 광고 때문에 비행기표를 끊었어요',
    'Gusto // Sleepy Planet',
    '메타버스는 알겠는데, 메타커머스는 뭔가요?',
    '리모트워크 시대, 성장을 경험하게 하는 업무환경의 중요성',
    '[디자인 이론] IRI 색채 이미지 공간',
    '무슨 말인지 헷갈리는 글을 쓰지 않기 위한 체크 포인트',
    'TV에 자주 나오는 연예인은 왜 점점 더 예뻐지는 걸까',
    '옴니채널 마케팅의 오프라인 매장 리부팅',
    '골프인구500만, 골프스타트업 MAU등 데이터 비교분석',
    'Comport zone과 리더',
    'Github 공동작업을 위한 안전한 fork 사용법(2)',
    '모션, 토스가 금융을 즐겁고 쉬운 경험으로 만드는 방법',
    'Mr.377 | 377先生的全7人生',
    '잔디',
    '문화 차이가 UX에 미치는 영향',
    '토스는 이렇게 시작했습니다 | PO SESSION',
    'Junior 개발자의 글로벌 서비스 경험기 1탄',
    '어쨌거나 회사를 다녀야 한다면',
    '스타트업 리더에게는 ‘극단적 솔직함’이 중요하다?',
    'npm, yarn, pnpm 비교해보기',
    'Alex Beige',
    'Make smaller Docker images',
    '인터랙티브 콘텐츠로 진정성있는 리드 모으기',
  ],
  articles = [
    'CSS 모듈은 CSS를 모듈화하여 사용하는 방식을 말한다. 클래스명은 모듈 컴파일러에 의해 고유한 클래스명을 가지게 된다. 클래스명이 고유해지므로 CSS의 범위를 지역적으로 한정시킬 수 있는 장점이 있다. CSS 클래스명을 생성할 때는 파일 경로, 파일 이름, 클래스 이름, 해쉬값 등이 사용된다. ❓ CSS module을 사용하면 CSS의 적용범위를',
    'Vue.js에서 컴포넌트를 만들 때 화살표 함수(arrow function, =>)를 사용하는 경우 정상적으로 this 키워드를 찾지 못하는 현상이 있었습니다. 간단하게 코드를 통해 문제를 살펴보겠습니다. 1.1. HelloWorld.vuePermalink HelloWorld 컴포넌트의 methods 속성의 hideAndVisible 함수를 화살표 함수 형',
    'Android는 앱에서 프레임을 생성해 이를 화면에 표시함으로써 UI(사용자 인터페이스)를 렌더링합니다. 사용자와 앱의 원활한 상호 작용을 보장하려면 앱은 각 프레임을 렌더링할 때 기기별 새로고침 빈도를 초과해서는 안 됩니다. 예를 들어 Pixel 6에서는 초당 최대 90 프레임을 렌더링할 수 있는데, 이는 각 프레임을 11ms 미만으로 렌더링해야 한다는',
    '최근에 회사에서 기존에 AWS에서 서비스하던 서비스를 ALI 클라우드에서 제공해야하는 일이 있었다. 따라서 데이터베이스 스키마와 마스터 데이터를 새로운 클라우드 환경으로 이전을 시켜줘야 했다.\n비교적 규모가 큰 서비스는 아니여서, 덤프를 이용해서 간단하게 이전하였고, 데이터베이스 스키마 및 마스터 데이터를 쿼리문 형태로 만들어서 GIT으로 형상관리를 하였다',
    'OCP(Open/Closed Principle)확장에는 열려 있으나 변경에는 닫혀 있다.풀어서 이야기하면, 이는 소프트웨어에 변경사항이 있을 때에, ‘확장할 때에 구현체가 변경될 수 있다. 그렇지만 인터페이스를 사용하므로 클라이언트 소스에는 변경이 없다.’는 뜻지난글에서 ‘클라우드 파일 시스템’ 예시 참고위의 코드는 MemberService(클라이언트)에서',
    'berry 에서 새롭게 추가된, 패키지를 수정해서 사용할 수 있도록 하는 patch: 프로토콜과 yarn patch, yarn patch-commit 커맨드에 대해 간단히 소개해보려 합니다.1. yarn patch &lt;패키지명&gt;2. 1에서 출력 된 path 안의 패키지를 편집3. yarn patch-commit -s &lt;1에서 출력 된 path',
    '최근 컬리에는 대규모 시스템 개편이 있었고, 이에 따라 저희는 검색 인덱싱 파이프라인 구조를 변경해야 했습니다. 이 기회에 카프카를 조금 더 깊게 들여다볼 기회가 있었는데요. 컬리 기술 블로그를 통해 그 경험을 공유드리고자 합니다. 포스팅은 2편에 걸쳐 공유할 계획이며 이번 포스팅은 몇 가지의 카프카 설정 튜닝을 통해 메시지 처리 스루풋을 높이고 불필요한',
    'Vue.js에서 컴포넌트를 만들 때 화살표 함수(arrow function, =>)를 사용하는 경우 정상적으로 this 키워드를 찾지 못하는 현상이 있었습니다. 간단하게 코드를 통해 문제를 살펴보겠습니다. 1.1. HelloWorld.vuePermalink HelloWorld 컴포넌트의 methods 속성의 hideAndVisible 함수를 화살표 함수 형',
    'Python It’s Time to Say Goodbye to These Obsolete Python Libraries 기존의 익숙한 라이브러리가 아니라 새로운 라이브러리가 궁금하시다면 이 기사를 참고해보세요. map() vs submit() With The ProcessPoolExecutor in Python ProcessPoolExecuto',
    '프론트엔드 개발을 하다 보면 빠짐없이 등장하는 주제 중 하나는 ‘어떤 기준으로 컴포넌트를 나눌 것인가’라고 생각합니다. 마찬가지로 카카오페이지 웹 파트도 이 주제로 여러 가지 시행착오를 겪어 왔습니다. 현재는 Harry가 소개해 주신 Atomic Design Pattern을 적용해 UI 컴포넌트를 나누는 기준으로 활용하고 있습니다. (https://fe-d',
    '얼마전 핏펫은 커머스 솔루션에서 자사 커머스 플랫폼으로 이전을 하였습니다. 이때 DB 마이그레이션을 하면서 겪은 일들에 대하여 기술하려고 합니다.비개발자가 자신의 커머스 사이트를 쉽게 만들 수 있는 솔루션이며, 대표적으로 까페24 쇼핑몰, NHN 커머스의 고도몰, Shopify 등이 있습니다.커머스 솔루션을 사용하면, 쉽게 커머스를 런칭할 수 있고 많은 사',
    '종종 사람들은 함수 합성이 일종의 신성한 진리처럼 말합니다. 향을 피우고 거룩하게 묵상해야하는 원리처럼 느껴지기도 합니다. 그러나, 함수 합성은 그렇게 복잡하지 않습니다. 아마 당신도 함수 합성에 대해 깨닫든, 깨닫지 못하든 항상 사용할 것입니다. 왜 함수형 프로그래머들은 함수 합성에 대해 열광할까요? 뭐가 그렇게 대단할까요?함수 합성은 두 개의 함수를 하',
    '웹 서버를 다시 도입하면서 웹 플랫폼 기능들을 활성화 할 수 있었고, 각 프로젝트 담당자들이 권한을 나눠가지면서 저마다의 프로젝트 요구사항에 맞춰 SSR 같은 서버 측 기법들을 자유롭게 시도해 볼 수 있게 됐어요.자체 웹뷰 시스템을 더 고도화하는 방법을 선택할 수도 있었겠지만, 앞으로 계속 발전할 웹 플랫폼을 더 잘 활용하기 위해 더 “Webby”한 방식을',
    '카프카를 사용하여 환경을 구성하는 과정에서 확장성이 필요한 서비스를 운영하기 위한 고민이 있었습니다.일면의 가용성이나 확장성에 대해서는 카프카는 아주 훌륭한 도구였으나 또 다른 측면에서 딱딱하게 구는 부분도 있었습니다. 리파티셔닝과 리밸런싱 카프카가 제공하는 기능의 몇 가지는 파티션이라는 구조를 기반하고 있습니다. 일단 카프카는 기본적으로는 메시지의 순서',
    '우선 테라폼으로 GCP 인프라를 조작하기 위해서는 권한이 있는 키 파일이 필요합니다. GCP 콘솔에 접속해서 key file을 생성해봅시다. 아래 이미지를 따라오시면 됩니다. console.cloud.google.com 적당한 “Service account name”을 입력하고 “CREATE AND CONTINUE” 합니다 서비스 계정 이름은 크게 중요하지',
    '중첩된 레이아웃: 중첩 라우트를 사용하여 복잡한 애플리케이션을 구축합니다.서버 컴포넌트에 대한 설계: 하위 트리 탐색을 최적화합니다.데이터 페칭 개선: 워터폴을 피하면서 레이아웃에서 페치합니다.리액트 18 기능 사용: Streaming, Transitions, 그리고 Suspense가 있습니다.클라이언트, 서버 라우팅: SPA와 같은 동작을 사용하는 서버',
    'Pip constraints files Pip를 사용해서 특정 버전으로 제한하셔야 된다면 이 기사를 참고해보세요. 4 Pandas Anti-Patterns to Avoid and How to Fix Them Pandas에서 자주 하는 4가지 실수를 소개하는 기사로 데이터 분석을 자주 하시다면 이 기사가 많은 도움이 될 것 입니다. Javasc',
    "HTML에서 파이썬 코드를 작성할 수 있다고? 아나콘다 공식 트위터에서 밝힌 파이스크립트의 소식 ⓒTwitter 지난 5월, PyCon US 2022 컨퍼런스가 진행됐습니다. 이번 PyCon US 2022에서 가장 주목을 받은 주제 중 하나는 바로 '파이스크립트(PyScript) 프로젝트'인데요. 아나콘다(Anaconda)*는 HTML 내부에서 직접 파이",
    '최근에 회사에서 기존에 AWS에서 서비스하던 서비스를 ALI 클라우드에서 제공해야하는 일이 있었다. 따라서 데이터베이스 스키마와 마스터 데이터를 새로운 클라우드 환경으로 이전을 시켜줘야 했다. 비교적 규모가 큰 서비스는 아니여서, 덤프를 이용해서 간단하게 이전하였고, 데이터베이스 스키마 및 마스터 데이터를 쿼리문 형태로 만들어서 GIT으로 형상관리를 하였다',
    'iOS 프로젝트는 Xcode Project 나 Workspace 를 관리하는 도구(iOS 쪽에선 사실상 XcodeGen/Tuist 를 의미하겠죠) 를 사용하고 있지 않는 상태였습니다.Squad-based 프로덕트 팀에서 여러 iOS 개발자가 효율적으로 협업하기 위해선 프로젝트 관리 도구가 다른 무엇보다 중요한 인프라라고 생각했기에, 합류 후 팀에서 가장 먼',
    '데이터 리터러시를 “데이터를 활용해 문제를 해결할 수 있는 능력“이라고 정의합니다.   데이터 활용 역량은 어떤 데이터를 보고, 어떤 의사결정을 내리는지에서 잘 드러납니다. 과거에는 데이터를 빠르게 보여주기만 하면 잘 활용될 수 있을 것이라고 생각했고, 협업팀의 요구 사항에 맞게 데이터를 아주 빠르게 제공해왔습니다. 하지만, 이 과정에서 느꼈던 가장 큰 문',
    '이야기하기 전에 앞서 프로그램의 탄생 후 프로그램간 통신 기술들을 간략히 되짚어 보면, 단일 머신에서는 File, Memory, UNIX PIPE, RPC, Socket 등의 기술들로 행해졌고, 물리적으로 분리된 머신에서는 HTTP, CORBA, RMI, SOAP 등의 웹서비스 춘추전국 시대를 거쳐 현대에 이르러 웹서비스의 통신방식의 대부분은 json 기반',
    'PostCSS는 파일 단위로만 처리한다 이름에서부터 알 수 있듯, PostCSS는 원래 ‘후처리기’ 용도로 개발되었습니다. 전처리기나 후처리기나 트랜스파일러라는 점은 똑같긴 해서, 중첩(nesting) 같은 기능을 겸사겸사 지원을 하는 것 뿐이지요.때문에 PostCSS 플러그인의 대부분은 ‘여러 파일을 넘나드는 분석’을 하지 않습니다. 그저 파일 하나를 파',
    'GitHub Skills GitHub을 대화형으로 학습할 수 있는 공식 사이트 GitHub Skills를 공개했습니다. GitHub Actions 기반으로 제작되었으며 기존에 제공하던 Learning Lab은 2022년 9월 1일부터 지원하지 않는다고 합니다. #learn (번역) 주의 깊게 XMLHttpRequest 재시도하기 HTTP 요청에서 일시적',
    'CSS 모듈은 CSS를 모듈화하여 사용하는 방식을 말한다. 클래스명은 모듈 컴파일러에 의해 고유한 클래스명을 가지게 된다. 클래스명이 고유해지므로 CSS의 범위를 지역적으로 한정시킬 수 있는 장점이 있다. CSS 클래스명을 생성할 때는 파일 경로, 파일 이름, 클래스 이름, 해쉬값 등이 사용된다. ❓ CSS module을 사용하면 CSS의 적용범위를',
    '팩토리 메소드는 다음과 같은 상황에 사용합니다. 어떤 클래스가 자신이 생성해야 하는 객체의 클래스를 예측할 수 없을 때 생성할 객체를 기술하는 책임을 자신의 서브 클래스가 지정했으면 할 때 객체 생성의 책임을 몇 개의 보조 서브 클래스 가운데 하나에게 위임하고, 어떤 서브 클래스가 위임자인지에 대한 정보를 국소화하고 싶을 때 1.1. 팩토리 메소드 패턴 구',
    'DynamoDB를 소개하며 RDBMS ERD기반 설계에서 DynamoDB로 Reverse Modeling하는 방법을 공유합니다. 1. DynamoDB 도입 배경 현재 스타트줌(https://start.zum.com/)에서 개인 별 배경화면 / 레이아웃 / 위치설정 / 사이트 바로가기를 설정할 수 있습니다. 해당 데이터들은 브라우저 로컬 스토리',
    '우리의 목표는 위 그림과 같다. 클라이언트와 WAS 사이에 리버스 프록시 서버를 둔다. 클라이언트는 웹서버처럼 리버스 프록시 서버에 요청하고, WAS는 리버스 프록시로부터 사용자의 요청을 대신 받는다. 클라이언트는 리버스 프록시 서버 뒷단의 WAS의 존재를 알지 못한다. 이로인해 보안이 한층 강화되었다. 이때, 리버스 프록시 서버에 SSL 인증서를 발급해두',
    '도커(Docker)와 컨테이너를 사용하면 어디서든 실행 가능한 컨테이너 이미지를 만드들 수 있습니다. 하지만 도커 이미지를 배포하는 과정에는 전혀 다른 차원의 어려움이 존재합니다. 바로 관리형 도커 배포 시스템이 매우 복잡하다는 점인데요. 운영 환경에 사용하는 AWS의 EKS나 ECS, GCP의 GKE나 Cloud Run, Azure의 AKS, Contai',
    '영업 전략에는 Always Be Closing(줄여서 ABC)이라는 유명한 표어가 있다. 거래를 성사시키다라는 뜻의 “Close a deal”이라는 표현에서 온 문구다. 영업 사원의 궁극적인 목표는 거래를 성사시키는 것이다. 그러므로 언제나 거래를 성사시킬 기회를 호시탐탐 노리고 있으라는 뜻으로 해석된다. 프로그래머의 궁극적인 목표는 사업이 돌아가게 해주는',
    '이번 스프린트에서는 기존 플레이어 화면의 UI/UX를 개편하고 프로젝트 구조 자체도 리팩토링을 하기로 계획했습니다.기존 안드로이드 TV 플레이어기존 안드로이드 TV 플레이어 화면은 다양한 기능을 제공하지 못했고, UI면에서도 사용자들에게 불편한 점이 많았습니다.그 뿐만이 아니라 프로젝트 구조도 레이어간 결합도가 높다거나 한 객체에 역할이 불확실하게 몰려있었',
    '최근 대규모 리액트 앱 코드베이스에서 작업하는 동안 우리는 세 가지 종류의 버그 때문에 큰 고통을 겪었습니다. 버그는 컴파일 시간이나 런타임 오류가 아닌 예상치 못한 코드의 동작들 때문이었습니다.컴포넌트가 사용자 이벤트에 따라 업데이트되지 않습니다.컴포넌트가 사용자 이벤트에 따라 부분적으로 업데이트됩니다.컴포넌트가 예기치 않게 렌더링됩니다.처음에 우리들은',
    '프론트엔드 개발자에게 자바스크립트는 떼려야 뗄 수 없는 언어입니다. 자바스크립트는 ECMAScript의 스펙을 준수하는 언어인데요. 2015년 이후로 매년 새로운 스펙이 발표된다는 사실을 알고 계셨나요? 지난 6월에도 어김없이 새로운 사양인 ES2022이 발표되었는데요. 이번 글을 통해서 어떠한 기능들이 ES2022에 새롭게 포함되었는지, 2023년에는 어',
    '실무에서 컴포넌트를 만들고 프로젝트를 진행하다보면, 어떻게 하면 조금 더 간편하고 쉽게 상태를 관리할 수 있을까? 에 대한 고민은 늘 따라옵니다.React 진영에서는 이 문제를 크게 두가지 방법으로 해결하고 있습니다. 바로 Context API와 Redux 입니다. 이 방법들을 통해 전역 어플리케이션의 내부상태를 보다 쉽게 관리할 수 있습니다.그러나 프로젝',
    'Storybook은 UI 개발환경이며, 동시에 UI 컴포넌트 Playground 라고 할 수 있습니다. UI를 컴포넌트 단위로 테스팅 해볼 수 있는 툴입니다. React의 특징 중 하나가 잘 분리시킨 컴포넌트를 이용해 재 사용성을 높이는 것 임에 미루어 봤을 때, Storybook은 React와 꽤나 잘 어울리는 UI 테스팅 툴 이라고 생각합니다. 🙆🏻‍',
    '모노레포 솔루션은 lerna, yarn 등 여러가지가 있다. 이유는 모르지만 최근 lerna는 지원 종료한다는 소식을 들었다. 때가되면 이 기술을 사용해 봐야지 마음먹은 내겐 아쉬운 소식이다. 그만큼 모노레포 기술은 나온니 꽤 지났다. 강의를 만들 때 여러 개 저장소를 사용한다. 수강자 분들이 올린 질문 중에는 모노레포를 사용해 강의를 만들었다면 헷갈리시지',
    '글쓰기는 초기 개발자 커리어에 도움이 된다. 어쩌면 경력 내내 어마어마한 도움을 줄 수 있다. 글 쓸 시간에 알고리즘 하나 더 풀겠다는 분들이 있다면 가던 길을 멈추고 글쓰기의 혜택을 살펴보길 바란다.',
    '인공지능과 머신러닝의 최근 적용 사례를 보고 있자면 매우 큰 단절이 관찰되고 있는 것 같습니다. 실리콘 밸리의 빅테크 기업과 같은 한쪽에서는 머신러닝을 적용하는 것이 매우 당연한 것으로 여겨집니다. 사실인즉슨, 우버나 에어비앤비, Zalando, 심지어 틱톡과 같은 회사들은 머신러닝이 없이는 기능할 수조차 없습니다. 다른 한편으로는, 규모가 큰 전통적 대기',
    '웹어셈블리는 중대한 전환점을 마주하고 있습니다. 앞으로 몇 년 동안 컨테이너화에서 플러그인 시스템, 서버리스 컴퓨팅 플랫폼에 이르기까지 기술 영역 전반에 걸쳐서 웹어셈블리의 채택은 증가할 것이라고 예상합니다. 이 글에서는 웹어셈블리가 무엇인지, 관련된 기술이 무엇이 있는지, 오늘날 어디에 사용되고 있는지에 대해 설명하려 합니다. 또, 잠재적으로 영향력이 큰',
    'GoogleNet이 소개된 논문의 제목은 Going Deeper with Convolutions로, 다음 링크에서 확인해보실 수 있습니다. 링크 일반적으로 모델의 depth와 width가 커지면 parameter가 많아지게 되고, 파라미터 수가 많게되면 모델이 Overfitting될 수 있습니다. GoogleNet은 최대한 파라미터를 줄이면서 네트워크를',
    '왜 IP는 네트워크 부분과 호스트 부분의 구분 점을 고정하지 않았을까요? 또 어떻게 하면 이 둘을 구분할 수 있을까요?이번 포스팅에서는 이 질문들에 대한 해답을 찾아보겠습니다.미니 돈가스는 4개만?학교에서 급식을 먹는다고 생각해 봅시다. 만약 한 번 배식할 때마다 정해진 양만큼만 받을 수 있다면 어떨까요? 가령 미니 돈가스는 한 번 받을 때마다 4개씩만 주',
    '현재 채널톡 웹팀에서는 많은 일들을 하고 있어요. 그래서 이 어플리케이션들을 관리하는 프로젝트도 많이 나뉘어져 있습니다. 채널톡 앱을 담당하는 desk, 고객의 문의 화면을 담당하는 front, 디자인 시스템인 bezier, 채팅 경험을 향상시키는 WYGIWIG 프로젝트인 prosemirror-toolkit, 100만건 이상의 테이블 데이터들을 잘 처리',
    '컨테이너를 속속들이 공부하게 된 계기는 3년 전 카카오 검색 서비스의 컨테이너화 작업이었습니다. 카카오 내 다양한 서비스들의 검색 니즈가 늘어나다 보니 모든 요청을 다 수용하기에는 인력 상황이 여의찮았어요. 향후 새로운 서비스의 증가와 검색 요구가 늘어날 것을 예상했을 때, 검색을 잘 모르더라도 서비스 형태로 곧바로 생성하여 적용할 수 있도록 하고 싶었죠.',
    'A recipe recommendation system * Recipe 추천 시스템을 만드는 과정을 통해서 간단한 NLP와 머신러닝 시도해 볼 수 있는 기회를 제공하는 기사입니다. * 5 Levels of Handling Date and Time in Python * Python 뿐만 아',
    '리액트는 파일/디렉터리 구조에 관해 정해진 틀이 없는것으로 유명합니다. 당신은 어떻게 파일/디렉터리 구조를 만들고 있나요?글쎄요. “올바른” 방법은 없지만 저는 리액트를 사용한 7년 이상의 시간 동안 다양한 접근 방식을 시도했고, 만족스러운 솔루션을 찾기 위해 노력했습니다.이 글에서 저는 블로그와 교육 과정 플랫폼을 포함한 제가 하고 있는 모든 프로젝트에서',
    '30ms의 타임아웃으로 최대 3회까지 요청을 시도하며, 재시도를 해도 똑같은 에러가 나올 수밖에 없는 에러는 즉시 리턴해주고 타임아웃을 포함한 재시도 가능한 에러는 재시도를 수행합니다. 이 코드를 배포하였을 때 기대하는 것은 Datadog을 통해 gRPC 요청이 100ms 이내로 완료되는 것입니다. TLS Handshake가 긴 응답시간을 만들게 되었다.',
    '어떤 프로그램이든 배열이나 목록과 같은 자료구조에서 조건에 맞는 요소(element)를 찾아 하위 집합을 만들어야 하는 경우가 있습니다. PHP에서는 배열(array)이 기본이 되는 자료구조 중 하나인데요. 이 배열을 대상으로 내장 함수인 array_filter()를 사용해서 조건에 맞는 요소만 골라내는 작업을 수행할 수 있습니다. 빠르게 callable',
    'script 실행으로 데이터 마이그레이션을 계획했고 table 모델의 정형화를 위해 django orm을 활용한 script를 작성했습니다.django orm을 꼭 도입하지 않고 python의 db connect 라이브러리를 사용해도 script 작성은 가능하지만 그다지 추천드리진 않습니다.한 가지 예를 들어보겠습니다.이렇게 하면 간단하고 쉽게 DB에 접근',
    'VGGNet은 신경망의 깊이가 모델의 성능에 미치는 영향을 조사하기 위해 해당 연구를 시작하였으며, 이를 증명하기 위해 3x3 convolution을 이용한 Deep CNNs를 제안하였습니다. VGGNet은 ILSVRC-2014 대회에서 GoogLeNet에 이어 2등을 차지하였으나, GoogLeNet에 비해 훨씬 간단한 구조로 인해 1등인 모델보다 더욱 널',
    'Currying은 한번에 하나의 인자(argument)를 가지고 다음 인자를 함께 새로운 함수에 반환하는 함수입니다. 함수를 f(a, b, c)로 호출할 수 있는 함수에서 f(a)(b)(c)로 호출할 수 있는 함수로 변환하는 함수의 변환입니다.   이 아티클에서 JavaScript에서 Currying이 무엇이며, 왜, 어디에서 당신이 Currying을 사용',
    '만약 여러분이 완전하고 균형잡혔으면서도 중립적인 관점을 기대하면서 이 글을 읽기 시작했다면, 나는 그럴 생각도 없고 그럴 자격도 없음을 일러두고자 합니다. 이 글의 제목을 보면 알 수 있듯이 나는 이 주제에 대해 곰곰히 생각해 보고자 하며, 이는 검토(survey)와는 상당히 다른 작업입니다. 제목이 "진보된 프로그래밍에 대한 나의 생각"인 이유는 내가',
    '만약, 40인의 도둑이 각자 다른 입구와 다른 암호를 쓰고 있었다면 어땠을까요? 암호가 주기적으로 바뀌었다면 어땠을까요? 암호가 쉽게 기억할 수 없는 매우 긴 문장이었다면 어땠을까요? 들어갈 수 있는 사람과 암호 둘 다 철저하게 관리하고 출입 대장을 기록하고 있었다면, 알리바바는 동굴에 들어갈 수 없었을지도 모릅니다. 설령 들어갔다고 하더라도, 빨리 추적',
    '간혹 신입 개발자를 채용한다는 회사의 이야기를 듣다보면, 나를 포함하여, 신입 개발자를 뽑을 때 성장 가능성을 본다고 말한다. 나도 이 이야기를 종종 하지만 정작 내가 가지고 있는 기준을 명확하게 정리한 적은 없다는 생각을 하였다. 그래서 이 글을 통해서 내가 가지고 있는 몇 가지 기준들을 나열해보고, 성장 가능성에 대해서 이야기해보려고 한다.많은 신입 개',
    'Redux를 이해하기 전, 애플리케이션을 작성해 본 개발자라면 한 번쯤은 사용해보거나 혹은 들어봤을 MVC 패턴에 대해 먼저 알아야 합니다. 출처: Flux 공식문서 MVC 패턴에서 Controller는 Model에 정의된 데이터를 조회하거나 업데이트하는 역할을 하며, 변경된 Model의 데이터를 View에 반영해 줍니다. 또한 사용자는 View',
    '1. SSR(Server Side Rendering)이란? 이 글을 읽고 있는 많은 분들이 SSR에 대한 개념은 이미 숙지하고 있으리라 생각합니다. 그럼에도 불구하고 한 번 SSR의 개념적인 부분을 정리해보겠습니다. (1) 무엇(What) 인가 저는 웹 개발을 PHP로 접했습니다. PHP는 Hypertext Preprocessor의 약자인데, 해석해보',
    '혼잡 제어란, 말 그대로 네트워크의 혼잡 상태를 파악하고 그 상태를 해결하기 위해 데이터 전송을 제어하는 것을 이야기한다. 네트워크는 워낙 광대한 블랙박스이기 때문에 정확히 어디서 어떤 이유로 전송이 느려지는지는 파악하기 힘들지만, 단순히 느려지고있다 정도는 각 종단에서도 충분히 파악할 수 있다. 그냥 데이터를 보냈는데 상대방으로부터 응답이 늦게 오거나 안',
    '이더리움 테스트넷에서 기능을 테스트할 때 필요한 메타마스크 세팅 방법, 이더리움 충전 방법을 설명합니다.Photo by Alina Grubnyak on Unsplash거의 모든 개발 프로젝트는 테스트 환경에서 테스트하고 기능상 문제가 없다고 판단되면 공식 런칭을 합니다.SDLC(Software Development Life-Cycle)상에서 Test블록체인',
    'React와 Typescript를 사용하는 프론트엔드 환경에서는 API 통신을 받아온 결과값을 interface로 정의하여 각 변수마다 타입을 할당하게 됩니다. 이를 통해 타입 추론이 용이해지고 에러도 방지할 수 있습니다. 그러나 개발 초기에는 API의 변경이 수시로 일어나게 되는데 이는 이미 만들어진 interface의 잦은 변경을 야기하게 됩니다.본 글',
    '트랜잭션을 확인해 보면 두 메서드 모두 null이라는 것은this.save() 메서드에 있는 @Transactional이 동작하지 않았다는 것입니다. 그렇다면 외부에서 Bean 호출시 @Transactional으로 시작하고 동일한 Bean(Class)에서 this.xxx()으로 호출시 @Transactional 동작을 살펴보겠습니다. 1 2 3 4 5 6',
    '엘라스틱서치에서 안정적으로 인덱스를 운영하는 도중에 사전이나, 샤드 및 매핑 변경과 같은 작업이 필요할 땐 어떻게 해야할까요? 다시 문서를 읽어 들여 새로 색인을 하는 방법이 있긴 하지만 상품 데이터처럼 문서 크기가 매우 크고, 수정이 빈번한 대상엔 적용이 어려울 것입니다. 엘라스틱서치에서는 이러한 문제를 해결하기 위한 방법으로 reindex(재색인)',
    'Design Patterns in Machine Learning Code and Systems * 머신러닝 코드와 시스템을 위한 디자인 패턴에 관한 소개 입니다. * Pandas vectorization: faster code, slower code, bloated memory * Pan',
    '데이터 사이언티스트가 자신이 개발한 모델을 배포 및 서빙하는 과정을 효율적으로 처리할 수 있게끔 해주는 것이죠. 과거에는 데이터 사이언티스트가 개발한 모델을 DevOps, 백엔드, 서버 엔지니어링 파트로 전달하여 서빙하는 경우가 많았으나, 최근 들어서는 데이터 사이언티스트 스스로가 이러한 역량을 갖추어야 할 필요성이 증가하고 있는 것 같습니다. DevOp',
    '이번에 실리콘밸리에서 우리 서비스를 이야기 할 수 있는 자리가 생겼따. 너무나도 갑작스럽게 생긴 자리여서 영어 버전을 개발해서 대응하기는 어려웠고, 따라서 (구리긴하지만) Chrome에 내재된 Google Translate를 사용해서 서비스를 소개하기로 했다. (흑흑) 여기 있는 칭구! 눌러서 쉽게 번역할 수 있다. 그런데 잘 동작할 것만 같던 이 Goo',
    '이런 마법같은 프로미스는 어떻게 작동하는 걸까요? 우리는 그저 new Promise(...) 로 편리하게 인스턴스를 만들어 사용할 뿐, 추상화의 커튼 뒤에 어떤 일이 벌어지고 있는지 알기 어렵고, 알 생각도 못 하는 경우가 많습니다. (애초에 그러라고 추상화를 해놓았겠지만요) 하지만 프로미스의 내부 동작을 연구하고 간단히 구현해보는 것도 가치 있다고 생각합',
    '이름 그대로 명명규칙,또는 표기법(이하 표기법)입니다.  위키피디아의 설명에 따르면 "사물의 이름을 짓는 합의된 규칙"입니다. 그리고 네이밍 컨벤션(표기법)의 목적은 단 한 가지입니다. 소스 코드를 읽고 이해하는데 드는 노력 절약 다른 목적도 덕지덕지 붙인다면 말이 되지만 결국 근본적인 목적은 소스코드를 쉽게 이해하는 것입니다. 이 목적을 달성하기 위해 가',
    'PHP 8.2.0 Alpha 2 and PHP 8.2.0 Alpha 3 have been released 세 번째이자 마지막 알파가 예정대로 출시되었습니다. 다음 릴리스는 7월 21일에 예정된 PHP 8.2.0 Beta 1입니다. PHP 8.2.0 Alpha 2 PHP 8.2.0 Alpha 3 PHP 8.2.0 Beta 1 역자 주: 번역 시간 기준으',
    '같은 데이터를 다루는 테이블도 만드는 사람에 따라 로직이 다를 수 있고 그에 따라 데이터 사용자가 “알아서” 검증을 해야 했고, 이를 개선하기 위한 데이터 마트를 만드는 데이터 엔지니어가 그 검증에 대한 책임을 도맡아야 했습니다. 또한 해당 데이터에 대한 히스토리 파악은 기존 테이블 생성자로부터 직접 전달받거나, 테이블을 생성하는 수 백 줄의 쿼리나 파이썬',
    '골치아픈 이름 짓기 프로그래머들에게 가장 어려운 것 하나만 꼽아보라고 하면 절반이 ‘naming’을 선택한다고 합니니다. 프로그램을 작성하면서 파일명, 클래스명, 변수명, 함수명 등 수도 없이 많은 이름들을 지어내야 합니다. 거의 작명소 수준입니다. 그런 이름 짓기보다 더 어려운 것이 있습니다. 바로 커밋 메시지 작성입니다. 한글로 커밋 메시지를 작성하',
    '이번에 새로운 기능을 개발하면서 상태의 변화에 따른 side effect들을 처리해주기 위해 useEffect를 많이 사용하게 됐다. 기능의 생명 주기를 stage라는 단위로 구분했는데, 원래는 페이지 단위로 사용자의 행동을 구분하는 것이 보편적이겠지만 사실 페이지의 형태도 거의 비슷하고 로직만 약간씩 바뀌는 식이어서 굳이 페이지를 나눌 필요가 없겠다는 생',
    'OOP의 인터페이스는 정말 구현과 분리되나요? 구현과 추상을 분리하는 것은 좋은 디자인의 궁극적인 목표 중 하나입니다. 일반적으로 개체 지향 프로그래밍(Object-oriented programming)과 캡슐화(encapsulation)를 통해서 그런 분리를 구현할 수 있다고 주장하며 그로 인해 더 안정적인 코드가 가능하다고 이야기합니다. 최종적으로 프로',
    'Android는 앱에서 프레임을 생성해 이를 화면에 표시함으로써 UI(사용자 인터페이스)를 렌더링합니다. 사용자와 앱의 원활한 상호 작용을 보장하려면 앱은 각 프레임을 렌더링할 때 기기별 새로고침 빈도를 초과해서는 안 됩니다. 예를 들어 Pixel 6에서는 초당 최대 90 프레임을 렌더링할 수 있는데, 이는 각 프레임을 11ms 미만으로 렌더링해야 한다는',
    '어플리케이션에서 우리는 종종 서로에게 속한 컴포넌트를 가지게 된다. 이 컴포넌트들은 공통의 상태를 통해 서로에게 의존되어 있고, 로직을 함께 공유한다. 여러분은 종종 select, dropdown 컴포넌트 또는 메뉴 아이템들에서 이러한 형태를 볼 수 있다. Compound component pattern은 task를 수행하기 위해 다 같이 함께 작동하는 컴',
    "CI/CD 는 DevOps에 속하며, 소프트웨어 개발부터 배포까지의 워크플로우를 자동화하고, 더 나은 품질의 코드를 더 자주 배포하기 위해 사용된다. CI (Continuous Integration) 한국어로는 '지속적 통합'이라고 부른다. 예전의 개발 프로세스에서는 매주 잠시 개발을 멈추고 각자 작업한 코드를 Merge하는 병합일을 정했다고 한다. 병",
    '리눅스 서버를 구축/운영하는 엔지니어 분들의 경우 시스템 로그를 봐야 하는 일이 많습니다. 이런 시스템 로그를 맞춤형으로 설정하여 관리할 수 있다면 업무를 하시는데 훨씬 수월해지겠죠.이처럼 시스템 로그를 효율적으로 관리하기 위해 1편에서는 시스템 로그를 설정하는 방법에 대해, 2편에서는 다양하게 관리할 수 있는 방안에 대해 이야기를 나누어 볼까 합니다.',
    '상태 관리 라이브러리가 해결하고자 하는 핵심 문제를 이해합시다. 그리고 최근에 확산된 모던 라이브러리들이 어떤 방식으로 문제를 해결하고 있는지도 확인해봅시다.원문: https://frontendmastery.com/posts/the-new-wave-of-react-state-management/리액트 애플리케이션이 커지고 복잡해지면서 전역에서 공유되는 상태',
    '논리적 망분리 방식으로 망분리를 진행할 때 사용할 수 있는 솔루션은 VMware, Citrix Xen, Microsoft Hyper-v 등 여러 개의 솔루션이 존재하지만 저희는 AWS Workspace를 선택하여서 직접 구축을 진행해보기로 결정하였습니다.       망분리 목표 설정 Workspace를 이용하여 망분리를 진행하면서 몇 가지 목표를 정해놓았습',
    '옷장으로 검색하면 결과에 옷을 판매하는 글들이 많이 나와 불편하다는 문의가 들어온 적이 있어요. 당시 검색 결과를 보면 이사 준비를 하거나 옷장을 정리할 때 더 이상 입지 않는 옷을 이웃과 거래하기 위해 작성한 글이 많았어요.당시에는 검색어가 판매글에 포함되는 빈도를 랭킹에 반영 했기 때문에 옷장정리가 포함된 의류와 실제 옷장을 판매하는 글을 구분하기 어려',
    '먼저 로그 플랫폼 개발 프로젝트가 무엇인지에 대해 간략하게 설명해 드리는 게 좋을 것 같습니다. 마이리얼트립에서는 사용자의 행동 분석을 통해 발전된 사이트 경험을 제공하고자 사용자 데이터를 얻을 수 있는 여러 마케팅 도구들을 사용하고 있는데요. (Google Analytics, Facebook Pixel, Braze 등..)이러한 마케팅 도구들로 수집할 수',
    '차원축소는, 모델링을 하기 위해 내가 가진 데이터의 정보를 최대한 보존하면서, 훨씬 더 compact하게 데이터셋을 구성하는 것을 목적으로 하며, 크게 변수선택(Variable Selection, 변수들의 부분 집합 선택)과 변수추출(Variable Extraction, 변수들을 요약하는 새로운 변수 생성)이 있다. 이전 포스트에서는 아래 표에서 Super',
    'Design Patterns in Machine Learning Code and Systems * 머신러닝 코드와 시스템을 위한 디자인 패턴에 관한 소개 입니다. * Pandas vectorization: faster code, slower code, bloated memory * Pan',
    '기업은 같은 목적을 가진 구성원이 효과적으로 협업하여 성과를 달성하는 집단입니다. 효과적으로 협업하려면 당연히 서로 커뮤니케이션을 잘해야 합니다. 커뮤니케이션, 소통을 한다는 것은 나의 생각을 알리고 또 동료의 생각을 알림 받는 공유하는 행위입니다. 소통의 어원은 라틴어 Communis에 어원을 두고 있으며 ‘무엇인가를 공유한다는 의미’라고 합니다. 그러면',
    '이력서에 대한 이야기를 해보려고 한다. ‘이력서’라고 검색하면 나오는 수많은 ‘팁’들이 있어서 이력서를 작성하는데 어려움이 없을 것 같다. 여느 글이 그렇듯 굳이 한번 더 정리하는 이유는 이력서에 대한 개인적인 견해를 덧붙이기 위함이다. 최근 출간한 전자책에서는 간단하게만 다뤘는데, 이 글에서는 이력서에만 집중해서 이야기해보려고 한다. 들어가기에 앞서, ‘',
    '배포를 빠르게 - DIY(Deploy It Yourself) 이 글에선 버즈빌에선 어떻게 배포의 속도를 높였는지 소개합니다. 배포를 우아하게 - 원-클릭 배포 배포를 안전하게 - 카나리 배포 전략, 롤백 배포를 빠르게 - DIY(Deploy It Yourself) 이전 글들에서 버즈빌의 배포 파이프라인의 세부적인 내용들을 설명했습니다. 이번 글에선',
    '보이 스카웃에는 "언제나 처음 왔을 때보다 깨끗하게 해놓고 캠프장을 떠날 것"이라는 규칙이 있습니다. 엉망으로 어질러져 있는 곳을 발견하면, 일단 청소하세요. 누가 그렇게 했는지는 생각하지 마십시오. "작업을 완료하고 체크아웃 할 때에는 체크인 했을 때보다 모듈을 깨끗하게 할 것." 정도가 되겠군요. 원래 코드를 작성한 사람이 누구이건 간에, 우리 모두가',
    '우리에게 익숙하게 알려진 유저 행동 추적 도구는 Google Analytics(이하 GA)입니다.홈페이지 head에 코드만 넣어두면 알아서 정보를 뽑아다가 깔끔하게 시각화를 해줍니다. GA 홈 예시 이와 비슷하게 Hotjar도 head에 코드만 넣고 설정만 해주면 설정내용을 바탕으로 유저의 행동을 하나씩 수집해가며 우리에게 엄청난 인사이트를 제공하는 그런',
    '사용자는 자신이 신뢰할 수 있는 서비스의 인증 정보 하나로 여러 서비스에서 인증할수는 없을까? 이때 사용할 수 있는 것이 바로 OpenID이다. OpenID의 정의 OpenID는 비영리기관인 OpenID Foundation에서 추진하는 개방형 표준 및 분산 인증 프로토콜이다. 즉, OpenID는 인증(Authentication)을 위해 등장했다. OpenI',
    '서버 데이터를 위한 로직이 과도하게 커지고, 그로 인해서 Redux 를 활용하기 위한 보일러 플레이트가 비대해 진다는 점 입니다. 이를 해결하기 위해서 대체 기술들을 찾아보던 중, 여러 기업에서는 이미 React-Query 를 접목해서 활용하고 있다는 걸 확인하였고, Playce Dev팀의 Frontend 파트에서는 다음 아키텍처에 React-Quer',
    '딥링크는 웹과 마찬가지로 앱에서 링크에 해당하는 컨텐츠로 이동시킬 수 있는 링크입니다.아래와 같은 상황에서 딥링크를 통해 사용자를 의도했던 앱의 컨텐츠로 이동시킬 수 있습니다.채팅으로 링크를 받아서 특정 앱의 화면으로 이동시키거나광고에서 버튼을 눌러서 광고컨텐츠에 맞는 화면으로 이동시키거나푸시를 눌렀을때 푸시내용에 맞는 화면으로 이동시키거나등등앱에서 사용자',
    '테스트 코드는 프로젝트의 생명 주기 보다 길때가 많다. 기존의 요구사항을 정리한것이 테스트 코드이기 때문에, 메인 코드보다 훨씬 더 읽기쉬워야만 한다. 만약 테스트 코드가 복잡한 경우 어떻게 작동하는지 이해하기가 어렵다. 그래서 테스트 코드는 주석이 필요 없을 정도로 간단해야 한다. 그런면에서 조건부 (if ~ else) 테스트 로직은 테스트를 실제보다 더',
    'List 1. LoadRunner Cloud 라이선스 구매 및 접속 1) 주문 처리 완료 메일 회신 2) LoadRunner Cloud 사이트 접속 3) LoadRunner Cloud Home 화면 2. LoadRunner Cloud의 화면 구조 이해 1) VuGen, Controller, Analysis 기능 매핑 2) VuGen - 성능 스크립트 작성',
    'CausalImpact는 시계열 데이터에서 의도적인 개입으로 인한 인과 효과를 추정하기 위한 방법론입니다. 인과 효과를 확인하려면 A/B 테스트처럼 실험을 하는 것이 제일 좋습니다. 하지만 마케팅, 광고, 웹 서비스 등을 운영하다보면 실험을 수행하는 것이 어려운 경우가 많습니다. 특히 다음과 같은 상황에서는 이상적인 randomised design이 어려',
    '안녕하세요, 힐링페이퍼에서 백엔드를 담당하고 있는 제이슨입니다! 사용자가 불편함 없이 빠르고 안정적으로 더 좋은 의료 서비스를 이용할 수 있도록 하는 역할을 하고 있습니다. 이번 글에서는 AWS RDS 에서 MySQL 기반의 wrtiable replica 를 이용해 데이터 분석용 DB 를 만든 이야기를 하려고 합니다. Writable Replica?! 문제',
    '무한 스크롤(Infinite Scroll)이란 사용자가 특정 페이지 하단에 도달했을 때, API가 호출되며 콘텐츠가 끊기지 않고 계속 로드되는 사용자 경험 방식입니다. 페이지를 클릭하면 다음 페이지 주소로 이동하는 페이지네이션(Pagination)과 달리, 한 페이지에서 스크롤만으로 새로운 콘텐츠를 보여주게 되므로, 많은 양의 콘텐츠를 스크롤하여 볼 수 있',
    'notification-preferences이라는, 아직 production에서는 사용하지 않는 microservice가 2vCPU를 할당 (resources.cpu=2) 받고 있어, 1vCPU로 줄였습니다. 작업을 끝나고 몇 분 뒤, memory 사용량이 90%를 넘는다는 alarm이 발생했습니다. Memory 할당량이나 JVM의 GC 관련 argumen',
    'CentOS의 향후 대안으로 Rocky Linux와 Ubuntu 중 어떤 OS가 더 나은 선택지가 될지 비교, 분석해 보도록 하겠습니다. 우선 표를 통해 Rocky Linux와 Ubuntu를 비교해 봅시다. OSRocky LinuxUbuntu계열레드햇(Red Hat) 계열데비안(Debian) 계열특징RHEL과 1:1로 대응되는 배포판으로 RHEL',
    '이번에는 “시계열 분석”을 주제로 다짜고짜 배워보는 시리즈를 이어가 볼게요. 시계열 분석 1편에서는 시계열 분석이란 무엇인지, 그리고 관련된 여러 모델 중 시계열 분해(seasonal decomposition)에 대해 알아보기로 해요!이 글은 작성자의 개인 블로그에서도 확인할 수 있습니다.시계열 분석이란?“미래 예측을 목적으로 시간 정보가 포함된 데이터를',
    '이상치 탐지는 기존 데이터들과 생성되는 매커니즘이 다르거나 발생 빈도가 낮은 데이터를 의미한다. 그렇다면, 이상치 탐지가 일반적인 우리가 딥러닝/머신러닝에서 수행하는 Binary Classification과는 어떤 차이가 있을까? 1. 학습 방법론 관점 Binary Classification: 정상과 비정상을 구분하는 분류경계면(선)을 학습하여 이',
    '안녕하세요. 빅데이터센터 AI Lab 박호림입니다. 저희 AI Lab에서는 리멤버 유저들에게 WoW한 경험을 주기 위해 Recommendation System, Ranking Model, Document Understanding, NLP, GNN 등 다양한 연구를 진행하고 있습니다. 오늘은 지식그래프 기반의 모델인 KGAT(Knowledge gr',
    'LCP를 최적화 하기전에, 먼저 그 정의를 살펴보자. 최대 콘텐츠풀 페인트(LCP) 메트릭은 페이지가 처음으로 로드를 시작한 시점을 기준으로 뷰포트 내에 있는 가장 큰 이미지 또는 텍스트 블록의 렌더링 시간을 보고합니다. 최대 콘텐츠풀 페인트(LCP)는 페이지의 메인 콘텐츠가 로드되었을 가능성이 있을 때 페이지 로드 타임라인에 해당 시점을 표시하므로',
    '쉘 스크립트는 유닉스/리눅스 기반 운영체제에서의 일련의 명령으로 구성된 실행가능한 텍스트 파일입니다. 원래라면 일일히 키보드로 입력해야하는 리눅스 명령을 하나의 파일에 모아두고, 한번에 실행할 수 있죠. 작성된 명령은 셸이라고 불리는 명령줄 인터프리터에서 실행되며, 위에서부터 아래로 차례로 실행됩니다. 이 쉘 스크립트를 이용해 리눅스 환경에서 여러 프로세스',
    '이론적(theory)으로는 변수의 개수가 증가할 때 모델의 성능도 증가한다. 하지만, 현실(reality)에서는 변수의 개수가 선형적으로 늘어날 때, 동일한 설명력을 갖기 위해 필요한 객체의 수는 지수적으로 증가하며 차원이 너무 커지면 아래와 같은 문제점을 야기한다. 데이터의 변수가 많아질 때의 문제점 ① Noise ↑ ② 계산 복잡도 ↑ ③ 동일한 성',
    'CSS에서는 뷰포트를 기준으로 하는 vh, vw 단위가 존재하는데, 이 단위들은 일부 환경(ex. 모바일 safari)에서 문제가 있다. 이번 시간에는 해당 문제는 무엇이며, 해결방안으로 JS를 이용한 방법과 새로운 단위인 dvh를 이용하는 방법에 대해 알아보았다 1) vh, vw는 무엇인가요? vh, vw는 viewport(화면 크기)를 기준으로',
    '카카오 엔터테인먼트에는 신인작가를 발굴하기 위해서 스테이지(카카오페이지 스테이지)라는 서비스를 운영하고 있습니다. 스테이지를 방문해 보면 아시겠지만, 홈에는 약 50개 정도의 이미지가 노출됩니다. 이미지 파일 하나 당 사이즈가 평균 500KB 정도로 홈 내의 이미지들(50개)의 총용량은 대략 25MB 정도입니다. Viewport 내에 있는 이미지만 로딩되도',
    '개발을 굉장히 빠르게 진행했어야 했어야 했기에, 개발이 완료되면 main에 바로 병합하고, 알파와 스테이징 서버는 개발자가 필요로 할때 수시배포 하였습니다.하지만 런칭을 하고 상용 서버가 열리면서 본격적으로 git 전략을 세워야할 필요성을 느끼게 되었습니다.체계를 만들어가다. 다니엘 호도비에츠키 1791년 작서비스를 오픈하고 개발자가 늘어나면서 제대로 gi',
    'GC는 애플리케이션의 동적 메모리 할당 요청을 자동으로 관리한다. GC는 다음 작업을 통해 자동으로 동적 메모리를 관리한다. 운영 체제로부터 메모리를 받아 할당에 사용한다. 애플리케이션이 메모리를 요청하면 전달해 준다. 애플리케이션이 메모리의 어떤 부분을 사용 중인지 확인한다. 사용되지 않은 메모리를 회수하여 애플리케이션이 메모리를 재사',
    '웹 개발자가 웹 페이지 속도를 개선하기 위해서 가장 먼저 알아야할 것은, 웹 페이지 로딩 속도 개선을 위한 테크닉이나 팁이 아닌 바로 브라우저의 동작 원리다. 우리가 최적화 하려고 노력하는 것 만큼, 브라우저도 웹페이지를 로딩할 때 최적화 하려고 더 노력한다. 하지만 우리의 이런 최적화 노력이 의도치 않게 브라우저의 최적화 노력을 방해할 수도 있다. 페이지',
    'PHP 8.1에 열거형이 추가되었습니다. 그동안 클래스와 클래스 상수를 사용해서 열거형처럼 사용했었는데 용도에 맞게 사용할 수 있는 타입이 생겼습니다. Enumerations - php를 중점으로 번역했습니다. 열거형, "Enums"는 제한된 선택지를 정의할 수 있는 타입입니다. [...] 각 언어마다 다양한 구현이 있지만 PHP에서는 특별한 종류의 개체',
    '피그마 플러그인은 캔버스 상의 요소를 생성하거나 삭제할 수 있고, 요소에 대해 피그마의 레이어 패널과 속성 패널로 조작할 수 있는 속성들을 편집하는 것이 가능합니다. 그리고 이러한 기능들을 위 이미지(Iconify 플러그인 실행 캡처)와 같이 UI 형태로 제공하는 것 역시 가능하죠. 더 구체적으로 플러그인과 해당 플러그인이 제공하는 기능들을 살펴보겠습니다.',
    '안녕하세요. 도도 카트 팀의 백엔드 프로그래머 남경호입니다. 최근 도도 카트 팀에서는 정비기간을 마친 후 처음으로 제품 개발을 위한 프로젝트를 성황리에(?) 마쳤습니다. 약 7주간 진행했던 이 프로젝트는 도도 카트가 제공하던 기존 기능과는 전혀 다른 성격의 기능을 제공하기 위한 프로젝트였습니다. 그러다 보니 개발할 내용도 많고 프로젝트 일정도 넉넉하지 않',
    '어드민 UI 컴포넌트는 카카오 서비스들의 운영에 필요한 어드민 페이지 개발을 쉽게 할 수 있게 해주는 UI 컴포넌트 프로젝트입니다. 카카오의 사내 디자인 시스템을 적용해 어드민 개발 시 디자인에 대한 고민을 없앴고, 프론트엔드 개발자 뿐만 아니라 프론트엔드에 익숙하지 않아도 개발할 수 있도록 리액트, 바닐라 자바스크립트 컴포넌트를 제공하고 있습니다. 추후',
    '대량의 트래픽이 발생할 때를 대비해야 한다면..? 신상품 공개, 콘서트 티켓 세일 등과 같은 이벤트가 있는 경우, 웹사이트에 순간적으로 엄청난 트래픽이 몰려서 웹사이트에 과부하가 발생할 수 있습니다. 이 때 과부하가 발생하는 원인은 다양한데, 가장 유력한 원인 중에 대표적인 것 중 하나가 바로 최적화하지 않은 웹서버입니다. 최적화되지 않은 웹서버를 사용하는',
    'eslint 의 동작방식을 이해하기 위해서 알아야 하는 단 한가지는 바로 AST다. 이 글을 요약해서 설명하자면, AST는 우리가 작성한 코드를 기반으로 트리 구조의 데이터 스트럭쳐를 만들어 낸다. 즉, eslint 는 코드를 AST를 활용해서 트리구조를 만든 다음, 여기에서 지적하고 싶은 코드를 만들어서 룰로 저장하는 것이다. 간단한 예제 먼저, 한 글자',
    '신규 입사자가 새로운 환경에 적응하고 새 조직에서 성공하기 위해서는 입사 후 첫 90일이 정말 중요하다고 한다. 새로 합류한 개발자는 이 문서를 토대로 입사 후 자신의 목표를 설정할 수 있고 올바른 방향으로 가고 있는지 스스로 판단해 볼 수 있다. 그리고 기존 팀원은 새 팀원이 아래 목표를 달성할 수 있게 적극 도와야 한다. 지식 전달을 해주고 역량을 키울',
    'noefetch란 위 이미지와 같이 CLI에서 사용자의 정보를 알 수 있도록 하는 것입니다. 또한 사용자의 기호에 맞게 커스텀해서 사용 할 수 있습니다. brew로 neofetch 설치하기 homebrew가 우선적으로 설치가 되어있어야 합니다. brew install neofetch',
    '오늘은 머신러닝 시계열에서 가장 많이 쓰이는 AR, MA, ARMA, ARIMA에 대해 정리해보는 시간을 가지려고 합니다. 해당 포스트는 고려대학교 김성범 교수님의 강의를 바탕으로 제작되었습니다. 정상 프로세스와 비정상 프로세스 Autoregressive (AR) Models Moving Average (MA) Models Autoregressive a',
    'CSRF CSRF(Cross-Site Request Forgery)는 신뢰할 수 있는 사용자를 가장하여 웹 사이트에 원치않는 명령을 보내는 공격입니다. 예를 들어, 다른 곳으로 이동하기 위해 사용하는 링크 뒤에 있는 URL에 악의적인 매겨변수를 포함시킴으로써 다음을 수행할 수 있다. &lt;img src="https://www.example.',
    'Android를 기반으로 작동하는 자동차, TV, 시계, 노트북 수가 5억을 육박하는 요즘, 모든 기기에서 원활하게 작동하는 앱을 만드는 것이 그 어느 때보다 중요해졌습니다. 올해 I/O에서 저희는 폼 팩터에 주력하는 전략을 재정비하고 Wear OS 및 대화면에 대한 주요 업데이트를 발표했습니다. 새로운 기능을 제대로 이해하는 데 도움이 되도록 다음과 같이',
    'Fork 리파지토리의 변경은 pull request를 통해 Original에 반영할 수 있지만, 역으로 Original에서 변경된 사항을 내 Fork 리파지토리에 반영해야 할 필요가 있는 경우도 있을 것이다. Fork 리파지토리 입장에서 바라본 Original 리파지토리는 upstream이라고 부르는데, 로컬에서 자신의 원격을 origin으로 인식하듯, O',
    '같은 뜻을 가진 글자가 언어별로 다른 길이를 가지면서 발생했던 문제를 맞닥뜨린적이 있는데 어떤 일이 있었는지 소개하도록 하겠습니다. Toast 대응 아래는 아자르에서 상대방과 매치중 상대방으로 부터 친구 추가를 받은 화면입니다. 이 화면에서 어떠한 문제점이 있는지 보이시나요? 맞습니다. 한국어에서는 문제가 없습니다 ! 😂 그렇다면 포루투갈어에서는',
    'npm 에서 시작한 node package management의 역사는, 이제 3가지 옵션이 주어져 있다. yarn 1.0 (이제 yarn classic 이라고 부르겠다) 과 yarn 2.0 (yarn berry) 두 가지 버전도 사뭇 다른 점이 많다는 것을 감안한다면, 이제 크게 4가지 선택지가 존재 한다고 볼 수 있다. 그리고 위 3가지 패키지 관리자들',
    '도커 컨테이너를 만들 때, 대부분 더 가벼운 이미지들을 선호합니다. 같은 레이어를 공유하고 더 작은 이미지일수록 더 전환하거나 배포할 수 있기 때문입니다. 어떻게 하면 RUN 구문 마다 새로운 레이어가 생기고 이미지가 준비되기 전에 중간 결과물이 필요한 상황에서 이미지 사이즈를 유지할 수 있을까요?여러분이 아시다시피 대부분의 Dockerfile 파일에는 아',
    '동일 계열의 알고리즘군을 정의하고, 각 알고리즘을 캡슐화하며, 이들을 상호교환이 가능하도록 만듭니다. 알고리즘을 사용하는 클라이언트와 상관없이 독립적으로 알고리즘을 다양하게 변경할 수 있게 합니다. GoF 디자인 패턴 내용은 역시 심오합니다. 제가 얻은 인사이트(insight)를 바탕으로 내용을 풀어 설명해보겠습니다. 전략 패턴은 인터페이스를 통한 다형성(',
    '먼저 작성했던 글인 포지션이라는 틀에서 벗어나기 에도 적었듯이 데이터 관련 포지션이 해가 바뀔 수로 세분화가 되어 새로운 직군들이 나타나고 있습니다. 그렇기 때문에 굳이 직군명으로 인해 제 자신의 업무적 boundary가 생기는 것을 피하고자 동료들이 데이터를 쉽게 활용할 수 있는 환경을 만드는 사람 이라는 비전을 바탕으로 살고 있습니다.그럼에도 불구하고',
    'GitHub에서 공동작업을 할 경우, conflict 방지를 위해 대부분 각자의 브랜치(branch)를 이용하여 작업을 하게 된다. 브랜치를 사용하면, 로컬 작업 후 master 브랜치로 바로 push하지 않고 각자 만든 원격 브랜치로 push한 후에, pull request를 하여 merge 작업을 할 수 있어서 보다 안전하게 GitHub 공동 작업을 할',
    '안녕하세요. 이번에 유사 이미지 검색을 구현할 수 있는 방법을 찾다가 엘라스틱서치로도 이를 구현할 수 있어 소개하려고 합니다. 유사 이미지 검색 이란? 말 그대로 이미지가 유사한 다른 이미지를 검색하는 것 입니다. 방식으로는 딥러닝, 벡터 유사도 방식 등 여러 방식이 있고 대표적으로 사용되는 라이브러리는 opencv, faiss 등이 있습니다. 순',
    'Apache Airflow는 데이터 엔지니어링을 효율적으로 수행할 수 있도록 도와주는 오픈소스 플랫폼으로, 최신 마이너 버전인 1.10.x에 신규 피처(feature)로 ‘Kubernetes Executor’가 추가되었습니다. 이 피처는 일반적인 Kubernetes 환경에서 데이터를 엔지니어링할 때 발생하는 단점을 보완하고 Kubernetes의 장점을 데이',
    '1. 들어가며온라인 비즈니스에서 Customer journey, 고객의 여정을 살펴보는 것은 중요합니다. 사이트의 상품 또는 서비스에 대한 고객의 직접적인 반응을 path로 연결하여 관찰함으로써 우리 사이트가 고객에게 제공하려는 핵심 가치가 제대로 전달되고 있는 지, 그렇지 못하다면 어디에서 문제가 있었는 지를 파악할 수 있습니다. 고객 여정 분석에 가장',
    '가끔 OTP 서비스를 사용하다 보면 한글 초성으로만 검색하는 기능을 확인할 수 있습니다. 입력이 불편한 리모컨 특성상 사용자에게 편리함을 제공하기 위해 많이 사용합니다. 그래서 이번엔 초성으로도 검색 가능한 검색창 컴포넌트를 만들어보도록 하겠습니다. 기존 컴포넌트 &amp; 로직 컴포넌트 우선 컴포넌트를 하나 보고 오겠습니다. 정확한 검색어만 반응 이건 제',
    '구글, 페이스북, 트위터와 같은 다양한 플랫폼의 특정한 사용자 데이터에 접근하기 위해 제3자 클라이언트(우리의 서비스)가 사용자의 접근 권한을 위임(Delegated Authorization)받을 수 있는 표준 프로토콜이다. 쉽게 말하자면, 우리의 서비스가 우리 서비스를 이용하는 유저의 타사 플랫폼 정보에 접근하기 위해서 권한을 타사 플랫폼으로부터 위임 받',
    'CPU는 컴퓨터에 파워가 켜졌을 때 영구 기억 장치에 저장된 약간의 명령어를 실행해서 작동을 시작하도록 구성되어 있다. 다음에는 그 명령어들이 디스크상의 알려진 위치, USB 메모리, 또는 네트워크 연결로부터 더 많은 명령어를 읽기에 충분한 코드를 포함하고 있는 작은 플래시 메모리에서 명령어를 읽고, 그 명령어는 최종적으로 유용한 작업을 하기에 충분한 코드',
    '캐시를 접하게 되는 순간서비스를 처음 운영할 때는 WEB-WAS-DB의 전형적인 3티어 구조를 취하는 편이 보통입니다. 사용자가 몇 명 되지 않는 서비스의 경우에는 3티어 구조로도 충분히 서비스가 가능하지만, 사용자가 늘어나면 DB에 슬슬 무리가 가기 시작합니다. 데이터베이스는 데이터를 물리 디스크에 직접 쓰기 때문에 서버에 문제가 발생하여 죽더라도 데이터',
    '지금은 바야흐로 SaaS의 시대이다. 각 분야 별 대표 서비스 (사실 내가 들어본 각 분야별 서비스) Cloud Infra: AWS, Azure, GCP, Alibaba CRM: Salesforce, Hubspot CRM, ActiveCampaign 등 Marketing: Marketo, Hubspot, Mailchimp 등 CS: Zendesk, Sen',
    '하이퍼커넥트는 내부적으로 다양한 머신러닝 기반의 어플리케이션을 운용 중입니다. 개인화 추천 시스템, 실시간 이상 유저 탐지 시스템, 검색 엔진, 챗봇 등 머신러닝 모델을 메인으로 하는 어플리케이션들이 이에 해당하죠. 이런 머신러닝 어플리케이션에서 데이터는 각별한 의미를 가집니다. 컴퓨터 비전, 자연어 처리, 추천 시스템 등 분야를 가리지 않고 데이터가 많',
    '프로그래밍을 한다면 컴파일러는 빼놓을 수 없는 부분입니다. 항상 사용하지만 어떻게 내부적으로 구현되어 있는지는 잘 알기 어려울 수 있습니다. 이 글은 작은 컴파일러를 직접 만들어보는 과정을 통해서 현대적인 컴파일러가 어떤 방식으로 동작하는지 설명합니다. 적은 양의 코드지만 구조나 동작 원리를 이해하는 데에는 부족함이 없습니다. 더 자세히 알고 싶다면 찾아볼',
    'Design Patterns in Machine Learning Code and Systems * 머신러닝 코드와 시스템을 위한 디자인 패턴에 관한 소개 입니다. * Pandas vectorization: faster code, slower code, bloated memory * Pan',
    '현재 웹팩의 번들링 동작 방식에는 오버헤드가 존재합니다. 프로젝트 소스 코드상에서 사소한 한 부분만을 수정하여도 웹팩의 경우 설정상의 엔트리 파일부터 시작하여 다시 의존성 그래프를 구성하고 전체 프로젝트를 리빌딩하기 시작합니다. https://vitejs.dev/guide/why.html#the-problems',
    '리눅스에서 root 계정은 여러 사용자가 사용하는 서버 전체를 관리하고 총괄하는 막대한 권한을 가진 유일한 특별 계정입니다. 제한 없이 사용자 계정을 생성할 수 있고, 소프트웨어를 설치할 수 있으며, 환경 설정을 변경할 수 있고, 시스템 동작 상황을 감시하거나 제어할 수도 있습니다. 즉, 리눅스에서 root 계정은 절대 권한을 가진 계정입니다. 그래서 항상',
    '최근 버그와 관련된 CS가 인입이 되어, 픽스 후 배포했음에도 불구하고 유사한 CS가 인입이 되었을때 또 다시 버그 개선 티켓이 생성되곤 했다. 버그 픽스가 제대로 되지 못했을 수도있지만, 상황을 확인해보면 이슈를 CS단계에서 확인하지 못하고 바로 넘어오는 상황이 많았다. (커뮤니케이션으로 해결가능한 것들도) 이런 상황이 반복되고 누적되다보니 개발 집중력이',
    '소프트웨어를 유지보수 한다는 것은 “이전처럼 동작하게 하는 것”이 아니라, “변하는 세상에서 여전히 유용한 소프트웨어가 되는 것”이다.&gt; Jessica Kerr하지만, 코드 1줄을 만드는데 시스템이 변화할 수록 비용이 커짐주요원인은 코드 분석 시간 증가, 코드 변경 시간 증가낮은 비용으로 변화할 수 있는 방법&gt; 패러다임, 설계, 아키텍처, 업무',
    '지난 2월 데이터 분석 컨퍼런스 팝콘에서 쉽게 설명하는 분석 개념을 테마로 &lt;다짜고짜 배워보는 인과추론&gt;이라는 제목의 발표를 했습니다. 이번에는 “시계열 분석”을 주제로 다짜고짜 배워보는 시리즈를 이어가 볼게요. 시계열 분석 1편에서는 시계열 분석이란 무엇인지, 그리고 관련된 여러 모델 중 시계열 분해(seasonal decomposition)에',
    'stylelint는 스타일에 규칙을 적용할 수 있는 lint로, 아래와 같은 장점을 가진다. 스타일 오류를 방지할 수 있기에, 스타일이 적용되지 않는 현상이 발생할 확률이 적다. 스타일에 규칙을 적용할 수 있으므로, 협업시에 스타일 규정을 하기 좋다. 플러그인을 지원하기에, 규칙을 커스터마이징할 수 있다. 스타일 단위 테스트를 지원한다. 예를 들어',
    '만 30개의 이커머스을 광고주로 삼고 있는 버즈빌. 이들을 위한 리타겟팅 광고 솔루션을 고도화하기 위해 도입된 상품 추천 알고리즘: Item-CF. 이 알고리즘 최적화와 적용 과정에 대해서 알아보겠습니다. 버즈빌의 라타겟팅 광고 솔루션 버즈빌에서는 매출의 20% 이상을 리타겟팅 광고 상품으로 발생시키고 있습니다. 전통적으로는 리타겟팅 광고는 유저가 이커머스',
    'npm trends(npm에 등록된 패키지의 트렌드를 확인하고 비교할 수 있는 사이트) 기준 프런트엔드 UI 개발 라이브러리 순위는 1.React, 2.jQuery, 3.Vue입니다 불과 몇 년 전만 하더라도 UI 개발 라이브러리는 jQuery가 가장 인기가 있었습니다. 2018년 즈음부터 React가 jQuery를 앞서기 시작했는데요(npm trends',
    'Overview 저번 글에서는 Recoil 의 전반적인 개념에 대해서 살펴봤습니다. 저번주 Tech Day 에서 발표를 하고난 후 Recoil 에서 Storage 를 연동해서 사용하는 방법이 궁금하다는 요청을 받고 알아보게 되었습니다. 저희 Playce Dev 팀의 FE 파트에서는 현재 Playe RORO v3 을 개발하는데 있어서 Redux 를 사용',
    '아마존에서는 업무를 위한 소통과정에서 글쓰기를 매우 중요하게 생각합니다. 일상적인 대화, 미팅, 발표 등의 구두 방식의 모호함을 벗어나서 정보를 온전하게 기록하고 공유할 수 있기 때문인데요. 그중에서도 고객 중심 거꾸로 일하기(Working Backward)를 실현할 수 있는 보도자료(PRFAQ) 문서, 최대 6장을 넘기지 않는 내러티브(Narrative)',
    '컨테이너의 시대최근 쿠버네티스에 대한 관심이 높아지면서 컨테이너를 사용하는 기업들이 점차 늘어나고 있습니다. 컨테이너는 독립적인 공간을 따로 사용할 수 있고, 이식성이 좋으며, 무엇보다도 재기동이 상당히 빠르다는 장점이 있습니다. 마이크로 서비스를 구성하는 경우에는 컨테이너가 더더욱 좋은 옵션이 될 수 있습니다.그래서 컨테이너를 꼭 배워야 하나요?저는 개인',
    'HTTP/3는 HTTP(Hypertext Transfer Protocol)의 세 번째 메이저 버전으로, 기존의 HTTP/1, HTTP/2와는 다르게 UDP 기반의 프로토콜인 QUIC을 사용하여 통신하는 프로토콜이다. HTTP/3와 기존 HTTP 들과 가장 큰 차이점이라면 TCP가 아닌 UDP 기반의 통신을 한다는 것이다. 필자는 최근에 다른 분들이 공유해',
    '안녕하세요. 모두싸인 제품 그룹에서 백엔드 개발을 맡고 있는 러츠라고 합니다. 이번 블로그 포스팅에서는 TypeORM에서 지원하는 마이그레이션 기능을 도입한 이유와 후기, 사용할 때의 주의점에 대해 이야기해보고자 합니다.다양한 이유가 있겠지만 모두싸인이 TypeORM을 통해 궁극적으로 얻고자 하는 핵심 목표는 다음과 같았습니다.수동으로 마이그레이션, 롤백',
    'Vimwiki는 Vim에서 돌아가는 파일 기반 위키 플러그인이다. 참고로 이 위키의 모든 문서는 Vimwiki로 작성하였다. 각 문서는 단순한 텍스트 파일이다. 어떤 운영체제나 어떤 에디터에서도 열어볼 수 있다. Git을 사용할 수 있다. Git을 사용할 줄 모르더라도 위키 경로를 Dropbox 하위',
    '어떤 함수에서 선언한 변수를 참조하는 내부 함수를 외부로 전달할 경우 함수의 실행 컨텍스트가 종료된 후에도 해당 변수가 사라지지 않는현상을 말합니다.         클로저   어떤 함수에서 선언한 변수를 참조하는 내부 함수를 외부로 전달할 경우, (외부)함수의 실행 컨텍스트가 종료된 후에도 해당 변수가 사라지지 않는 현상    var outer = func',
    '파일에는 사용자마다 접근할 수 있는 권한이 있습니다. 파일을 읽을 수 있어도 실행하지 못할 수도 있고, 디렉토리에 들어가도 파일을 읽을 수 없을 수도 있습니다. 리눅스에서는 파일마다 이렇게 정교하게 권한을 설정할 수 있고, 파일에 대한 접근 권한을 정확히 설정해주는 것이 보안상 좋습니다.그럼 한 번 파일을 조회해보겠습니다. 폴더 내에 있는 파일을 조회하기',
    '규모가 큰 회사는 보통 이미 갖춰진 자체 인프라에서 시스템을 운영하는 것 같다. 구체적으로 적자면, 내가 다닌 다음, 카카오, NHN, LINE의 경우, 자체 데이터센터에 자체 장비들을 대규모로 구매해서 넣고 운영하는 구조다. 물리 장비를 잔뜩 준비해서 클라우드 시스템을 구축해 주고, 사내 개발자들이 접속해서 쓸 때는 클라우드 플랫폼을 사용할 수 있는 구조',
    'input박스에서 몇 글자 입력하기 시작하면 하단에 나오는 자동완성은 현재 웹에서 가장 흔한 UI입니다. 또한 개발자들에게는 IDE의 자동완성이나 관련 힌트처럼 익숙한 기능이기도 하죠. 이런 자동완성에서 초중종성의 한글은 그 특이한 구조를 갖고 있습니다. 바로 초성검색이란거죠. 강원도를 검색하기 위한 검색어가 ‘강’이나 ‘원’처럼 완전한 글자를 이루지',
    'Adobe Photoshop(이하 포토샵) 파일 파싱 라이브러리로, 브라우저 및 NodeJS 환경에서 포토샵 파일 정보를 읽어와 레이어 이미지를 비롯한 다양한 메타데이터를 추출할 수 있습니다. 필자는 네이버 웹툰에서 포토샵 파일을 활용하는 웹 애플리케이션을 개발하고 있습니다. 그 과정에서 요구 조건을 만족하는 라이브러리가 없어서 직접 개발했습니다. 이 글',
    '서버를 운영하다보면 서버계정과 관련된 업무도 하게되는데 서버가 많아질수록 계정 생성,삭제,권한부여등 여간 귀찮은(?) 작업이 아닐 수 없습니다. 이번 포스팅에서는 이부분을 개선하고 계정신청을 위한 내부 업무프로세스를 단순화하기 위해 구축한 IdM 에 대한 내용을 작성하고자 합니다. 로컬계정을 사용하는 경우 개인계정별로 서버마다 아래와 같은 상황이 발생',
    '실제 환경에서 실행되는 모든 앱은 때때로 일시적인 네트워크 중단(interruption)과 서버 중단(outage)에 직면할 수 있습니다. 그럴 때 우리는 요청을 자동으로 재시도함으로써 두 가지 문제를 정상적으로 복구해야 합니다. 그러나, 너무 빨리 재시도를 하거나 모든 클라이언트가 동시에 재시도 함으로써 일시적인 서버 중단을 더 큰 문제로 만들어서는 안',
    'NestedScrollView와 같은 수직 방향으로 중첩된 레이아웃에서의 RecyclerView 스크롤 페이징 처리는 성능상 좋지 못한 결과를 초래하게 됩니다.본 글에서는 위 문제를 해결하기 위해 NestedScrollView를 사용하지 않는 방법으로 NestedScrollView과 동일한 인터랙션과 부드러운 스크롤 페이징 기능을 구현하는 방법을 고민하고',
    '함수형 프로그래밍의 가치가 널리 알려지면서, Python, Java, JavaScript 같은 명령형(imperative) 프로그래밍 언어에서도 함수형 프로그래밍을 하는 개발자가 많아진 것 같습니다. 대중적인 명령형 프로그래밍 언어에서도 함수형 프로그래밍 스타일로 개발할 수 있습니다만, 훨씬 더 우아하게 함수형 프로그래밍을 하려면, 아예 함수형 프로그래밍',
    '오늘은, 하스켈로 본격 함수형 프로그래밍을 하고 있는 기념으로, 명령형 프로그래밍과 함수형 프로그래밍에 대해 간단히 비교하고, 명령형 프로그래밍 환경에서도 함수형 프로그래밍의 좋은 기능들을 차용하면 좋겠다는 주장을 펼쳐보겠습니다.최근 몇 년 간, 클로저, 스칼라를 거쳐, 하스켈로 프러덕션 코드를 작성하고 있습니다.개인적으로는 함수형 프로그래밍이 실용적이라는',
    'GitFlow 는 아래와 같은 branch 들로 구성되어 있습니다. develop master feature branches release branches hotfix branches branch 를 merge 할 때는 항상 --no-ff 옵션을 붙여서 branch 에 대한 기록이 사라지는 것을 방지하는 것을 원칙으로 합니다. branches 각 branc',
    '사용자가 URL을 입력하고 브라우저에 화면이 띄워지기까지의 과정과 어떤 항목을 최적화해야 하는지에 대해 작성한 글입니다. 브라우저 렌더링 과정은 파일 다운로드에 초점을 맞추어 작성하였습니다. 틀린 부분이 있다면 댓글로 알려주시면 정말 감사하겠습니다! 1. 주소 입력 클라이언트측에서 URL을 통해 서버에서 요청을 보냄 2. HTML 파일 다운로드 서버',
    '이 글은 ‘당구장 옆에는 PC방이 있다’는 뉴스젤리 PC방 마니아의 한마디에서 출발합니다. 이 한마디에 PC방을 평소 즐겨 찾는 사람들은 폭풍 공감을, PC방을 찾지 않는 사람들은 의아하다는 반응을 보였죠. 그리고 모두가 궁금해졌어요. ‘당구장 옆에는 PC방이 있다’는 이야기가 진짜일지, 데이터로 검증할 수 있을지. 데이터를 통해 인사이트를 도',
    '이번 포스팅에서는 저번 포스팅에 이어 TypeScript를 사용하여 간단한 인공신경망을 만들어본 것을 간단하게 정리하려고 한다. 이 어플리케이션은 현 직장에서 진행하는 Tech 세미나의 발표용으로 작성한 것이기 때문에 상당히 개발 시간이 촉박했다. 그래서 머릿속으로 생각해놓았던 기능을 전부 구현하지는 못했고 추후 기능을 더 추가해볼 예정이다. 예전에 Ja',
    'Describe - Context - It 패턴 내가 선호하는 BDD 테스트 코드 작성 패턴이다. 이 패턴은 코드의 행동을 설명하는 테스트 코드를 작성한다. Better Specs에 이 패턴이 잘 설명되어 있으므로, 관심이 있다면 정독한다. 다른 BDD 패턴인 Given - When - Then과 비슷한 철학을 갖고 있지만 미묘하게 다른 점이 있다.',
    '웹 애니메이션(Web Animation) 웹은 더 이상 텍스트와 링크(link), 이미지로 구성된 단순한 페이지가 아닙니다. 영상, 음악부터 각종 인터랙션(interaction) 효과까지. 거의 모든 것을 담는 플랫폼으로 진화했습니다. 카카오웹툰이 대표적인 예가 될 수 있겠죠. 물론 모바일 기기와 브라우저의 비약적 성능 개선이 있었기에 가능했던 일입니다.',
    '추론적인 프리렌더링(Speculative prerendering)과 크롬 체험판(Chrome origin trial)에 참여하는 방법에 대해 알아보자. preconnect, preload, prefetch, prerender와 같은 리소스 힌트는 브라우저가 사용자에게 곧 어떤 리소스가 필요한지 알아내는 데 도움을 준다. preconnect와 preload',
    '랜덤 엑세스란 데이터를 저장하는 블록을 한번에 여러 개 액세스하는 것이 아니라 한 번에 하나의 블록만을 액세스하는 방식이다. 한 번에 여러 개의 블록을 액세스한다면(랜덤 엑세스와 반대) 같은 양의 데이터에 대해 적은 횟수의 디스크 I/O가 발생하기 때문에 성능이 향상될 수 있다. 그렇다면 과연 어떤 작업에서 랜덤 액세스가 발생하는 것일까? 바로 인덱스를',
    'RFC 9114: HTTP/3 : HTTP/3의 표준 명세인 RFC 9114가 공개되었다. Internet Explorer 11 has retired as of June 15, 2022 : 6월 15 일부로 Internet Explorer의 지원이 중단되어 IE가 사라지게 되었다.(영어) 다른 사람들이 안 알려주는 리액트에서 Context API 잘 쓰는',
    'JUnit 어노테이션에 대해 정리하는 시간을 가져보겠습니다.java의 단위 테스트(Unit Test)를 수행할 수 있도록 지원해주는 프레임워크 입니다.소스코드의 특정 모듈이 의도된 대로 작동 하는지 검증하는 절차모든 함수와 메소드에 대한 Test case 를 작성하는 절차JUnit5 는 크게 세가지의 모듈로 구성되어있습니다.JUnit Flatform JVM',
    '만약에 이런 가정을 해봅시다. 짱구네 집이 자동문이라면 어떨까요?! 아무나 짱구네 집에 들어갈 수 있을 겁니다. 그렇지만, 누구도 짱구네 집이 아니라고 말할 수 없죠! 주소는 엄연히 짱구네 집이니까요. 따라서, 브라우저 역시 마찬가지랍니다. 클라이언트는 브라우저라는 자동문을 통해 URL 주소로 누군가가 만들어 놓은 웹 사이트를 이용하죠. 특히 예전에는',
    '소프트웨어 본질은 소프트웨어 사용자들을 위해 현실 세계의 복잡한 프로세스를 자동화하거나 비즈니스의 어려운 문제를 해결하는 데 있습니다. 따라서 복잡하고 어려운 비즈니스 도메인을 소프트웨어로 구현하기 위해서는 해당 도메인을 바르게 이해해야 합니다. 도메인 전문가와 개발자 등 프로젝트에 참여한 모든 구성원들은 도메인의 올바른 이해를 위해 많은 노력을 해야 됩니',
    '이번 글에서는 매드업의 DMP 프리즘의 일부인 크라켄을 소개합니다. 크라켄은 매드업에서 구축한 데이터 수집 플랫폼입니다. API 호출 제약이 상대적으로 빡빡한 매체의 데이터 수집을 담당합니다. API 호출 제약으로 인해 어떤 어려움이 있었는지, 그리고 크라켄은 어떻게 이런 어려움을 극복했는지 알아보겠습니다. 비개발자도 편하게 읽으실 수 있도록 기술적인 내용',
    "우아한테크코스 백엔드 과정에서 데이터베이스를 사용하는 어플리케이션을 개발하며 '이건 객체지향적인 설계가 아닌 것 같은데?' 라는 생각을 자주 해왔다. Repository 와 DAO 를 통해, 데이터베이스에서 데이터를 가져와 데이터를 조립하는 작업을 가상의 컬렉션에서 객체를 꺼내오듯이 추상화하였지만, 여전히 고민은 계속되었다. (의도한 것은 아니었지만, 우테",
    '프론트엔드 개발자는 유저 인터페이스(UI)에 대해 그 어떤 개발자보다 잘 이해하고 숙지해야 합니다. 디자이너와 소통하며 그들을 이해하고, 때론 스스로 제품과 서비스의 사용성을 개선하기 위해 우리는 UI 요소들에 대해 배울 필요가 있습니다. 상황과 용도에 따른 32가지의 UI 요소를 잘 정리한 포스트를 번역하여 여러분께 소개해드립니다. 32 User',
    "같이 공부하는 기수 분들 중에 포토샵 같은 편집 프로그램이 익숙치 않은 분들도 계실 것이다. 블로그 쓰는것도 일인데 썸네일 만드는데 엄한 시간을 뺏기진 않을까 생각이 들었다. 썸네일 메이커는 '배경색 랜덤 생성과 필드 입력 값을 헤더에 출력하는 정도의 간단한 기술로 무난한 썸네일 정도는 만들 수 있지 않을까' 라는 생각에서 시작됐다. DOM API로 HTM",
    '팀에 합류한 후 약 4주간 소문으로만 듣던 정산 파일럿 프로젝트를 진행하였는데요, 소문(?)대로 쉽지 않은 과정이었지만 그만큼 많이 배우고 저의 개발 습관이나 부족한 부분들을 점검하고 채울 수 있는 의미 있는 시간이었습니다. 기술블로그에는 이미 저희팀 개발자분들(세희 님, 태현 님, 우빈 님, 시영 님, 윤정 님)께서 좋은 내용을 많이 다뤄 주셔서 어떤 내',
    '여러 클라우드 환경이나 컨테이너 환경에서 간단하게 Spark를 사용할 수 있지만 local 환경에서도 Spark를 실행시킬수 있는 환경을 만들어두면 가볍게 테스트 할 수 있는 것들이 많아서 Local 환경에서도 Spark application을 build하고 실행시킬수 있는 환경을 구축하는 과정을 기록해 두려고 합니다. Spark의 개발 환경을 셋팅하기 위',
    'AbortController는 웹 요청을 취소할 수 있게 해주는 기능이다. 보통 웹에서 요청을 일단 보내면 이후에 필요 없어져도 취소할 방법이 없어서 그냥 요청은 그대로 두고 응답받은 내용을 사용 안 하는 식으로만 구현했다. 간단한 HTTP 요청을 응답이 꽤 빠르기 때문에 괜찮을 수도 있지만 무거운 요청의 경우는 불필요한 네트워크 트래픽을 낭비하게 되거나',
    '단순한 동기가 아닌 좀더 구체적인 동기를 찾아야합니다.  잠깐 동기의 뜻을 찾아보면 동기 | 행동을 일으키게 하는 내적인 직접요인의 총칭 라고 합니다. 저는 내적인 직접요인인 동기를 2개로 나눠봤는데요.  바로 현 회사에서 떠나려는 이유와 지원한 회사에 가려는 이유입니다. 현 회사에서 떠나려는 이유 모든 사람들은 겸손이 이유던 어떤 이유던간에 지금 있는 회',
    'WebStorm을 사용하는 프런트엔드 개발자를 위한 플러그인 추천JetBrains의 WebStorm을 사용해 React 기반 애플리케이션을 개발하는 프런트엔드 개발자를 위한 Plugin을 추천합니다. 이 외에도 추천할만한 플러그인이 있다면 댓글을 달아주세요. 지속해서 업데이트하겠습니다.zen코딩을 가능하게 해주는 플러그인으로 VSCode의 ES7 React',
    '아직 강의를 보지 않으셨다면 위 링크를 참고해주세요.Bergstra, James, and Yoshua Bengio. “Random search for hyper-parameter optimization.” The Journal of Machine Learning Research 13.1 (2012): 281-305.Grid Search, Random Sea',
    "React Summit은 'The Biggest React Conference World Wide'라는 캐치프레이즈로 2017년부터 열리고 있는 React 컨퍼런스입니다. 작년에는 COVID-19 감염증의 여파로 Full-remote로 열리게 되었지만, 올해는 오프라인과 remote 두 가지 hybrid 버전으로 개최되었습니다. 대부분의 컨퍼런스가 취소되거",
    'Vue.js 기반의 환경은 SEO(Search Engine Optimization)가 취약하여 이를 보완하기 위해 NuxtJS 프레임워크를 이용했습니다. NuxtJS에서 학습하면서 알게 된 Data Fetching의 asyncData와 fetch의 차이를 이야기하고자 합니다. Vue.js에서 Data Fetching 하는 법 기존 Vue.js에서는 Life',
    '요약 필터링과 라벨링을 사용한다. 나의 라벨링 관리 방법 받은 편지함은 아직 처리하지 않은 이메일만 남겨둔다 협업하는 동료들에게 업무와 관련된 중요한 사항을 이메일로 달라고 부탁한다 스팸 메일은 반드시 스팸 신고를 한다 중요하지 않은 광고, 뉴스레터는 unsubscribe 한다 단축키를 사용한다 지금보다 더 중요한 일을 하게 될',
    'React에 익숙한 사람이라면 Virtual(가상) DOM에 대해서 들어봤을 것이다. Virtual DOM은 UI 성능을 높여줌으로써 React의 인기에 기여를 한 기능이다. 하지만 2019년 Angular가 새로운 렌더러인 Angular Ivy를 발표한 때로 돌아가 보면, 많은 이들이 Angular가 Virtual DOM 대신 Incremental(증가형',
    '기존에 텍스트 복사를 구현하려면 document.execCommand("copy") 을 이용했다. 아래 글 참고 [자바스크립트] 텍스트 클립보드 복사(copy)/붙여넣기 기능 구현 방법 그러나 execCommand 메서드는 Deprecated 되었으며, 대안으로 훨씬 쉽고 강력한 Clipboard API 가 나왔다.  window.navigator.c',
    '개발자라면 누가 언급하지 않더라도 자연스레 알아야 하는 지식들이 생기죠? 그중에서 브랜치 전략에 대해 되돌아보는 시간을 가지려고 해요. 이미 갖추어진 환경에서 일한다면 크게 고민해보지 않았을 내용일 겁니다. 우리가 사용하는 브랜치 전략이 주어진 개발 프로세스에 적합한지 살펴봅시다.     브랜치 전략을 세우기 전에 필요한 현황 파악 개발자들이 코드를 만들',
    '이전 IP 포스팅에서 우리는 IP가 무엇인지, 그리고 고갈 문제를 해결하기 위한 방법은 무엇인지 간단하게 알아봤습니다.하지만 IP는 네트워크 분야에 있어 중요한 개념인 만큼 훨씬 더 방대한 내용을 담고 있는데요. 그래서 이번 시간에는 좀 더 깊이 들어가, 우리가 익히 보던 IP 주소가 어떤 구조로 되어 있는지 하나씩 쪼개가며 알아볼 예정입니다.개념이 점차',
    'HTTP 압축은 웹 서버에서 리소스들을 압축 알고리즘을 통해 사이즈를 줄임으로써, 브라우저로 전달할 때 더 작은 사이즈로 전달하기 위한 방식이다. 웹 서버로 리소스를 요청할 때 Request Header의 accept-encoding에 현재 브라우저에서 호환되는 압축 정보를 실어서 함께 요청하면, 웹서버에서 해당 압축 방식을 지원하는지 확인 후 지원이',
    'MySQL이 쿼리를 수행하는 과정MySQL이 클라이언트로부터 쿼리 요청을 받아서 실제 결과를 반환해주기까지 어떤 방식을 사용하기 있는지 알아보겠습니다. 아래는 쿼리 수행을 위해서 MySQL이 사용하는 Module 리스트입니다.| MySQL을 구성하는 요소1. Server Initialization Module2. Connection Manager3. Thr',
    "호이스팅은 쉽게 얘기해서 스코프 안에 있는 선언들을 모두 스코프의 최상단으로 끌어올리는 것을 의미한다. 호이스팅은 JavaScript 인터프리터가 코드를 해석할 때 변수 및 함수의 선언 처리, 실제 코드 실행의 두단계로 나눠서 처리하기 때문에 발생하는 현상인데 이게 또 굉장히 사람 헷갈리게 만든다. console.log(name); var name = '",
    '종종 Web App을 개발할때나 Docker혹은 Kubernetes에 접속할 때 다음과 같은 에러를 만날때가 있습니다. x509 certificate signed by unknown authority 그리고 인터넷 서핑을 하다보면 위 사진과 같이 “Your connection is not Private”라는 문구가 뜨며 하단의 Advanced를 눌러야',
    '인증과 인가를 같거나 비슷한 개념이라고 생각하는 사람들이 많을텐데, 엄밀하게는 서로 다른 개념이다. 인증과 인가는 요약하자면 시스템의 자원을 적절하고 유효한 사용자에게 전달하고 공개하는 방법이다. 인증 (Authentication) 인증은 쉽게 말하자면, 로그인 이다. 클라이언트가 자기자신이라고 주장하고 있는 사용자가 맞는지를 검증하는 과정이다. 예를 들어',
    'UML로 그릴 수 있는 다이어그램은 아주 많은 종류가 있는데 저는 그 중 가장 기본이 되는 클래스 다이어그램과 시퀀스 다이어그램을 그려보려고 합니다.클래스 다이어그램클래스가 가진 변수와 메소드를 나열하고 상속 및 호출 관계를 표현한 정적 다이어그램입니다.https://ko.m.wikipedia.org/wiki/%ED%8C%8C%EC%9D%BC:Composi',
    'PHP 부록에 있는 이주 문서를 읽으면서 정리했다. 완전한 번역은 아니며 중요도가 높다고 생각되는 부분을 주로 정리했다. 세세한 부분이나 함수는 각각 문서를 참고하는 것을 권장한다. 목차 PHP 5.6 (2014년 8월, 공식 문서) PHP 7.0 (2015년 12월, 공식 문서) PHP 7.1 (2016년 12월, 공식 문서) PHP 7.2 (2017년',
    'Django Static Files and Templates * Django를 사용하는 개발자들이 가장 많은 혼돈을 겪는 문제 중 하나인 정적 파일을 처리하는 내용을 정리한 기사입니다. * Oh Open Source Supply Chain Security, Where Art Thou? *',
    '폰노이만 병목현상: CPU의 데이터 처리 능력과 다른 장치들의 데이터 처리 능력이 매우 차이가 많이 난다. 이것이 곧 병목을 만든다.하드웨어를 통한 병목 현상 해결: CPU와 메모리 사이에 캐시 메모리를 두어 속도 차를 해결하려한다.병목현상 해결의 핵심은 ‘제한된 저장공간인 메모리에 필요한 데이터가 존재하도록 하자.’이다. 즉, Hit Rate를 올려야한다',
    '쿠버네티스 배포는 다음 두 가지 단계로 이루어져 있습니다. 도커 이미지 빌드한다. 쿠버네티스 메니페스트(manifest) 생성 후 반영한다. 커밋 SHA는 유니크(unique) 하지만 길고 읽기 어려우며 빌드 환경을 표현하지 못한다는 단점이 있습니다. 버즈빌의 경우 UI 상에서 SHA 값을 지정할 수 있고 빌드 환경에 영향을 받지 않기 때문에 SHA 값',
    '메타마스크 공식 블로그의 메인 이미지금융 거래(원화 보내기, 받기 등)를 하려면 은행에 방문해 계좌를 개설해야 한다. 이와 마찬가지로 암호 화폐 전송, NFT 구매 등 암호 화폐 관련 거래를 하려면 크립토 월렛(crypto wallet)을 설치하고 계좌 역할을 하는 지갑을 만들어야 한다.이번 글에선 메타마스크(MetaMask)라는 크립토 월렛을 설치하고 나',
    '‘웹’이란 무엇일까?  웹은 1989년 12월 영국의 ‘팀 버너스 리’가 스위스의 유럽입자 물리연구소에서 근무할 당시 개발을 시작했다고 한다. 그로부터 1년 후, 웹의 보급이 이루어졌다. 본래 컴퓨터는 단순한 계산이나 연산만 가능했다. 그런데 웹이 탄생하게 되면서 컴퓨터 간에 정보를 교류할 수 있게 되었다. 정보 교류는 인터넷에 연결된 컴퓨터끼리 가능했고,',
    "Major, Minor, Patch를 각각 주버전, 부버전, 수버전이라고도 부른다. 기존 버전과 호환되지 않는다면 Major(주主) 버전을 올린다. 새로운 기능을 추가하면 Minor(부部) 버전을 올린다. 버그를 고쳤다면 Patch(수修) 버전을 올린다. 예 0.1.0 2.9.15 1.15.0 시맨틱 버전은 '메이저.",
    'GitHub Actions에는 워크플로우를 재사용할 수 있는 워크플로우가 있다. 물론 어떤 워크플로우의 동작을 여러 저장소에서 쓰기를 원할 때 가장 쉽게 떠올릴 수 있는 방법은 액션을 직접 만드는 방법이다. Docker 컨테이너나 JavaScript 액션을 사용할 수 있어서 원하는 동작을 마음대로 만들 수 있다. 액션을 직접 만드는 게 가장 강력하겠지만',
    'Webpack5가 나오면서 Module Federation 기능을 선보인지도 거의 2년이 다 되어간다. 여러 개의 애플리케이션을 따로 빌드한 다음 런타임에 통합하여 하나의 애플리케이션으로 동작하게 한다는 멋진 기능을 Webpack 설정만으로 가능하게 되었다. 마이크로 프런트엔드의 빌드타임 통합방식은 모노레포를 사용함으로써 가능했지만 결국 여러 패키지를 한',
    '안녕하세요. 화해 데이터팀 BI/DW 엔지니어 최혜림입니다. Data Lake 와 Data Warehouse   화해팀에는 다양한 직군이 있지만, 대부분의 직군이 업무에 데이터를 활용하고 있다는 공통점이 있습니다. 데이터팀에서는 화해팀이 데이터를 더 쉽게, 더 잘 접근할 수 있도록 환경을 구축하고, 데이터 기반 의사결정을 위한 분석을 진행하고, 고객과 비즈',
    'Hygen은 자바스크립트 기반의 코드 제너레이팅 툴입니다. fs-extra와 같은 npm 패키지를 기반으로 파일시스템에 직접 접근하고 파일을 추가하는 작업을 자동화할 수 있으며, 핵심 기능을 간결하게 제공해 빠르게 배울 수 있습니다. Hygen은 기본적으로 Node.js 환경에서 잘 동작하며, Node.js 없이도 사용할 수 있는 옵션(Standalone',
    'Cocoa MVC (Massive View Controller) 개념상의 MVC 디자인 패턴과 다르게 실제 개발을 하다 보면 모든 객체가 Model, View, Controller에 속하는 것이 아니고 View의 라이프 사이클이 Controller와 밀접하게 상관되어 iOS의 ViewController는 많은 로직을 가지게 되며 계속 커지는 문제를 안고 있',
    'Django Static Files and Templates Django를 사용하는 개발자들이 가장 많은 혼돈을 겪는 문제 중 하나인 정적 파일을 처리하는 내용을 정리한 기사입니다. Oh Open Source Supply Chain Security, Where Art Thou? 오픈 소스의 보안을 지키고, 향상시키기 위한 노력의 필요성을 강조하는',
    'GitHub Actions에서 한 저장소에서 다른 저장소의 워크플로우를 실행하고 싶었다. 예를 들면 A 저장소에서 새 버전을 릴리스하면 B 저장소에서 릴리스 된 새 버전을 가지고 업데이트하는 걸 자동화해야 하는 경우였다. 기본적으로 GitHub Actions는 자신의 저장소의 워크플로우를 실행할 수 있으므로 다른 저장소의 워크플로우를 트리거 하려면 r',
    'API GATEWAY는 클라이언트와 백엔드 서비스 사이에 위치하는 리버스 프록시 역활을 하는 서비스 입니다. 더불어 인증, 속도제어, 서킷브레이커, 모니터링등 여러 공동 모듈 및 관리포인트들을 추가하여 모든 API들의 관문(GATEWAY)의 역할을 하는 서비스 입니다. 필요성? 현재 저희 사람인HR에서도 현재 마이크로서비스화가 되어가고 있고, 서비스가 성',
    'DRF를 사용하면 파이썬/Django 기반 REST API를 쉽고 재밌게 개발할 수 있습니다. 설정하기 쉽고 확장성도 좋으며 시간을 많이 아껴줍니다. Django Rest Framework의 공식 문서는 매우 방대합니다. 훌륭한 튜토리얼과 API 설명, 다양한 예시까지요. 하지만 실전이란 언제나 더 복잡하기 마련이기에 프레임워크를 여러분의 요구에 맞춰 수정',
    'MySQL 서버의 실행계획 수립(Index Dive) 단계에서 많은 CPU와 Disk storage 자원이 소모되는 경우, 어떻게 튜닝할 수 있을까?MySQL 서버는 여러 통계 정보를 이용해 가장 빠른 쿼리 실행 방식을 결정하는데, 이를 우리는 흔히 최적화라고 해요. Oracle이나 PostgreSQL 서버는 쿼리의 실행 계획을 캐시해서 재활용하는 반면,',
    'SOLID 원칙의 역사는 깊다. 나는 1980년대 후반 유즈넷(과거 버전의 페이스북)에서 다른 사람들과 소프트웨어 설계 원칙에 대해 토론하는 과정에서 이들 원칙을 모으기 시작했다. 시간이 지나면서 원칙은 교체되거나 변경되었다. 사라져 버린 원칙도 있다. 어떤 원칙들은 서로 합쳐졌다. 새롭게 추가된 원칙도 있다. 2000년대 초반 나는 안정화된 최종 버전을',
    '대부분의 동시성은 구현 이라는 키워드로 작성을 하고 병렬성은 마치 정해진 듯한 어조로 표를 쓴 것 같습니다. 맞습니다. 실제로 병렬이라는 것은 어떤 것이 동시에 실행되는 것처럼 만드는게 아니라 실제로 동시에 실행되고 있어야만 합니다. 따라서 그렇게 보이도록 만드는 것과 실제 그렇게 보이는 것은 같은 개념이라고 볼 수 있습니다. 즉, 병렬성은 동시성과 같은',
    '여는 괄호에 대응하는 닫는 괄호를 쉽게 찾게 해주는 Visual Studio Code 서드파티 익스텐션 Bracket Pair Colorizer를 내장 기능으로 대체하는 방법을 소개합니다.2022년 4 월 업데이트로 해당 기능은 디폴트(기본)기능이 되었습니다.Bracket Pair Colorizer는 여는 괄호와 닫는 괄호를 같은 색으로 꾸며줘, 코드 블록',
    '1996-11-11 - Rafael Sagula에 의해 개발된 httpget httpget 0.1 버전은 C 언어로 작성된 300줄 미만의 프로그램이었음 Daniel Stenberg가 발견하고 기여하기 시작 비슷한 시기(1996-11)에 wget의 최초 릴리즈(1.4.0)도 있었음 2022-02-0',
    '코드를 수정하고나서 풀리퀘를 올렸는데 테스트가 실패한 것을 보고 내가 놓친 부분을 찾아서 수정하는 경험을 했었고 테스트의 가치를 피부로 느낄 수 있었다. 우리 팀은 커버리지를 KPI로 잡는다. 업무 시간의 20%는 테스트 작성, 빌드 타임 개선, 모듈화 등의 기술 과제에 할당한다. 테스트 코드를 작성하고 유지하는 경험을 통해 느낀 점이 있다. 더 나은 아키',
    '최근 웹 서비스는 대부분 수직 확장(Scale Up)이 아닌 수평 확장(Scale Out)으로 서버를 확장하기 때문에 일반적으로 다중 서버 환경일 것 이다. 이런 다중 서버 환경에서는 세션 불일치 문제가 발생할 수 있다. 기본적으로 세션은 서버의 메모리(RAM)에 저장되기 때문이다. 예를 들어, 우리가 서버를 수평적으로 확장하기 위해 A, B, C 총 3대',
    '마이크로소프트가 자사 웹브라우저 ‘인터넷 익스플로러(IE)’의 지원을 2022년 6월 15일부로 종료했습니다. 1995년 8월 출시하여 윈도우95 운영체제에 기본으로 포함하기 시작한 이후, 27년 만에 역사 속으로 사라지게 됐습니다. MS는 2015년에 IE의 대체 웹 브라우저인 엣지(Edge)를 만든 후, 2020년 1월 브라우저 엔진을 크로미엄으로 바꾸',
    'equals 메소드는 이 객체가 다른 객체와 같은지 아닌지를 나타냅니다. equals 메소드는 null이 아닌 객체 참조들에 대한 동치 관계를 구현하며, 동치 관계의 조건은 다음과 같습니다. null이 아닌 참조 x, y, z에 대하여, 반사관계: x.equals(x)는 true여야 한다. 대칭관계: y.equals(',
    'Database에서 데이터를 가져올 때 서버는 Database 서버에서 SQL 명령을 통해 데이터를 가져옵니다. SQL 쿼리를 짜서 직접 호출하는 경우도 있지만 대부분 TypeORM과 같은 ORM 라이브러리를 이용하고 있습니다.우리는 왜 ORM를 사용할까요?다양한 이유가 있겠지만 저는 프로그래밍 코드로 SQL을 사용하기 위해 사용합니다. SQL문보다 코드가',
    '프로그래밍 능력, 소프트웨어 디자인 및 설계 등 업무 수행에 직접적으로 필요한 능력이 ‘하드 스킬(Hard Skill)’이라면 이러한 하드 스킬을 효율적으로 활용할 수 있게 도와주는 소통 능력, 실행력, 리더십 등 대인 관계와 관련된 정서적 능력을 ‘소프트 스킬(Soft Skill)’이라고 부르는데요. 대다수 소프트웨어 개발자들은 논리적인 사고를 하는',
    '2022년 6월 15일 웹 생태계의 역사에 한 획을 그을 사건이 발생했습니다. 바로 Internet Explorer 지원 종료입니다. 이는 2021년부터 예고된 사실이었는데요. 이 사건은 번들러와도 밀접한 관계가 있습니다. 왜 그럴까요.IE와 모던 브라우저의 가장 큰 차이점은 ES6 지원 유무입니다. ES6는 JavaScript 역사상 가장 큰 개변이 일어',
    '여러 유저가 접속해서 플레이하는 온라인 게임은 1개 서버나 호스트에 여러 클라이언트가 붙어서 동작하는 구조를 기본으로 차용하고 있습니다. 리슨 서버, 서버-클라이언트, 데디케이티드 서버 등 종류도 많습니다. 오프라인으로만 플레이하는 패키지 게임이 아니라면, 완벽히 1대1 구조인 온라인 게임은 거의 찾아보기 힘들다고 해도 과언이 아닐 것입니다. 그래서',
    '샤딩은 애플리케이션의 성능을 개선하기 위한 우리의 목표들 중 중요한 마일스톤이었습니다. 지난 몇 년간, 더 많은 사람들이 삶의 일부분에서 노션을 사용하는 것을 보며 뿌듯했습니다. 그리고 이는 당연히 회사들의 모든 위키들, 프로젝트 추적기, Pokédexes(역: 포켓몬 백과사전)와 같은 저장해야 할 수십 억 개의 새로운 블록, 파일, 공간들을 의미했습니다.',
    '편집기에서 하이퍼링크를 넣었는데, 테스트 발송을 하거나 실제 발송을 하면 링크의 밑줄이 사라지는 현상이었습니다. 원인을 찾는 과정은 혼란스럽고 어려웠지만 결국 문제는 하이퍼링크를 만드는 &lt;a&gt;태그의 속성 중 이동할 주소를 가리키는 href 속성 때문이었습니다. href 속성을 입력하지 않거나 특정 클라이언트(Gmail😂) 링크를 필터링하는 과정에',
    '번들러는 JavaScript 모듈을 한 파일로 연결합니다. 이를 위해서는 의존성 분석이 필수적이지요. 과거부터 Browserify나 GulpJS가 이 기능을 충실히 수행하고 있었습니다.그런데 React.js, sass, babel 등 다양한 도구가 등장하면서, 단순히 JavaScript 파일을 연결(Concatenate)해주는 것만으로는 부족한 시대가 열렸',
    'New Relic 을 이용하여 서버의 처리량(throughput), 평균 응답 시간, 오류 발생율(Error rate), Slow transactions 가 있는지, Host 의 CPU/Memory 사용율 등을 주로 확인합니다. Error rate 가 0% 초과라면 어떤 Error 가 발생했는지, 해당 Error 가 발생했던 thread 의 stack tr',
    '각 프로퍼티가 하는 일을 광범위하게 이해한다면 언어 전체를 깊게 이해할 수 있을 것으로 생각했었습니다.하지만 제가 깨달은 핵심은 CSS는 프로퍼티 모음 그 이상이라는 것입니다. CSS는 상호 연결된 레이아웃 알고리즘의 집합체입니다. 각 알고리즘은 고유한 규칙과 숨겨진 메커니즘이 있는 복잡한 시스템입니다.특정 프로퍼티가 어떤 역할을 하는지 배우는 것으로는 충',
    '상태란, 변화하는 데이터 즉, UI에 동적으로 표현되는 데이터, 사용자에 action에 따라서 변경될 수 있는 컴포넌트의 부분, 자바스크립트의 객체로, 웹페이지내에서 눈에 보이는 데이터들(ex. 메뉴, 게시글 제목, 게시글 내용)뿐만 아니라 서버와 주고 받아야하는 데이터를 말한다. 다음은 React에서 말하는 상태(state)이다. Plain Javasc',
    '외부에서 직접 접속하기 위한 인스턴스이므로 퍼블릭 IP를 할당하도록 설정하였다. 지금 작업중인 VPC의 IPv4 CIDR는 172.31.0.0/16 인데, SpringBoot 가 올라갈 EC2의 서브넷은 IPv4 CIDR가 172.31.0.0/20 인 기본 서브넷으로 할당하였다. 이를 이야기하는 것은 추후 MySQL 인스턴스가 할당될 프라이빗 서브넷과 구분',
    'array.reduce()는 배열 요소에 주어진 콜백 함수를 실행한 값을 누적하여 하나의 결과값으로 리턴한다. initialValue은 누적 초기값으로 필수값은 아니다. array.reduce(callback, initialValue); 콜백함수에는 acc, currentValue, currentIdx, array 총 4개의 파라미터가 주어진다.',
    '비즈니스에 따라 기본 키(PK, Primary Key) 값을 어플리케이션에서 직접 지정하는 것이 아니라, 키 값이 자동으로 생성되도록 만들고 이를 사용하는 경우가 있습니다. JPA는 기본 키 자동 발급을 위한 기능과 몇 가지 전략을 제공하는데, 이번 포스트에선 전략 별로 어떤 차이점이 있는지 정리해보았습니다. 1. GenerationType.IDENTITY',
    '언제든 릴리즈가 가능한 상태인 Trunk 브랜치가 있고, 거기서 모든 개발자들이 바로 각자 자기 작업을 진행하며 Trunk에 바로 커밋하는 방식이다. 하위 브랜치 없이 바로 Trunk에 merge를 하는만큼 나도 모르게 큰 문제가 생길 수도 있다고 생각할 수 있다. 그러나 여기서 중요한건, Trunk에 바로 커밋을 날리기 전에 미리 해당 작업들이 개발',
    'TypeScript는 모듈 기술 문법으로 ESM 형식을 사용하지만 CommonJS로 작성된 모듈을 import할 수 있으며, CommonJS나 AMD, UMD 형식으로 소스를 출력할 수도 있습니다. 이 모든 일들은 TypeScript에서 제공하는 트랜스파일러인 tsc에서 해줍니다.또한 tsc는 모듈을 인식하고 처리할 수 있지만, 합쳐주지는 않습니다. tsc',
    '옛날 옛적 호랑이 prototype 만지던 시절의 JavaScript에는 모듈이라는 개념 자체가 없었습니다. 웹 1.0까지만 하더라도 JavaScript의 역할은 아주 보잘것없었고, 웹 2.0으로 들어와서야 AJAX의 유행과 함께 점차 그 입지를 넓혀갔지요.규모가 큰 프로그램을 개발할 때 모듈의 개념은 빠질 수가 없었고, 웹 어플리케이션 역시 예외는 아니었',
    'PHP 7.4.30, PHP 8.0.20, and PHP 8.1.7 have been releasedPHP 7.4.30 , PHP 8.0.20 , PHP 8.1.7 이 릴리스되었습니다 이것은 지원되는 브랜치에 대한 보안 업데이트입니다. 모든 사용자는 최신 버전으로 업그레이드하는 것이 좋습니다. PHP 8.2.0 Alpha 1 has been released',
    '칸반은 백로그에 필요한 작업들을 쌓아두고 작업자가 작업할 수 있을 때 우선순위가 높은 작업을 할당하여 작업을 진행하는 방법입니다. 칸반의 가장 큰 특징은 작업의 우선순위가 높은 새로운 작업이 발생하는 경우(버그, 급한 운영 이슈 등) 진행중이던 작업을 잠시 멈추고 우선순위가 높은 작업을 먼저 진행할 수 있다는 것입니다. 도도카트가 스크럼과 칸반을 혼합한',
    '언리얼 엔진에서 제공하는 기능 중에는 데디케이티드 서버(Dedicated Server, 독립형 서버)가 있습니다. 데디케이티드 서버는 서버와 클라이언트가 정확히 역할을 분리해서 동작하던 기존 서버-클라이언트 구조와 달리, 클라이언트에서 렌더링을 제거한 수준으로 동작합니다. 일반적인 서버-클라이언트 구조에서 프로파일링 툴을 활용해 서버를 튜닝하는 사례는',
    '웹 프론트엔드 쪽에서는 애플리케이션의 파일 크기가 작을수록 성능 면에서 유리하다는 인식이 있다. 실제로 성능을 측정할 때 애플리케이션 파일의 다운로드 속도가 중요한 지표로 사용되니까 어느 정도는 맞는 말이기도 하다. 그래서 Solid 같은 프레임워크는 파일의 크기가 아주 작다는 것을 강조하기도 한다. 출처: SolidJS 공식 사이트 그러다 해외',
    'A와 B라는 서로 다른 두 고객이 각각 08시 ~ 12시와 20시 ~ 24시 총 두 건의 예약을 한 상태에서, 0시부터 24시까지 24시간 동안 이용하고 싶어 하는 C라는 고객이 같은 존에서 같은 차량을 대여하고 싶어 하는 상황을 생각해 봅시다. 이때 만약 A와 B에게 서로 다른 차량이 배정된 상태라면 C는 이용할 수 있는 차량이 없을 것입니다. 두 차',
    '테스트 코드는 애플리케이션 코드 못지 않게 높은 품질을 유지해야 합니다. 낮은 품질(이해하기 어려운 코드, 여기저기 깨져있는 테스트)의 테스트는 유지보수가 어렵고 기술부채에 못지 않은 부채로 다가옵니다. 그래서 테스트 코드의 높은 품질을 유지하기 위해 다양한 Builder, Helper 클래스들이 나오게 되고, 테스트 전용으로 의존성을 추가하기도',
    'Frontend 개발을 하면서 state 를 관리하는 방법은 여러가지 방법이 있습니다. 첫 번째로, 라이브러리를 통해 관리 하지 않고 직접 state 를 관리하는 방법입니다. 이 방법은 작은 프로젝트에서 유효할 수 있습니다. 하지만 규모가 있는 애플리케이션에서 직접 state 를 관리하게 된다면 props drilling 이 심각하게 발생하거나, st',
    'Partition은 RDDs나 Dataset를 구성하고 있는 최소 단위 객체입니다. 각 Partition은 서로 다른 노드에서 분산 처리됩니다. Spark에서는 하나의 최소 연산을 Task라고 표현하는데, 이 하나의 Task에서 하나의 Partition이 처리됩니다. 또한, 하나의 Task는 하나의 Core가 연산 처리합니다.즉, 1 Core = 1 Tas',
    "현재 브랜치에서 커밋을 통해 만들어진 모든 변경사항들 중, <upstream>에 없는 것들은 임시 영역에 저장됩니다. 이렇게 저장된 커밋들은 git log <upstream>.HEAD로 볼 수 있는 커밋들과 같습니다. --fork-point가 설정되어 있다면 git log 'fork_point'..HEA",
    'React, Vue관련 익스텐션, 모든 분야와 상관없이 추천하는 익스텐션을 소목차로 나눠 정리해두었습니다.적절한 익스텐션을 사용하면 개발 생산성이 올라가니 설명을 보시고, 익스텐션을 잘 조합하여 생산성을 올려봅시다.이 외에도 추천할만한 익스텐션이 있다면 댓글을 달아주세요.ES7 React/Redux/GraphQL/React-Native snippets자주',
    '아무 설정도 하지 않은 vim은 뭔가 황량합니다. 이 vim을 예쁘게 꾸미는 방법에 대해서 알아보도록 하겠습니다. 직접 vimrc를 설정해서 꾸밀수도 있지만, 시간이 오래걸리므로 쉽게 다른사람이 만든 vim 세팅을 다운로드해서 꾸며보도록 하겠습니다. 대신 각 라인마다 설명을 적어둘것이니 참고해서 커스텀하면 되겠습니다. Download Link -&',
    '심사 거절 경험 App Store Connect Rejected은 iOS 개발자 들이 일을 할 때당혹스럽고, 힘들게 하는 부분 중 하나 라고 생각됩니다..리젝의 경험이라면 작은 경험이라도 공유되면 좋을 것 같아 글을 가볍게 적어봅니다. 주된 내용은 “한국어 회신도 필요할 때 좋은 회신 방법이 될 수 있다” 입니다.우선 저는..iOS 개발자로 언제부터 시작했',
    '빈도주의(Frequentist) vs 베이지안(Bayesian)A/B 테스트 결과를 빈도주의(Frequentist) 방법으로 해석하려면 p-value가 필요합니다. P-value는 실험군과 대조군간에 차이가 없다는 귀무가설이 참이라고 했을 때 실험을 통해 관찰된 데이터보다 더 극단적인 데이터가 나올 확률인데, 이 값이 작다는 건 귀무가설이 맞다는 가정하에',
    '모던 자바스크립트는 2015년에 나온 ECMAScript 2015(6판)와 그 이후의 판을 구현한 자바스크립트이다.ECMA-262 5판은 2009년 12월에 출판되었다. 그 이후 수년간 새로운 판이 나오지 않다가 2015년에 6판이 나왔다. 5판과 6판 사이의 갭이 아주 크고, 6판 이후로 많은 변화가 있었기 때문에 많은 개발자들이 비공식적으로 ES6와 그',
    '스와이퍼(swiper) 기능이 필요하면 SwiperJs 라이브러리를 사용하는데, 디자인을 그대로 사용하지 않고 변경 후 사용합니다. 이번 포스트에서는 스와이퍼를 커스터마이징(customizing)하는 방법과 몇 가지 예시를 작성하였습니다. 1. 스와이퍼 커스터마이징 방법Permalink 다음과 같은 방법으로 스와이퍼를 커스터마이징합니다. 사용하려는 스와이퍼',
    'Callables: Python\'s "functions" are sometimes classes Python에서 함수와 클래스에 대한 조금 깊은 논의와 설명을 하는 기사 입니다. All you need to know about Asterisks in Python 외부에 공개되는 매개변수로 선호하지 않지만, 내부함수 작성시 밥먹듯이 사용하는 *arg',
    '크롬 102 버전에서 처음으로 등장한 새로운 개발자 도구 탭입니다. 아직 실험단계이지만 체험해 볼 수 있습니다. 이름에서 알 수 있듯이 성능을 측정하는 탭 같지만, 성능 탭과 라이트하우스, web vitals같은 도구들이 이미 있는데 왜 굳이 새로운 탭을 만들었을까요?문서에서 소개하는 이유는 3가지입니다.(아마 기존 성능 탭을 의미하는 것 같지만) 정보가',
    '테스트 코드 작성의 어려움을 팀원들을 보면 본인이 테스트 코드를 작성해본 경험이 부족해서 혹은 테스트 프레임워크 (JUnit, Jest, Mocha 등) 숙련도가 떨어지기 때문이라고 생각하는 경우를 종종 본다. 하지만 테스트 코드 작성 경험, 테스트 프레임워크 숙련도로 인한 어려움은 생각보다 큰 이유가 아니다. 경험상 대부분은 테스트를 작성하기 어려운 구현',
    '데이터베이스 스키마는 데이터베이스에서 자료의 구조, 자료의 표현 방법, 자료 간의 관계를 형식 언어로 정의한 구조이다. 데이터베이스 스키마에는 다음과 같은 내용들에 대해 정의되어 있습니다. 데이터베이스를 구성하는 테이블 정보(이름, 필드, 데이터 타입 등)와 테이블 간 관계(relationship) 같은 정보 데이터 조작 시 데이터 값들이 갖는 논리적인 제',
    '상당히 많은 구성 언어가 있지만 놀랍게도 단 하나도 범용적으로 쓰이는 언어가 되지는 못했다. 이유가 무엇일까? 어떤 사람은 손으로 직접 데이터 구조를 작성하는 것이 그렇게 어려운 일은 아니라고 생각한다. 모든 것을 JSON으로 구성해서 일을 처리하면 왜 안 되는 걸까? JSON이 작업에 충분한 추상화를 제공하지 못한다면 Python같은 범용 프로그래밍 언어',
    '대표적인 잘못된 개념들 중 하나는 바로 이벤트 루프가 자바스크립트 엔진(V8, Spider Monkey 등)의 일부라는 것이다. 하지만 이벤트 루프는 단지 자바스크립트 코드를 실행하기위해 자바스크립트 엔진을 이용하기만 할 뿐이다. (역주: 실제로 V8 엔진에는 이벤트 루프를 관리하는 코드가 없다. Node.js나 브라우저가 이벤트 루프를 담당하는 것) 이벤',
    '일반적으로 런타임 환경 별로 배포 도구가 다르기 마련입니다. 버즈빌은 쿠버네티스는 스피네이커(Spinnaker), AWS S3는 드론(Drone) CI를 사용하고 있습니다. 그리고 배포 도구 별로 다른 배포 방식을 가지게 됩니다. 따라서 사용자는 각각의 배포 도구 사용에 익숙해져야 하며, 배포 파이프라인의 구체적인 내용을 이해하고 있어야만 합니다. 즉, 런',
    'Go와 Rust는 C/C++정도의 퍼포먼스를 내면서 더 좋은(?) 언어를 목표로 한다고 한다.stibee.com과 같은 스타트업에게 생산성 좋고 퍼포먼스까지 월등한 언어는 EC2 인스턴스의 타입을 낮추고 서버 수를 줄여주어 금전적인 기여를 하고, 기능 개발의 시간도 줄여주니, 주력 언어를 선택하는 것은 매우 중요하다 하겠다.Go로 매우 만족하며 지내던 와중',
    '중요한 자료의 소실을 막기 위해서 백업 파일을 만드는 것은 중요합니다. 또한, 백업 파일들을 항상 최신(혹은 최신에 가깝게)으로 유지하는 것은 언제 일어날지 모르는 상황에 대비하여 반드시 필요한 작업이 될 것 입니다. Elasticsearch에서는 인덱스 백업을 위해 스냅샷 기능을 제공하고 있습니다. 이것을 보다 잘 활용하기 위해서 스냅샷 기능의 특징을',
    'CORS와 SOP는 모두 출처(Origin)와 관련된 개념이다. 따라서 이 두가지에 대하여 이야기를 하기 전에 Origin이 무엇인지 알고 넘어가야한다. 출처는 URL의 스킴(프로토콜), 호스트(도메인), 포트 이 3가지로 정의된다. 즉, 어떤 URL이 같은 출처인지를 판단하려면 URL의 프로토콜, 도메인, 포트가 모두 같은지 확인하면 된다. 동일 출처 예',
    'Python Standard Library changes in recent years Python 3.8 ~ 3.10 사이에 추가된 새로운 모듈(혹은 기능)에 대해서 짧고 간략하게 소개하는 기사입니다. The overengineered Solution to my Pigeon Problem OpenCV와 Python을 활용해서 비둘기를 쫓아내는 도구',
    '결과물을 보기 위해 앱을 띄워놓고 만족하는 조건을 재현해서 확인해볼 수도 있지만 조건을 재현하는 과정은 꽤 번거로운 일입니다. 예를 들어 결제가 완료된 뒤에 보여야 할 모달을 구현했다고 한다면 결과물을 확인하기 위해 변수를 조작하거나 심지어는 직접 결제해보아야 할 수도 있습니다. 스토리북은 UI 컴포넌트를 독립적인 환경에서 그려볼 수 있는 툴 중 하나입니다',
    '웬만한 홈페이지에는 다 들어가있는 공유기능. API 이용이 익숙하지 않으면 무슨 소리인지 모르겠고 헤매기 십상이다. 혹시나 도움이 될까 해서 작성해본다. 관련 문서 링크 모음 카카오 링크 api sdk 다운로드 페이지 네임스페이스 안내 페이지 데모 페이지 카카오 API에서 제공하는 기능이 너무 많아 헷갈릴 수 있는데, 오늘 다룰 부분은 어플 등이 아니라',
    '2년 정도 전에 master 브랜치의 의미에 대한 문제가 제기된 후에 GitHub이 main으로 결정했기에 이젠 main이 기본으로 자리 잡았다. 지금은 GitHub에서 새 저장소를 만들면 main 브랜치가 기본 브랜치로 생성이 된다. 그런데도 그 이전에 만든 저장소는 master 브랜치를 그대로 사용하고 있었다. 바꾼 저장소도 있고 관리 안 하다 보니 아',
    '사설 IP 주소는 사설 네트워크(Private Network)에 연결된 디바이스를 식별하기 위해 사용되는 IP 주소이다. 사설 IP 주소는 사설 네트워크 내에서만 유효한 주소이며, 따라서 외부 인터넷에서는 사용될 수 없다. 공인 IP주소는 인터넷에서 네트워크 디바이스를 식별하기 위해 KT, U+, SK와 같은 인터넷 서비스 제공자(ISP) 가 제공하는 IP',
    '포스트는 AWS에서 제공하는 완전관리형(fully-managed) NoSQL 데이터베이스인 DynamoDB를 사용하여 관리하고 있었는데요. 기존 인프라에서 바로 검색을 적용할 수는 없었습니다. NoSQL과 DynamoDB의 특성상 데이터를 가져올 때 복잡한 조건을 걸 수가 없다는 문제가 있었기 때문입니다. scan 작업에서 조건을 걸 수는 있지만, 그건 조',
    '먼저 우리 집에서 구글까지의 경로를 알기 위해서 인터넷하면 빠질 수 없는 IP에 대해서 간단하게 알아보자. IP 주소라는 단어는 컴퓨터 관련 전공을 하신 분이 아니더라도 굉장히 익숙한 단어이다. 일반적인 환경에서 우리가 인터넷에 접속할 때 이 IP 주소가 우리 집 주소의 역할을 한다고 생각하면 된다. 마찬가지로 우리 집에서 구글까지 가는 길목에 있는 지점들',
    'Docker는 컨테이너에 기반해 애플리케이션을 구축하는 소프트웨어 플랫폼이다. 가상 머신처럼 독립된 실행환경을 만들어주는 것으로, 운영체제를 설치하 것과 유사한 효과를 낼 수 있지만, 실제 운영체제를 설치하지 않기 때문에 설치 용량이 적고 실행 속도 또한 빠르다. 예전에는 윈도에 VM Ware와 같은 가상 머신을 설치하였으나 최근에는 리눅스 계열에서 Doc',
    'Go 서비스에서 HTTP 요청에 대한 Trace를 남겨 DynamoDB 요청의 응답 시간에 큰 영향을 미치는 Credential Token 발급 로직을 찾아내고 최적화한 내용을 담았습니다. Amazon DynamoDB는 낮은 응답 시간과 strong consistency를 지원하는 NoSQL 데이터베이스입니다. 사용자에겐 노출되지 않지만 읽기, 쓰기 요청이',
    'MySQL DB를 RDS로 이관하는 작업을 진행하였습니다. 무엇 때문에 이관을 결정하게 되었는지와 어떻게 이관을 진행하였는지에 대해 글을 써보도록 하겠습니다.stibee.com은 작년 11월에 정식 오픈한 새내기 이메일 마케팅 서비스 입니다. 사실 오픈 초기부터 얼마전까지만 해도 AWS EC2의 m4.large 인스턴스 하나로 운영되던 서비스였습니다.(사실',
    'API 개발 시, Mortar가 제공하는 CLI를 통해 gRPC API 개발 및 배포 과정을 도와주고 있습니다. 이 과정에서 build 디렉토리 내에 Gradle 빌드에 필요한 몇 가지 파일들을 생성하는데요. 이를 전체 프로젝트 빌드 과정에 포함하기 위해 처음에는 아래와 같이 스크립트를 만들도록 가이드하였습니다. 실제 코드를 통한 플러그인의 구성과 동',
    '"아듀! 인터넷 익스플로러" 마이크로소프트, 6월 15일 IE 지원 종료 : Microsoft의 IE 웹브라우저가 올해 6월 15일로 지원이 종료된다.(한국어) React Suspense 알아보기 : React 18에 Suspense가 어떤 문제를 해결하고 어떻게 사용하는지 설명하는 글이다. 기존에는 개별 컴포넌트가 로딩 상태를 가지고 표현해야 했고 컴포넌',
    '시작하며 안녕하세요. 카카오엔터프라이즈 AI Assistant 팀 Phil(이민철), John(조승우), Eileen(안애림)입니다. AI Assistant 팀은 흔히 ‘AI 비서’라고 불리는 AI 어시스턴트 구현을 위해 필요한 기술을 연구하고, 서비스로 연결시키는 조직입니다. 자연어 처리(NLP, Natural Language Processing) 기술을',
    '버즈빌에서는 빠른 광고 서빙을 위해서 Elasticsearch에 광고를 캐싱하고 있습니다. RPS가 높으므로 모든 광고를 inverted index에 올려놓고 광고 요청이 왔을 때 매칭되는 광고를 빠르게 찾아내는 것이죠. 광고 서버에서는 다양한 이유로 각 광고의 랜덤성을 조절해야 할 필요가 있습니다. 예를 들어 광고 A1, A2가 있고, 요청 R1, R2이',
    '서버 컴포넌트(RSC)는 페이지 로드 성능, 번들 크기뿐만 아니라 가까운 미래에 React 애플리케이션을 어떻게 작성할지에 대해 큰 영향을 미치는 흥미로운 새 기능입니다. Plasmic 앱은 React를 통해 비주얼 빌더를 만들고 있고, 많은 고객이 Plasmic을 통해 성능이 중요한 마케팅 및 이커머스 사이트를 구축하기 때문에 React 성능에 큰 관심을',
    'Atlas는 조직이나 팀이 동일한 방향성과 생각을 유지할 수 있도록 ‘프로젝트’와 ‘목표(Goal)’이라는 관점의 상위 뷰를 보여줄 수 있는 제품입니다. Jira, confluence, slack과 같은 여러 협업도구들을 사용하면서 정보의 파편화로 인해 확인하기 어려운 방향성과 목표관점에서 제대로 진행되고 있는지 관련된 정보들에 접근할 수 있는 링크들을 한',
    'Lighthouse의 홈페이지를 살펴보면 Lighthouse는 웹 앱 및 웹 페이지를 분석하여 최신 성능 지표와 개발자의 Best Practice 사례에 대한 인사이트를 제공합니다.라고 나와 있습니다. 어떤 지표를 제공하는지 실제로 Lighthouse를 실행하여 한번 살펴봅시다! create-react-app을 이용해서 리액트 앱을 만든 후, 크롬의 Lig',
    'HTTP는 요청과 응답을 한번 주고받으면 바로 연결을 끊어버리는 특성을 가지고 있다. 그리고 다음 요청을 하기 위해 다시 연결을 맺어야한다. 이를 HTTP의 비연결성(Connectionless) 이라고 한다. 또한 HTTP 프로토콜은 요청과 응답을 교환하는 동안 상태(Status)를 저장하지 않는다. 따라서 HTTP 레벨에서는 이전에 보냈던 리퀘스트나 리스',
    'Tekton은 CI/CD 파이프라인을 빠르게 구축하기 위한 프레임워크를 제공하는 Cloud-native 오픈소스 프로젝트입니다.(CD foundation Project) Tekton의 구성 요소들은 Kubernetes의 CRD(Custom Resource Definitions)로 정의되어 다른 pod이나 resource와 같이 Kubernetes CLI와',
    '어플리케이션을 이동한다라는 조금 생소하긴 하지만 어플리케이션이 마운트되는 위치를 이동한다는 뜻이다. 루트 돔 트리를 벗어나 다른 돔에서 어플리케이션의 일부분을 그릴 수 있다. 그동안 팝업이나, 툴팁처럼 현재 UI 문맥과 다를 경우 포탈을 사용했다. 이 글에서는 리액트 포탈의 기능과 사용 방법을 정리하겠다. 그 동안 포탈에 대해 오해했던 모양이다. 어플리케',
    'Github 의 코드리뷰를 보면 다음과 같이 No newline at end of file 메세지를 보여준다. 이는 파일 끝에 개행문자(newline)이 없습니다 라는 의미인데, POSIX 기반의 규칙에 기반한다. EOF 가 없으면 컴파일 에러가 나는 상황을 대비한 규칙이다. 요즘 그럴일은 없지만 그래도 의도한대로 파일이 작동되는 것을 보장하기 위해 웬만',
    '변경 이전에는 null 및 false를 Union Type의 일부로만 사용할 수 있었지만, 독집 적인 타입으로는 사용할 수 없었습니다. 더 나아가 이번 변경은 PHP의 타입 시스템을 더 다양하고 안전하게 향상 시킵니다. true를 타입으로 추가하는 것을 제안하는 RFC는 아래의 true 타입 추가 RFC 를 참조해주세요. Derick Rethans가 주최',
    '트랜잭션은 완전히 성공하거나 완전히 실패하는 일련의 논리적 작업단위입니다. 은행 계좌이체를 생각해보시면 됩니다. 여기서 작업단위는 A의 계좌에서 출금하는 금액과 B의 계좌에서 입금하는 금액입니다. 둘중 하나라도 실패하게 된다면 전체 프로세스는 실패합니다. 중간에 오류가 발생하면 트랜잭션의 모든 단계를 이전으로 되돌리는 것을 롤백이라고 부릅니다. Globa',
    '40개가 넘는 Repository를 각 도메인 및 기능 시스템 단위로 생성하여 멀티 레포(Multi Repo) 방식으로 서비스를 운영하고 있었습니다.멀티 레포의 장점은 각 프로젝트가 고유의 저장소를 가지게 됨으로써, 다른 프로젝트와의 의존성을 가지고 있지 않아 독립적으로 빠르게 개발이 가능하며 비교적 크기가 가벼워 프로젝트 관리 면으로 수월합니다.그러나 이',
    '프런트엔드 개발의 가장 큰 디펜던시인 크롬 브라우저의 주요 이슈를 Chrome Platform Status의 Roadmap과 한 달간 blink-dev 활동 요약을 기준으로 정리하여 공유한다. M은 Milestone을 의미하며, M102은 102버전을 의미한다. 웹 플랫폼 관련 이슈 위주로 다루며, 서비스에 영향이 크다고 판단되는 부분은 목차에 를 표시한',
    '오래전, 2014년에 dialog 요소가 Chromium 37에 등장했다. 이 HTML 요소는 모달, 다이얼로그와 팝업을 쉽게 생성하기 위해 만들어졌다. 명세는 다음과 같이 정의된다. dialog 요소는 사용자가 작업을 수행하기 위해 상호 작용하는 응용 프로그램(예: dialog, inspector 또는 window)의 일부를 나타낸다. 지금은 20',
    'PR 생성, 업데이트, 병합, 닫힘, 코멘트 생성의 이벤트에 대한 알림을 슬랙을 통해 받고 있었습니다. (위에 링크한 글의 Slack Bot + Lambda + CloudWatch Event을 통한 알림을 사용합니다.) 팀원이 많아지고, PR 문화가 활성화되면서 기존에는 느끼지 못했던 불편함을 느끼기 시작했습니다. 리뷰를 받기 위해 대기하는 시간이 늘어나고',
    'React Testing Library(RTL)은 기존의 Enzyme와 같은 도구의 구현 기반의 테스트 방법론의 단점을 보완하기 위해 등장하였고, 행위 주도 테스트 방법론으로 테스트를 진행합니다. 먼저, 구현 기반의 테스트 방법론 이란, 주로 애플리케이션이 어떻게 동작하는지에 대해서 초점을 두어 테스트 코드를 작성합니다. &lt;div class="titl',
    '웹에서 Form을 다루다 보면 Form의 모든 필드 중에 하나라도 사용자 입력이 있었는지 알고 싶을 때가 있습니다. 예를 들면, 사용자로부터 설문을 받는 Form이 있을 때 사용자가 한 문항이라도 입력한 게 있는 상태에서 페이지를 이탈하려고 하면 정말 이탈할 것인지 확인창을 띄우고 싶은 경우가 그렇습니다.   이런 경우에 React Hook Form을 사용',
    '안녕하세요! 데이터 과학자 Dane입니다. 저는 머신러닝을 포함해 데이터와 관련된 많은 것을 좋아하지만, 그 중에서도 특히 추천/개인화를 좋아합니다. 또 운이 좋게도 카카오 추천팀을 비롯한 여러 곳에서, 나름대로 다양한 종류의 추천/개인화를 실무적으로 혹은 개인적인 흥미로 경험하고 공부해왔습니다. 최근 추천과 개인화를 공부하거나 도입하고자 하는 많은 분들께',
    '커뮤니티 속 Compose 여러 기업에서 Compose를 채택해 눈에 띄는 최신 기능을 앱에 더하고 있습니다. 예를 들어, 저희와 긴밀히 협력하는 Play 스토어 팀은 초창기부터 실험을 통해 Compose가 사용하기 쉬울 뿐만 아니라 개발자의 생산성에도 유익하다는 점을 확인했습니다. Play 스토어 팀은 “Play 스토어의 새 기능은 전부 이 프레임워크에',
    '조사에 따르면, 우리나라 20대는 한 달 동안 평균 1인당 40개의 앱을 사용하고, 월 평균 앱 사용시간은 약 150시간이라고 합니다. 카메라, 메모와 같은 필요 기능부터 쇼핑, 장보기 등 일상까지 이젠 모두 앱으로 해결이 가능한데요. 일상의 많은 부분을 차지하고 있는 모바일 앱, 어떻게 만드는 걸까요? 이번 인프메이션 #49에서는 모바일 앱 개발에 대해',
    'KSP를 통해 작성한 오류는 단순 워닝을 통해 로그를 대체할 수 있고, 오류 발생으로 빌드에 실패하도록 할 수도 있다. 이 글에서 알아볼 내용 로그 출력하는 방법을 알아본다 ksp 에서 오류 처리 방법을 살펴본다 로그 출력하는 방법 로그 출력 방법은 KSPLogger를 활용한다. KSP Logger에는 5개의 fun 정의를 가',
    '개요 최근 많은 기업에서 다양한 방법의 사용자 조사를 실시하고 있다. 기업 내부 데이터로는 알아내기 힘든 사용자 의견을 수집하고 전략적 방향을 수립하기 위함이다. 그 중 설문은 가장 빠르게 사용자 의견을 수집, 분석할 수 있는 방법이다. 따라서 사용자 경험을 중요하게 여기는 쿠팡, 야놀자, 왓챠 등 많은 IT기업에서는 조사 대행업체에 의뢰하는 것이 아닌 자',
    '기존 Java 진영에서 Spring과 함께 GraphQL을 사용하기 위해서는 위 3개가 대표적인 라이브러리/프레임워크로 3개 중 1개를 선택해 스프링에서 graphql을 사용했다고 생각합니다. 위 3개는 graphql-java / graphql-java 를 기반으로 개발되었습니다. 또한 이번에 알아볼 Spring for GraphQL은 공식적으로 gra',
    'React Context API는 React 컴포넌트 트리 내의 전역적(global)인 데이터를 공유할 수 있는 방법이다. Provider가 선언된 컴포넌트 기준으로 하위 컴포넌트에서는 해당 Context의 값을 사용할 수 있다. Provider 하위컴포넌트에서 Context를 사용할 수 있다는 것은, “Consumer는 가장 가까운 Provider기준으로',
    '(docker SSL insecure registry 사용안하기) 인증서를 사용하지 않거나, 임시로 만들어진 사설 인증서를 이용해서 Container Registry를 만들면 Image를 Pull, Push할 때 Insecure registry를 등록해 줘야 합니다. 등록 시 Docker daemon(container runtime daemon)을 재시작',
    '순수함수란 무엇일까? 두 가지 특징이 있다. 입력이 같으면 결과도 같다. (the function return values are identical for identical arguments) 부작용(side effects)이 없다 (the function application has no side effect) 함수를 몇 번 호출하던지 관계없이 같은 값',
    "크롬 브라우저가 102로 업데이트(22/05/24)되면서 변경 사항을 확인하다가 HTML 요소에 전역으로 넣을 수 있는 inert 속성에 대해서 접하게 되었다. inert는 필자에게 생소한 속성명이라 무엇인지 알아보고 그 내용을 정리해 보았다. inert 의미 inert의 사전적 의미는 '움직이지 않거나 움직일 수 없는' 라는 '비활성 상태의' 의미가 있다",
    '우리는 max-width, width를 사용해 요소의 너비 범위를 지정할 수 있다. 아래 예시는 target의 기본 너비를 parent의 50%이나, max-width를 사용해 최대 너비를 200px로 지정했다. .target { width: 50%; max-width: 200px; } (2) min() ❓ 그런데, 조금 더 간단하게 그리',
    '최대한 단순하고 일관된 형태로 단위 테스트를 작성할 수 있도록 돕는 도구들을, TestUtility라는 모듈에서 관리하고 있습니다. 이 모듈에서 가장 중요한 도구 몇 가지를 소개합니다. BaseTestCase 먼저 모든 테스트케이스들의 기반이 되는 BaseTestCase입니다. 모든 테스트코드들이 given, when, then 의 문법으로 짜일 수 있는',
    'Framer, Flinto, Origami, Invision. 많은 프로토타이핑 도구가 존재합니다. 디자인에 활력을 불어넣고 개발팀과의 커뮤니케이션을 위해 필수라고 하는 프로토타이핑. 어떻게 하기는 해야겠는 데 어려운 도구나 코드르 공부하기엔 시간이 없고, 막상 열심히 공부하면 새로운 버전이 나오고, 더 좋은 도구가 나오고. 이런 경험을 많이 하셨을 겁니다',
    '웹 어플리케이션을 개발하다 보면, 컨트롤러에서 반복되는 로직을 실행해야할 경우가 존재한다. 가령, 해당 엔트포인트에 대한 인증(Authentication)과 인가(Authorization) 기능이 대표적일 것이다. 아래 코드는 인증을 구현하기 위해 컨트롤러의 여러 메소드에서 중복 코드가 발생한 예시이다. @GetMapping("/me") public Res',
    '우리는 js에서 dom.addEventListener(이벤트, 핸들러)로 요소에 이벤트를 걸거나 html에서 onEvent(ex. onClick)를 사용해 이벤트를 적용할 수도 있다. 만약 버튼에 클릭이 발생할 때마다 특정 로직을 실행하고 싶다면 두가지 방법을 쓸 수 있다. &lt;button class="btn" type="button"&gt;나는 버튼',
    '파이썬을 활용한 데이터/AI 분석 사례 건강보험심사평가원에서 만든 "파이썬을 활용한 데이터/AI 분석 사례"입니다. PDF를 원하신다면 여기에 접속하여 하단 "파일 목록"에서 받을 수 있습니다.#python JSON Hero - A beautiful JSON viewer JSON Hero는 웹 기반 JSON 뷰어로 이미지, 비디오, 색상, 날짜 형태 등',
    'Result를 이해한다면, MSA 환경에서 에러가 전파되지 않도록 막을 수 있습니다.runCatching과 Result를 사용하면 에러 핸들링을 클라이언트에게 위임할 수 있습니다. 예제: 로그인 요청을 전달하는 서비스 흐름에서 에러 처리하기 아래와 같은 서비스 호출 흐름이 있다고 가정해보겠습니다. Server A 입장에서는 Serve',
    'Rust/Python/PHP/Node의 유명 패키지 레지스트리에서 소유자의 이메일이나 연결된 github 계정이 유효하지 않는 패키지를 탈취할 수 있음을 보여주고,이메일 계정을 탈취하기 위해 도메인을 구입하거나 폐기된 GitHub 리포지토리를 다시 살렸다고 합니다(사실 폐기된 리포지토리명으로 생성은 안 되는데 아무렇게 만든 뒤 변경하는 방식으로는 가능했습니',
    'CSS 선택자를 더 많이 추가할수록 더 정확하지만, 더 구체적일수록 나중에 필요한 스타일을 덮어쓰기 더 어려워집니다.이 양날의 검은 좋은 CSS 선택자를 작성하는 것을 어렵게 만듭니다. 구체적이되 너무 구체적이지 않아야 합니다. 이것이 바로 OOCSS에서 BEM, Atomic CSS에 이르기까지 좋은 CSS 선택자를 작성하거나 문제를 완전히 피하기 위한 많',
    '컴포넌트 상태와 프롭에 따라 리액트 엘리먼트를 동기화하는 것이 리액트로 UI 개발하는 기본 방향이다. 대부분 경우 이 구조로 개발하는 것이 엘리먼트를 직접 다루는 방법보다 더 낫다. 돔을 직접 수정하다보면 자칫 장황한 코드가 될 여기가 많기 때문이다. 그럼에도 불구하고 돔에 직접 접근할 수 밖에 없는 상황이 생긴다. 리액트는 이런 경우에 대비해 ref라는',
    '데이터 스키마의 복잡도가 높아질 수록, 코드에 그 복잡도가 그대로 흘러들어올 가능성이 커진다는 점입니다. 이 글에선 간단한 예제를 개선해 보면서, 위 문제를 어떻게 해결할 수 있을지 정리해보겠습니다. 제품의 요구사항 제가 만든 제품은 학급 대항전이었는데, 가장 많은 참여자수를 모은 학급이 우승하여 상품을 타가는 이벤트였습니다. 제품의 요구사항의 일부는 아래',
    '함수 이름에 표현된 것보다 더 많은 일을 하거나 지나치게 세부적인 구현부가 드러나기도 한다. 이런 경우 보통 if문, for문이 많고 코드가 장황하다. 가령 fetchRecentArticles 라는 함수를 마주쳤다고 상상해보자. 이 함수가 수행하는 작업은 아래와 같다고 예상할 수 있다. (1) 저장된 아티클을 적당히 불러온다. (2) 최근 X일 내에 생성된',
    'AWS DMS는 아마존이 제공하는 서버리스 데이터 마이그레이션 서비스 상품이다. 이번 글에서는 운영 환경의 OLTP 데이터베이스에 대한 통계 지표 산출을 위해 ETL을 목적으로, 원본 데이터베이스의 데이터를 S3 버킷에 Parquet 형태로 복제하는 방법을 정리하였다. 복제 인스턴스 생성 가장 먼저 복제 인스턴스를 아래와 같이 생성한다. AWS DMS 콘솔',
    '이번 글에서는 글로벌한 웹을 위해서 react i18n를 적용하는 방법과 나름의 best practice에 대해 적어보겠습니다. 이 글은 아직 이제 막 프로젝트에 i18n을 던지려는 용기 있는 개발자를 위한 글이며, 더욱 위대한 웹을 위한 글이기도 합니다. 이직이 어느정도 마무리되었고, 사이드 프로젝트도 마무리하고 새로운 아이템을 찾는 피벗 중이어서 갑자기',
    '동상이몽이라는 말처럼 각자 웹서비스 개발을 해왔지만, 모두가 같은 상황과 맥락에서 학습한 것이 아니고, 머릿속에 그리는 이미지가 달라 사용하는 용어가 서로 다를 수 있습니다. 그리고 같은 용어를 사용하면서도 그 의미와 구현된 결과물이 다를 수 있습니다.“‘드롭다운’이 들어가야 해요”라고 요청받고 나온 결과물은 ‘버튼을 클릭하면 아래로 펼쳐지는 메뉴’일 수',
    '우리가 평소 사용하던 git checkout이란 기능에 대해 더 자세히 알 필요가 있다. 우리가 흔히 새로운 브랜치를 따거나, 다른 브랜치로 커밋 상태를 이동할 때 사용하는 git checkout은 어떤 방식으로 동작하는 것일까? # git checkout 일반적으로 git clone 및 checkout을 하면, 해당 레포지토리 전체적으로 그 브랜치의 커',
    '회사 업무를 진행하다보면 매번 자주 하는 작업 중 하나가, 배포공유이다. 배포가 완료되고, Jira의 티켓들을 Release 하고나면, 어떤 티켓들이 이번에 운영에 배포되었는지를 Slack에 공유하는 것이다. 매번 하는 것이 귀찮으니, 자동화를 진행할 필요가 있다. 1. Jira Rule 생성 Jira에는 자동화를 지원하는 기능이 있다. Automation',
    '안녕하세요, 넷마블 TPM실 기술분석팀 유주영입니다. 넷마블은 물론이고, 여러 회사에서 언리얼 엔진을 사용해 게임을 개발하고 서비스합니다. 그래서 언리얼 엔진 기반으로 개발하는 게임을 마주한다면, 직접 게임을 개발하는 개발자가 아니더라도 디버깅이나 성능 분석을 위해 언리얼 엔진 개발 환경을 구축해야 하는 상황이 생깁니다. 특히, 언리얼 인사이트나 네트',
    '우리는 여러 사이트를 돌아다니면서 내가 “나”임을 증명하기 위해 계정을 만들고 로그인을 하게 됩니다. 예전에는 여러 사이트마다 각자 계정을 만드는 일이 잦았는데 최근엔 대형 회사들(eg. Google, Naver, Facebook 등)의 계정으로 로그인을 대신 할 수 있게 되었습니다. 자연스럽게 사용하는 기능이지만 자세히는 몰랐던 내용들, SSO와 SS',
    '안녕하세요. 사람인HR 서비스인프라개발팀 안드로이드 앱 개발 담당 한동훈입니다. 해당 내용은 지난 2021년에 아이엠그라운드앱 구조개선을위해 진행했던 앱리펙토링 공유하는 포스팅입니다. 필요성? 기존에 서비스중인 아이엠그라운드 앱은 MVC패턴구조로 아래와 같은 문제점들이 있었습니다. 기존 문제점 MVC패턴을 사용하고 있어 Activity,Frag',
    '새로운 애플리케이션을 구축하는 첫 번째 단계는 해당 도메인 모델을 정의하는 것입니다. TypeScript는 이 작업에 도움이 되는 많은 도구를 제공합니다. Algebraic Data Types(대수적 자로형, 줄여서 ADT)은 이런 도구 중 하나입니다. ADT란? 컴퓨터 프로그래밍, 특히 함수형 프로그래밍 및 타입 이론에서 대수적 자료형은 일종의 합성 타입',
    '1. 공유가 필요한 이유 안녕하세요. 오픈소스컨설팅에서 미들웨어 담당하고 있는 김동현입니다. 오늘은, WEB/WAS 에서 자주 언급되고 사용되는 SSL 인증서의 기본 학습을 위한 테스트를 진행해볼까 합니다. 최근에 고객사에서 사용하던 SSL 인증서가 만료시점이 되어, 파일 교체를 하였다고 합니다. 교체한 인증서와 기존에 사용하고 있던',
    '웹 기반으로 작성된 화면은 어느 플랫폼에서라도 웹뷰만 있다면 똑같이 사용할 수 있기 때문에 네이티브 앱이라도 일부 화면에 웹을 채택하는 것은 드물지 않아요.당근마켓의 주요화면은 네이티브 UI로 개발되었고 예전엔 극히 일부인 웹 화면을 위해 전용 인프라를 유지하기 보단 API를 담당하는 레일즈 서버에서 함께 처리하고 있었어요.하지만 이렇게 만들어진 웹 기반',
    '다양한 제품이 쏟아져 나오는 요즘 시대의 사용자들은 끊임없이 서비스의 품질을 판단하며 이용 여부를 결정합니다. 사용자들의 판단 기준은 계속해서 달라지기 때문에 서비스를 제공하는 입장에선 꾸준히 사용 품질을 확보하는 것이 중요한 요소가 되었습니다. 스스로를 품질광이라 생각하는 저는 ‘사용자의 요구를 만족시켜라’라는 부제로 ‘quality in use(이후 사',
    'Android 12.0부터 팩토리 내 비공개 키 프로비저닝을 팩토리 내 공개 키 추출과 단기 인증서를 이용한 무선 인증서 프로비저닝의 조합으로 대체하는 옵션을 제공할 예정입니다. 이 체계는 Android 13.0에서 의무 사항이 됩니다. 이 새로운 체계를 원격 키 프로비저닝이라 부릅니다.누가 영향을 받나요?OEM/ODM기기 제조업체는 더 이상 팩토리에서 기',
    '수학이나 전산학에서의 멱등성의 의미는 같은 연산을 여러번 실행한다고 해도 그 결과가 달라지지 않는 성질을 의미한다. 이를테면 아래의 함수는 멱등성을 갖는다고 할 수 있겠다. public int abs(int number) { return Math.abs(number); } 위 함수는 아무리 임의의 값에 연산을 여러번 적용하더라도 같은 결과값을 반환한',
    'Python How to Code a Blockchain in 6 Steps Python을 사용해서 간단한게 Blockchain을 설명하는 기사입니다. Search PDFs with AI and Python AI를 활용해서 PDF 파일 검색을 가능하게 하는 방법을 소개하는 기사입니다. 읽다보면 이게 내가 해볼만 한데? 하면서 빠져들게 됩니다.',
    '고성능의 AI 모델을 개발하기 위해서는 좋은 알고리즘만큼이나 양질의 데이터가 중요합니다. 그렇기 때문에 대규모 데이터를 전처리하여 양질의 데이터로 만든 후 AI 플랫폼에서 이를 사용하는 것이 일반적입니다. 네이버 검색에서는 어떻게 하고 있을까요? 네이버의 대규모 데이터는 데이터 저장소인 Cuve에 저장되어 있으며, Apache Hadoop 기반의 데이터',
    'SOAP의 풀네임은 “Simple Object Access Protocol” 로, HTTP, HTTPS, SMTP 등을 사용하여 XML 기반의 메시지를 컴퓨터 네트워크 상에서 교환하는 통신 프로토콜을 말합니다. 서로 다른 service들간의 연동을 목적으로 상호 이해 가능한 포맷의 메세지를 송수신함으로써 원격지에 있는 서비스객체나 API를 자유롭게 사',
    '데이터 처리 레이어의 개념(정의)를 살펴보면 데이터베이스에 대한 연결 및 영속성 처리, 선언적인 트랜잭션 관리를 제공하는 Layer라고 말할 수 있습니다. 구성 요소Permalink 데이터 처리 레이어는 Data Access, ORM, Transaction, DataSource 총 4개의 서비스를 제공하며, 각각의 SW를 살펴보면 iBatis, MyBati',
    '컴포넌트 로직을 재사용하기 위한 방법으로 고차 컴포넌트(High Order Component)를 사용한다. 써드 파티 라이브러리에서도 이 형태의 API 제공한다. 리액트 라우터는 withRouter 함수를 통해 컴포넌트에 라우터의 일부 기능을 추가한다. 리액트 리덕스는 connect 함수를 통해 전역 스토어와 연결한다. 고차 컴포넌트는 기존 컴포넌트에 컴포',
    '폰 노이만의 아이디어는 CPU, 메모리, 프로그램을 갖는 구조입니다.(앞으로 메모리는 폰 노이만 구조의 메모리, 램은 현대 컴퓨터 구조의 메모리로 이해해주세요)CPU&gt; 구성: 제어 장치(Controle Unit), 산술논리 연산장치(Arithmic and Logic Unit)&gt; 제어장치: 컴퓨터가 명령어를 읽고 해석하며 데이터 처리를 위한 명령을',
    '꽤 오랜 시간 동안 모노레포 이전 및 안정화 작업을 계속 진행해왔다. 그래도 이제는 많이 사용되는 상대적 주요 프로젝트들은 모두 모노레포로 이전이 완료되었고, 팀원들이 이제 모두 모노레포 내에서 작업이 가능한 수준으로 안정화를 시키게 된 것 같다. 콴다 팀 블로그에도 해당 블로그 글을 쓰긴 했는데, 내 스스로도 좋은 경험 및 큰 성장 과정이 되었던 것 같아',
    'Tuist 는 Xcode 프로젝트와의 생성, 유지 관리 및 상호 작용을 용이하게 하는 것을 목표로 하는 커맨드 라인 인터페이스(CLI, 명령줄 도구, 터미널을 통해 사용자와 컴퓨터가 상호 작용하는 방식)입니다. 바이너리로 배포되므로 종속성을 관리하기 위해 다른 도구에 의존하지 않고도 쉽게 설치하고 사용할 수 있습니다.저는 과거 운영 중인 프로젝트가 Swif',
    'PyCon US 2022 Highlights PyCon US 2022에서 소개된 세션 중에서 글쓴이(저자)가 뽑은 주요 내용입니다. 내용이 조금 길지만, 위트있게 소개하고 있으니 이 기사를 시작으로 PyCon US 2022를 즐겨보세요. 국내 PyCon 행사도 10월에 진행될 예정이니 많은 관심 부탁드립니다. Javascript Porting Z',
    '소스 버전 관리 도구는 시스템 형상 요소(소스 및 데이터)를 문서화하고 변경을 소스 버전관리 절차에 따라 관리하고, 효율적으로 처리 하기 위한 통제 환경을 의미 합니다. 소스 버전 관리 도구의 특징 및 기능Permalink 형상 요소(소스 및 데이터)에 대한 변경 사항을 관리 버전 관리를 수행하고, 배포 도구를 통해 변경 사항을 배포 일정 주기에 백업 도구',
    '공격 사이트 간 스크립팅(또는 크로스 사이트 스크립팅, 영문 명칭 cross-site scripting, 영문 약어 XSS)은 웹 애플리케이션에서 많이 나타나는 취약점의 하나로 웹사이트 관리자가 아닌 이가 웹 페이지에 악성 스크립트를 삽입할 수 있는 취약점이다. 주로 여러 사용자가 보게 되는 전자 게시판에 악성 스크립트가 담긴 글을 올리는 형태로 이루어진다',
    '물은 인간에게 가장 중요한 자원으로 데이터 관련 종사자에게 데이터는 물과 같다고 생각합니다. 그런데 최근 몇 년동안 이런 생각을 종종 하곤 했습니다. 내가 속한 환경은 데이터에 대한 공급, 정제 그리고 활용이 정말 원활한가? 아니라면 이 곳은 데이터 사막이지 않을까? 그렇다고 데이터 종사자로서 이 곳을 사막으로 방치해야할까? 그랬을 때 나는 어떻게 해야할',
    '수많은 스타트업에서 업무를 진행할 때 흔히 체계가 없고 힘들다 라는 이야기를 하거나 종종 듣게 됩니다. 저 역시 컬리에서 의욕을 불태우는 🔥 개발자 입장에서 체계가 없고 힘들다 라는 생각을 불현듯 하게 되었습니다. 하지만 일을 진행함에 있어서 누구나 어느 정도 인지하고 이야기로 공유되어 지켜지는 룰이 있었습니다. 문득 체계나 룰은 있는데 없다!? 생각이',
    '‘NUMA’라고 들어보셨을까요? NUMA(Non-Uniform Memory Access, 불균일 기억 장치 접근)는 컴퓨터 메모리 설계 방법 중 하나입니다.  2022년을 살아가는 우리가 접하는 PC나 서버는 대부분 멀티코어 CPU를 장착하고 있습니다. 물리적으로는 CPU 1개지만, 그 안에 코어가 여러 개 들어있습니다. 각 코어는 연산을 위해',
    'Remix와 Next.js의 객관적인 비교원문: https://remix.run/blog/remix-vs-next우리가 가장 많이 듣는 질문은 뭘까요?Remix는 Next.js와 어떻게 다릅니까?이 질문에 대해 답할 시간인 것 같습니다. 우리는 과장 없이 그 내용을 다루고 싶습니다. 만약 당신이 Remix의 팬이고 이 글을 잘난체하며 트윗하고 싶다면 트윗',
    '웹에서 3D 모델을 사용하는 것은 이미지나 비디오와 같은 다른 형태의 멀티미디어 콘텐츠를 사용하는 것과 별반 다르지 않다. 다만, 3D 모델을 웹페이지에서 표시하기 위해서는 다른 콘텐츠에 비해 몇 가지 더 고려할 사항이 있다. 먼저, 3D 모델은 이미지나 비디오처럼 웹 브라우저에 &lt;img&gt;나 &lt;video&gt;와 같은 태그로 src 특성만',
    '표준프레임워크는 웹기반 정보화시스템 구축시 필요로 하는 어플리케이션 아키텍처, 기본기능 및 공통 컴포넌트를 제공하는 프레임워크로서 다음과 같이 실행환경, 개발환경, 운영환경, 관리환경과 공통컴포넌트 로 구성되어 있습니다. 실행환경은 본인이 만드는 시스템의 실행의 기반이 되는 프레임워크 개발환경은 개발에 필요한 구현도구 IDE(표준프레임워크는 이클립스 기반으',
    '이번 포스트에선 캐러셀(carousel) 효과를 정리하였습니다. 1. 텍스트 Fade In 효과Permalink 아래에서 위로 텍스트가 올라오는 효과입니다. 영역 표시나 크기를 설정한 속성들에 대한 설명은 제외하겠습니다. items클래스 overflow: hidden - 자신의 영역 밖에 위치한 엘리먼트(element)가 보이지 않도록 감춘다. item 클',
    '초 젠킨스 CI 서버 구축을 처음 해봤고, 그걸 계기로 자동화에 관심이 생겨 일 년 동안 틈틈이 팀 내 배포/개발 프로세스를 개선시켜왔다. 사실 관심이 생겼다는 말은 빈약한 표현이고 나는 내가 이 정도로 의미없는 반복 작업을 싫어하는 사람인줄 몰랐다. 아무 생각없이 할 수 있는 반복 작업도 가끔씩하면 정신 건강에 좋다고 생각했었다. 하지만 개발 프로세스에',
    '미디엄에 게재된 Taylor Brownlow의 아티클(Data &amp; Analytics Trends to Watch in 2022)을 번역한 내용입니다. 2022년 2월에 나온 아티클을 2022년 5월에 번역해 올리지만 여전히 흥미로운 이야기들이 있네요. 번역에 대한 피드백은 언제나 환영합니다. (minju@datarian.io로 보내주세요) 그럼 재밌',
    '프레임워크를 직역하여 해석하면 제공받은 일정한 요소와 틀 규약을 가지고 무언가를 만드는 일 입니다. 이를 IT에 접목시키면 특정 프로그램을 개발하기 위한 여러 요소들과 메뉴얼인 룰을 제공하는 프로그램 으로 Spring, Django, Ruby on Rails 등이 이에 속하며, 어플리케이션 틀과 구조를 프레임워크에서 제어하고, 프레임워크 위에서 개발자의 코',
    '영상 파일은 용량이 크다. 그러나 용량을 줄일 수 있다. 우선 압축률이 높은 코덱으로 변환해서 저장하면 용량을 아낄 수 있고, 다음으로 화질을 저하시켜서 할 수도 있다. 사람 눈에는 거기서 거기인 정도로 화질을 저하시키면 된다. 필요한 것은 ffmpeg다. 리눅스 사용자는 apt install ffmpeg 같은 명령어로, 맥 사용자는 brew inst',
    '이번 시간에는 메뉴에서 활성화된 버튼을 중앙에 배치하는 효과를 만들어보았다! 1) html html을 보면 전체를 감싸는 .container와 .list가 여러 개의 .btn을 감싸는 구조이다. &lt;div&gt; &lt;h2 class="text"&gt;You cliked "&lt;span class="result"&gt;?&lt;/span&g',
    "이번 시간에는 배열의 값에 접근할 수 있는 2가지 방법(index, array.at())에 대해 알아보았다! 배열에서 인덱스에 해당하는 값에 접근할 때는 arr[index]방식을 사용할 수 있다. const arr = ['apple', 'banana']; arr[1]; 만약 배열의 마지막 값에 접근하고 싶다면, arr.length() -1",
    '권한이 없는 사용자에게 중요한 정보가 유출되는 것을 뜻합니다. 공격자는 이러한 정보를 사용하여 시스템, 사용자 또는 관리자에게 추가적인 공격을 가할 수 있습니다. 예를 들어 : Error message로부터 Internal server의 IP 또는 name 노출 HTTP헤더나 file확장자로부터 server/service/technology에 사',
    '장애(outage)란 사용자가 직접 경험할 수 있는 시스템의 문제 또는 사용자에게 직접 영향을 주지는 않더라도 내부 시스템이 기대한 대로 동작하지 않는 것을 말합니다. 2021년 LINE 플랫폼 서버의 장애 건수를 집계해 보면 다음과 같습니다.  그래프를 보면 장애가 불규칙적으로 발생하는 것을 확인할 수 있는데요. 예를 들어 2월과 5월',
    '테스트 자동화는 테스트 커버리지를 늘리는데 보조재 역할을 한다고 볼 수 있어요. 테스트 범위의 일정 부분이 자동으로 수행되면서, 테스트 엔지니어가 다양한 테스트를 할 수 있는 시간을 벌어주죠. 테스트 커버리지 확대의 주체가 테스트 엔지니어이긴 한데요, 결과적으로 자동화의 도움으로 커버리지가 늘어난다고 볼 수 있겠네요. 다음 테스트의 일관성과 신뢰성을 확보',
    'AWS MGN은 애플리케이션 단의 마이그레이션을 가장 효율적이고 안전하게 클라우드로 마이그레이션을 할 수 있는 방안으로 자동화된 리프트 앤 시프트(리호스트) 솔루션으로서 기업들이 가지고 있는 기존의 애플리케이션, 아키텍처 혹은 마이그레이션되는 서버들에 대한 어떠한 변화도 없이 애플리케이션을 마이그레이션 할 수 있다는 특징이 있습니다. 그림. AWS',
    '보안 수준이 낮은 앱의 액세스를 2022년 5월 30일부터 막아서, 2-Step auth를 켜고 App password를 사용해야 Python smtp client로 이메일을 보낼 수 있게된다. (기업용 Google workspace는 계속 지원한다고 한다. 개인 메일만 해당된다.) 이전 설정 그 전에 해놓은 설정은 크게 두 가지 였다. 1) Gmail',
    'YAML 엔지니어가 되지 마세요. 자신이 업계에 막 진입한 새로운 소프트웨어 엔지니어라고 생각해 보자. 이론을 공부하고 주말에 사이드 프로젝트를 하면서 준비가 되었다고 생각했다. 하지만 이제 새로운 도구와 개념의 파도에 휩싸이게 된다. 마이크로 서비스? REST? 클라우드 컴퓨팅? RPC(IDL은 무엇인가?)? Docker(컨테이너는 무엇인가?)? Ku',
    '웹사이트 코딩과 이메일 코딩은 생각보다 많은 차이가 있습니다. 이에 대해서는 표준에 대해 말하지 않고 넘어갈 수 없습니다.만일, 내가 작성한 웹페이지가 인터넷 익스플로러에서는 잘 표시되는데 크롬에서는 그렇지 않다면 어떨까요? 이러한 문제를 방지하고자 웹 표준이 탄생하게 되었습니다. 규칙을 정하고 이것을 따라 웹사이트와 브라우저를 만들자고 약속한 것이죠. 오',
    '크게 시대를 4개로 나눌 수 있다고 생각합니다.이전의 시대최초의 프레임워크컴포넌트 중심 뷰 계층풀스택 프레임워크(← 지금은 여기입니다.)각 시대에는 고유한 중심 갈등이 있었습니다. 각 시대에서 우리는 커뮤니티로 중요한 교훈을 배웠고 천천히, 그러나 확실하게 발전했습니다.오늘날에도 논쟁은 뜨겁습니다. 웹이 너무 비대해진것 아닌가? 일반적인 웹사이트를 정말 리',
    'webpack은 ES Module 형태로 번들을 할 수 없다. webpack을 사용 할 때에는 일반적으로 commonjs 형태로 번들링을 하게 되는데, commonjs로 번들링한 라이브러리를 나중에 다른 프로젝트에서 사용하게 되면 Tree-Shaking 을 지원하지 않는다고 한다. 그럼 또 Tree-Shaking은 뭐지??? 🚀 참고 (Webpack 2',
    '일반적으로 Java로 작업을 하다보면 Java 8과 11을 보통 많이 쓰는 것 같다. 문득, "왜 그렇지?"라는 생각이 들었고 특히 Java 8에서 어떤 변경사항이 있었는지 궁금해졌다. 따라서 알아보기로 결정했다. Java 8? Java 8에서 자바 개발자가 궁금해할만 한 변경 사항은 다음과 같다. Lambda Expression &amp; Method',
    'Lerna is dead — Long Live Lerna : 프로젝트 중단을 발표했던 모노레포 도구 Lerna의 소유권을 Nrwl이 넘겨받았다. Nwrl은 모노레포 도구 Nx를 만드는 회사로 Lerna와 Nx를 둘 다 유지보수 하면서 두 도구를 잘 통합할 수 있게 되었다. Lerna의 코드를 몇 주간 살펴본 뒤에 로드맵을 발표할 것이지만 많은 프로젝트가 아',
    '최근 다양한 프론트엔드 기술이 나오게 되면서 무조건 트렌드를 따르기보다 현재 기술을 왜 사용하고 그와 비교해 다른 기술의 특징과 장단점은 뭘까? 라며 왜? 라는 의문을 해결해보고자 합니다. 들어가기 전에… 저희 Playce Dev 팀에서는 Frontend 기술로 React를 사용해 개발을 진행하고 있습니다. ‘React를 왜 사용하고 있나요?’',
    'MySQL CLI-client 코드는 mysql-src/client 디렉토리에 있는데, MySQL client의 기능 대부분은 mysql-src/client/mysql.cc 파일에 저장되어 있다. MySQL 서버 코드보다는 매우 간단하고 짧은 편이어서, C/C++ 전문가가 아니어도 어렵지 않게 읽고 코드를 고칠 수 있다. MySQL client 코드를 설명',
    'Android Jetpack은 Modern Android Development의 핵심 영역입니다. Jetpack은 100개 이상의 라이브러리, 도구 및 가이드라인 모음으로 개발자 여러분이 권장 사항을 준수하고 상용구 코드를 축소하도록 도우며, 모든 Android 버전 및 기기에서 일관되게 작동하는 코드를 작성하도록 지원하여 앱 고유 기능을 구축하는 데 집중',
    '마이그레이션 전/중/후에 사용자 요청 처리에 아무 오류가 없어야 한다. API 클라이언트는 마이그레이션 후에도 당분간 기존 API를 사용할 수 있어야 각자 편한 시기에 새 API로 변경할 수 있어야 한다. squid 엔티티는 seafood 엔티티로 변경한다. 편의상 기존 오징어 전문 쇼핑몰은 OLD 라고 하고, 해산물 종합 쇼핑몰은 NEW 라고 하면 대략',
    'GitHub Actions에서 잡 요약(Job Summary) 기능이 추가되었다. YAML에 주석도 넣을 수 있지만 GitHub에서는 워크플로우 이름이 보이는데 워크플로우도 복잡해지면 종종 헷갈리기 때문에 워크플로우에 설명을 넣을 수 있으려나 해서 좀 살펴봤다. 물론 내가 생각했던 이런 기능은 아니었고 실행한 워크플로우의 요약을 정리해서 올릴 수 있는 기능',
    'GC는 어떤 기준으로 메모리 영역을 더 이상 쓸모없다고 판단할까요? 또 어떠한 원리로 가비지 컬렉션이 동작할까요? 메모리 구조(v8 엔진) 먼저 v8 엔진의 메모리 구조를 알아봅시다! 프로그램을 실행하면 메모리의 Resident Set이라는 빈 공간이 할당됩니다. Resident Set은 스택 영역과 힙 영역으로 나눌 수 있습니다. 자바스크립트의 경우 싱글',
    '첫 번째는 Batching 작업을 통한 Rendering 퍼포먼스 향상, 두 번째는 새로운 기능인 Transition 을 통해 UI 업데이트에 우선순위를 부여하거나, 느린 네트워크 환경에서의 UX 향상을 살펴볼 수 있을 것 같습니다 해당 포스팅에서 다루는 것 새로운 Root API Automatic Batching Transition',
    'Kafka topic으로 클릭 정보(광고주  ID, CPC)가 들어옵니다. RDB에 광고주 ID로 현재 예산을 조회합니다.  조회한 예산 금액에 CPC만큼 차감해서 다시 RDB에 저장합니다.  Kafka offset을 갱신합니다.  1~4번 과정이 문제없이 정상적으로 처리가 되었다면 offset은 6으로 101 ID를 보유한 광고주의 예산은  57500이',
    'JavaScript은 두 가지 방법으로 객체를 생성할 수 있습니다. 두 가지 방법을 살펴보고 어떤 차이점이 있는지 살펴보겠습니다. 아래 코드는 크롬 브라우저 개발자 모드(F12), 콘솔 탭에서 실행할 수 있습니다. 1.1. 리터럴 객체(Literal Object)Permalink 직관적이고 쉬운 방법으로 객체를 생성합니다. {} 안에 객체가 가진 속성(pr',
    '자바스크립트에서는 엄격 모드가 있다. 코드 파일 상단에 "use strict"를 써 놓으면 자바스크립트를 실행할 때 조금 더 엄격하게 코드를 검사한다. 리액트에도 이와 유사한 목적으로 사용하는 <StrictMode />라는 컴포넌트가 있다. StrictMode는 애플리케이션 내의 잠재적 문제 알아내기 위한 도구입니다. - 리액트 공식문서 &gt; 고급 안',
    '비동기 처리에 Rx를 사용하고 있습니다. 위처럼 데이터를 묶은 이유는, 비동기 처리를 위한 Observable을 최소한으로 만들기 위해서였습니다. 만약에 행마다 Observable이 생긴다면? 사용자가 스크롤을 하면서 만화를 볼 때, 적절한 시점에 이를 노출하고 제거하기 힘들다고 생각했습니다. 더불어, Observable이 많아진다면 성능에도 영향을 미칠',
    '기능 X를 새로 개발하기 위해, 기존의 사용하던 두 라이브러리 A와 B의 시멘틱을 변경해야 하는 상황을 생각해볼까요. 이렇게 원래 작업의 목적과는 좀 다른, 파생된 수정사항들을 한 PR에서 다 다루려다보면 수정사항이 끝없이 커질 수 있습니다. 리뷰어가 코드를 이해하는 데 드는 비용은 수정된 코드 라인수에 비례해서 기하급수적으로 늘어납니다. 프로덕션 코드를',
    'Datahub는 오픈소스 기반으로 매우 빠르게 업데이트되고 있습니다. 해당 배포는 6개월 전에 이루어진 것으로, 현재 Datahub 배포 및 metadata ingestion 과정과는 다소 차이가 있을 수 있습니다. 이 점 양해 부탁드립니다. 2.1. GKE 배포 쏘카 데이터 엔지니어링 그룹의 쿠버네티스 환경은 GCP(Google Cloud Platf',
    'Catalog : Commerce Data와 광고 Data를 어떻게 조립할 지를 결정합니다. Delivery : ETL이 제시해주는 Catalog Set을 통해 광고 송출 List를 생성합니다. ETL : 어떤 광고 소재를 사용할지 데이터를 Picking하고, Scoring과 Ranking을 통해 노출 위치를 결정합니다. 로그 처리 로그 수집은',
    '개발을 진행하다 보면 어느 순간 package.json이 생각지도 못하게 길어진 것을 확인할 수 있습니다. 누군가 꾸준히 package를 관리한다면 좋겠지만 막상 그렇게 하기가 쉽지 않습니다.c 또한 길어진 package.json이 서비스상에서 큰 문제가 있는가라고 물어본다면,번들링 툴들이 tree shaking를 통해 안 쓰는 라이브러리를 제거해주기 때문',
    'Part 1. 화려한 경력의 그가 세탁특공대를 고른 이유 리: 안녕하세요, 간단한 소개 부탁드립니다. 필릭스: 세탁특공대 CTO로 새롭게 합류한 필릭스입니다. 이전에는 아마존코리아에서 국내 IT 대기업 C레벨들을 컨설팅했습니다. OTT 서비스 웨이브의 CTO로 일하기도 했습니다. 리: 연식이 좀 되어 보이는데(…) 개발 경력이 어떻게 되시는지요? 필릭스:',
    '- atom, selector - react 자체 라이브러리recoil 은 기존의 redux, mobx 와 달리 react를 지원하는 전용 상태관리 이기 때문에 react 내부에 대한 접근이 가능하여 React의 동시성 모드, Suspense 등을 손쉽게 지원 가능 하다는 장점이 존재합니다. 또한 러닝커브가 상당히 적고 hook 을 사용하는 방식이 익',
    "도메인에 대해 검색을 해보면, '해결하고자 하는 영역' 정도의 설명이 나온다. 그런데 프로그래밍을 할 때에는 무언가 주체적으로 비즈니스 로직을 수행하는 객체를 도메인이라고 부르기도 한다. 도메인이라는 용어 자체가 굉장히 추상적이고 넓은 범위로 사용되고 있어 레벨1 첫 미션부터 지금까지 굉장히 혼란을 느꼈다. 내가 가진 이 혼란을 정리하고자 관련된 여러 용어",
    "코드 리뷰에 대한 조언 중에서 리뷰어의 입장으로 쓰인 것은 이미 많이 접해보셨을겁니다. 그러나 사실은, 코드 리뷰를 요청하는 사람의 역할도 리뷰어의 역할 만큼이나 중요합니다. 많은 분들이 코드 리뷰 요청에 미숙한 것은 이 '리뷰이' 역할에 대한 가이드가 별로 없는 탓이라고 생각합니다. 이 글이 바로 그 가이드입니다. 이 글을 읽은 후엔, 당신의 코드 리뷰",
    '어느 플랫폼에서나 여러분의 앱을 휴대폰 외에도 TV, 자동차, 태블릿, 시계 등 다양한 기기를 이용하는 전세계 수십억명의 사람들에게 즉각적으로 선보일 수 있는 것은 아닙니다. 올해 Google I/O에서는 Android가 바로 그 플랫폼인 몇 가지 이유와, Modern Android Development 기법을 활용해 생활 속의 다양한 크기의 화면에서 일관',
    '뱅크샐러드 CTO 김문규님을 소개합니다! 지난 10월, 뱅크샐러드는 실리콘밸리의 구글 본사에서 근무하시던 김문규님을 CTO로 모셨습니다! 구글, 아마존 등 미국의 빅테크 기업에서 오랜기간 엔지니어로 근무하신 문규님은, 구글 안드로이드 운영체제(OS)의 테스팅 자동화 인프라·개발 생산성 도구 설계, 오픈소스 자동화 테스팅 솔루션 개발 등을 주도하셨는데요.',
    'grid는 우리가 여러 요소들을 일정한 열과 행으로 배치할 때 사용할 수 있다. 아래 예시는 item을 grid를 사용해 3열로 배치한 모습이다. 만약 2번째 아이템의 높이를 별도로 지정해주면, 첫 번째 행들이 같은 높이로 지정된다. 그런데 아래와 같은 구조에서 하나의 item의 높이가 높으면 row 영역은 어떻게 될까? 일반적',
    '갈수록 개인이나 기업 경영인은 정보시스템 기술의 발전을 따라 잡기가 점점 어려워지게 되며, 특정 몇 명의 전문가에게 의존하는 경우가 많을 것이다. 따라서 기업 내부에서는 이를 전담하는 고도의 훈련된 조직을 갖추어야 하고, 이를 운영하는 데 소요되는 비용도 점차 증가하게 된다. 또한 수많은 정보기기 즉, 컴퓨터, 네트워크 장비, 소프트웨어, 응용프로그램',
    '텍스트로부터 키워드를 추출하는 방법은 다양합니다. 저희는 키워드 활용 목적과 보유 데이터를 고려하여 1) 후보 키워드 인식 2) 직무 키워드 선택 단계를 통해 직무 키워드를 추출하였습니다. 이렇게 추출된 키워드는 유사 인재 추천, 채용 공고와 인재의 적합도 평가 등 다양하게 활용될 수 있습니다. 인재가 보유한 직무 능력을 풍부하게 파악하기 위해, 이번 연구',
    'Google Play는 사용자가 기기를 최대한 활용해 고품질 앱과 게임을 쉽게 탐색하고 이용할 수 있도록 주요 변경사항을 도입하고자 합니다. Google Play 변경 사항Play 스토어에는 순위 및 홍보 가능성 변경 사항, 저품질 앱 알림, 기기별 평점 및 리뷰로 이뤄진 다음의 세 가지 업데이트가 적용됩니다.순위 및 홍보 가능성 변경최근 Google Pl',
    '쿠버네티스는 아래의 구글 트랜드 그래프에서 보시다시피 2014년 중순 구글에서 공개된 이후 지속적으로 증가하였으며 현재에 이르러 사실상 클라우드 업계 표준으로 자리매김하였고 Google Cloud Platform(이하 GCP), Amazon Web Services(이하 AWS), Microsoft Azure(이하 Azure), NAVER Cloud, Kak',
    '데이터베이스와 같은 공유 자원을 사용하는 테스트는 실행 순서에 따라 성공, 실패 여부가 결정되는 비결정적인(non-deterministic) 테스트가 될 수 있다. 이런 비결정적 테스트는 실패하면 버그가 원인인지, 비결정적 동작이 원인인지 알기 힘들다. 따라서 테스트는 실행 순서에 상관 없이 독립적으로, 결정적(deterministic)으로 실행되어야한다.',
    '공격 사이트 간 스크립팅은 웹 애플리케이션에서 많이 나타나는 취약점의 하나로 웹사이트 관리자가 아닌 이가 웹 페이지에 악성 스크립트를 삽입할 수 있는 취약점이다. 주로 여러 사용자가 보게 되는 전자 게시판에 악성 스크립트가 담긴 글을 올리는 형태로 이루어진다. 이 취약점은 웹 애플리케이션이 사용자로부터 입력 받은 값을 제대로 검사하지 않고 사용할 경우 나타',
    '논의 대상인 코드는 public 함수 하나(main)만 존재하기 때문에 파일명을 main.kt로 만들었다. 소스 파일은 전부 PascalCase를 쓰는게 좋다는 의견이셨다. 이에 대한 이유는 Kotlin Convention 에서 UpperCamelCase (PascalCase) 을 추천하기 때문이였다. 안드로이드 코틀린 공식 가이드에서도 소스 파일에 대',
    '당신에게 느린 React 어플리케이션이 하나 있다고 가정해보겠습니다. 왜 느릴까요? 그리고 어떻게 고칠 수 있을까요? React 문서에는 몇 가지 팁을 제공합니다. 이 글에서는 Pixie의 UI에서 직면한 몇 가지 일반적인 성능 문제와 과도한 리렌더링을 어떻게 디버깅했는지를 담았습니다. 어떻게 이 문제를 해결했는지, 그리고 이런 문제가 발생하지 않도록 어떻',
    '요 몇 년 사이 뜨거운 감자로 떠오른 사이드 프로젝트! 하루의 대부분을 보내는 직장 생활도 중요하지만, 본업 밖에서 ‘일하는 재미’를 새롭게 찾아나서려는 분들이 늘고 있어요.  힘들게 일하고 나면 쉬기도 바쁠 텐데, 왜 그렇게 많은 사람들이 소중한 시간을 쪼개 사이드 프로젝트에 몰두하는 걸까요? 이번 인프메이션 #48에서는 사이드 프로젝트에 대해 다룹니다.',
    'Graphite는 시계열 데이터를 저장하고 핸들링하는데 특화된 Python베이스의 모니터링 툴입니다. 크게 3가지 컴포넌트로 볼 수 있습니다. Carbon : 시계열 데이터를 수신하는 백엔드 데몬 (다른 collector에서 수집한 메트릭을 수신) Whisper : Carbon에서 넘겨받은 데이터를 저장하는 데이터베이스 (RRD와 비슷) Graph',
    'RFC 9116 A File Format to Aid in Security Vulnerability Disclosure : 취약점을 발견했을 때 보고 할 수 있는 공식 경로를 명시할 수 있는 security.txt가 RFC 9116으로 등록되었다. /.well-known/security.txt에 위치하게 되고 보고용 이메일과 PGP 키 등을 명시할 수 있다',
    '개발자의 권한을 편하게 부여하기 위해 GitOps를 도입한 경험을 공유합니다. 특히, 여러 개의 AWS account와 VPC를 사용하는 조직에서 발생하는 권한 관리 문제와, 이를 AWS SSO[1] 및 AWS Client VPN[2]을 활용해 해결한 방법에 대해서 자세히 소개해보려고 합니다. 기술 소개에 앞서 Hyperconnect에서 현재 사용 중인',
    'Intersection Observer API는 기본적으로 브라우저 뷰포트와 타겟 엘리먼트의 교차점을 관찰하여 해당 요소가 뷰포트에 포함되는지 판별하는 역할을 합니다. 쉽게 말해, 현재 사용자에게 보이는 화면에 요소가 나타나는지 구별하는 기능을 제공한다고 할 수 있습니다.출처: https://heropy.blog/2019/10/27/intersection-',
    '여러 웹사이트에서는 scroll과 관계없이 상단에 붙어있는 sticky header를 자주 사용하고 있는데요, 아래 예시와 같이 특정 영역에서 css가 바뀔 수 있는 header를 만들어 보겠습니다.    ⚙️ 사용 스택 : React, emotion/css           📌 기본 구조 생성하기 헤더는 공통적으로 사용할 가능성이 높기 때문에 Header',
    'KSP란 뭘까? Kotlin Symbol Processing의 약자로 경량 컴파일러 플러그인을 개발할때 사용하는 API라고 한다. 직접 만들지는 않았지만 그간 kapt를 활용하였고, 여전히 활용 중이다. apply plugin: \'kotlin-kapt\' // 또는 kotlin("kapt") 이와 같은 코드가 존재한다면 kapt를 활용하고 있다는 것이',
    'Python Type Hints - How to Split Types by Python Version Python 버전에 따른 Hints를 사용하고 싶으시다면 이 기사를 참고하세요. Use Python to Send Notifications to Your Phone During Model Training 학습 모델의 진행상황을 모니터링 하고 싶으시',
    '웹사이트에 기본적으로 들어가는 슬라이더. 흔하게 쓰이는 기능인만큼 슬라이더 플러그인도 엄청나게 많다. 오늘은 그 중에서 swiperjs를 소개 하려 한다. 실제로 사용하면서 초보 시절에 헷갈렸던 부분이나 최근 새로 알게 된 팁들까지 최대한 자세하게 작성했다. swiperjs 장점 많고 많은 슬라이더 중에서 swiper를 사용하게 된 이유는 아래와 같다.',
    'Retrofit의 사전적 의미는 기계에 새로운 부품들을 추가하는 유지보수를 뜻한다. MSA(MicroService Architecture) 전환 프로젝트가 활발히 진행 중입니다.MSA로 전환을 진행하면 인접한 도메인끼리 긴밀하게 통신해야 하는 경우가 많이 생깁니다. 또는 시스템의 경계에 있는 도메인은 외부 서비스를 호출해야 하는 경우도 있을 것입니다.필자의',
    'OOP는 1990년대 초반부터 2019년인 현재까지도 모던 프로그래밍 설계에 중요한 역할을 하고 있는 개념이다. 아무리 함수형 프로그래밍과 같은 새로운 패러다임이 주목받기는 했지만 아직까지는 OOP가 대부분의 프로그램 설계에 사용되고 있다는 사실은 부정할 수 없는 현실이며, 이게 바로 우리가 OOP를 좋은 싫든 알고 있어야 하는 현실적인 이유 중의 하나이다',
    '응답성(페이지가 사용자의 입력에 얼마나 빨리 응답하는지)은 사용자 경험에 매우 중요하다. Chrome 사용 데이터에 따르면 사용자 시간의 대략 90%가 페이지가 로드된 후에 사용되므로 응답성을 신중하게 측정하는 것이 중요하다. 특히 웹 사이트가 상호작용을 제공하기 위해 자바스크립트에 의존하는 경우가 많아짐에 따라 더 중요해졌다. 이것이 INP가 측정하는 것',
    '프로그래밍은 제대로 동작하는 소프트웨어를 효율적으로 만들어내는 일이고, 그걸 잘하려면 유지 보수가 쉬운 코드를 만들어야 한다. 그리고 유지 보수하기 좋은 코드를 만드는 매우 효과적인 방법은 객체를 느슨하게 결합(loose coupling)하는 것이다. Gang of Four는 디자인 패턴에서 다음과 같이 말했다. Program to an interface,',
    'Cloud의 Tomcat에 설정되어 있던 MySQL DB Connection Pool을 사용하려던 프로그램에서 “Communication Link Failue”에러가 발생하면서 약 930초 대기 현상이 발생한다.이러한 현상이 모든 POD의 Tomcat에서 모두 돌아가면서 발생한다.모든 DB Pool이 에러가 발생하는 것은 아니며 일부 DB Connectio',
    '당시에는 QA 업무가 플랫폼별로 분리돼 있었고, 테스트 조직 역시 플랫폼별로 분리돼 있었기 때문에 본인이 담당한 플랫폼의 QA 일정이나 안건에 좀 더 집중할 수 있는 환경이었습니다. 각 플랫폼별로 개성 있는 프로세스나 다양한 테스트 방법론을 시도할 수 있었고 같은 서비스를 담당하는 QA 간에 서로 스타일이 달라도 진행하는 데 크게 무리가 없었습니다. 다만,',
    'HTTP 413 상태 코드(Payload Too Large)는 요청 엔티티가 서버에 의해 정의된 제한보다 크다는 것을 나타낸다. CORS 에러가 뜨는 것은 응답 헤더에 Access-Control-Allow-Origin 부분이 없기 때문에 요청을 보내는 클라이언트에게 이를 볼 수 있는 권한이 없다는 것이다. ??? 난 분명 스프링 시큐리티에서 CORS 설정을',
    'ELK는 3가지의 오픈 소스 프로젝트들의 첫 글자를 따온 것으로 그 각각은 Elasticsearch, Logstash, Kibana 를 말합니다. 여기서 Elasticsearch는 검색과 분석을 위해서 사용되는 엔진이며, Logstash는 다양한 소스로부터 데이터를 받아서 처리할 수 있는 데이터 처리 파이프라인으로 Elasticsearch에 데이터를 공급하',
    'WebSocket vs socket.io 사실 애초에 둘은 다른 개념입니다. 웹소켓은 양방향 소통을 위한 프로토콜입니다. 프로토콜은 쉽게 말하자면 서로 다른 컴퓨터끼리 소통하기 위한 약속 정도로 이해하면 됩니다. 반면에, socket.io는 양방햔 통신을 하기위해 웹소켓 기술을 활용하는 라이브러리입니다. 어찌보면 자바스크립트와 jQuery의 관계와 비슷하다',
    'Alfred알프레드(Alfred)라는 앱이고, Mac에서 제공하는 SpotLight보다 다양하고 복잡한 워크플로우를 제공하는 특징이 있습니다. 사실 워낙 유명한 앱 이라서, 많은 분들이 이미 사용하고 계실것 같은데 ‘저렇게도 사용이 가능하구나’ 정도로만 봐주시면 될것 같습니다.다운로드: https://www.alfredapp.com/Single Licens',
    '반윤성 2022.01.12. Update_by_query 진행 과정 소개 : Update_By_Query ? Elasticsearch(이하 es)에서 기존에 색인된 내용을 변경하고자 할 때, Update_By_Query 기능을 사용할 수 있습니다. 이 기능은 단순히 업데이트를 수행하는것 뿐만',
    '기본기 Spring -> Hibernate -> TDD -> REST -> Docker -> Kubernetes 유지 보수하기 좋은 코드 Clean Code -> SOLID 유연한 설계 DDD -> MSA -> EDA 넥스트 레벨 RDBMS -> NoSQL -> Kotlin 1. 공식 문서위 로드맵에 표시된 대부분의 기술은 공식 사이트',
    '웹뷰로 단순히 화면을 보여주면 문제가 없겠지만, 네이티브의 중요 모듈을 리액트 서비스에서 호출할 가능성이 컸습니다. 네이티브 어플리케이션 코드는 저희 팀의 스코프가 아니었지만, 리액트 서비스가 어떻게 네이티브 앱과 통신하는지 간단한 예시 코드를 통해 확인해보았습니다. 저는 안드로이드 쪽을 확인하기로 하였습니다. 이번 포스트에선 리액트 서비스와 통신할 간단한',
    'Cowsay는 terminal에서 ASCII아트 메시지와 함께 소를 그린 그림을 출력하게 해주는 프로그램입니다. cowsay 설치하기 brew install cowsay 우선 brew를 이용하여 cowsay를 설치합니다. cowsay 출력하기 cowsay hello world! 다음과 같이 cowsay가 출력되는 모습을 볼 수 있습니다',
    '기술 부채란 뭘까? 일명 스파게티 코드라고 부르는 구조화되어 있지 않은 코드 형태, 기능 수정이나 추가가 힘든 코드, 영향 범위를 파악하기 힘든 사이드 이펙트를 내재하고 있는 부분 등을 보면 개발자는 기술 부채가 있다고 느낀다. 이럴 때 보통 “기술 부채를 갚아야 한다”, “기술 부채가 너무 쌓였다”, “올해는 기술 부채를 좀 청산하자” 등의 표현을 사용한',
    '함수형 프로그래밍에서 코드를 작성한다는 것은 프로그램에서 수행해야하는 여러가지 행위들을 함수로 표현하고, 또 그 함수들을 요리조리 잘 합성해가며 거대한 프로그램을 만들어나가는 패러다임이다. 결국 함수형 프로그래밍에서 함수를 합성하는 행위라는 것은 이 패러다임의 근간이 되는 개념이기 때문에 굉장히 큰 의미를 가질 수 밖에 없는데, 문제는 이렇게 함수를 합성하',
    '링크를 누르면 원하는 사람을 선택하여 정해둔 메시지를 보낼 수 있게 하는 기능이다. 결론부터 말하자면 a 태그에 href 속성에 일반적인 링크 주소인 http://가 아니라 문자 메시지를 의미하는 sms:를 이용하여 간단하게 구현할 수 있다. &lt;a href="sms:?body=보내고 싶은 메시지"&gt;안드로이드 문자보내기&lt;/a&gt; &lt;',
    "'·' 기호 단위로 내용들이 나누어서 작성되어 있고다음줄로 보여질때는 '·' 기호만큼 옆으로 들여쓰기가 되어야 한다.(헤이딜러 지원가즈아!)위와 같은 텍스트 문단 형태처럼 만들어야 한다면,여러분들은 어떻게 만드실건가요?가장 원시적이고 확실한 방법은LinearLayout을 만들고‘·’ 을 가지고 있는 TextView 와텍스트 내용을 가지고 있는 TextVie",
    'Roman Pronskiy가 쓰고 JetBrains에서 제공하는 PHP Annotated 2022년 봄 버전의 번역/해석본입니다. 이 중에서 몇 가지 제 취향껏 골라 그 안의 내용도 좀 뒤져보고 개발새발 번역해서 소개합니다. PHP 7.4.29, PHP 8.1.5, and PHP 8.0.18https://www.php.net/ChangeLog-7.php#',
    'Web Audi API는 음원의 타입(파일, 버퍼, 스트림 등)에 따라 소스Node와 작업 방식이 조금씩 다르다. 45초 이상의 긴 음원 파일(mp3, wav)을 다루기 위해서는 MediaElementAudioSourceNode를 소스Node로 이용해야 한다. 이 글에서는 MediaElementAudioSourceNode를 통해 mp3 등의 음원파일을',
    'Threading in Python: The Complete Guide\\ Python에서 Thread를 관리하고 활용하는 방법을 잘 모아둔 기사입니다. Building a Panel Dashboard with Snowpark for Python Snowpark로 Dashboard를 구성하는 간단한 방법을 소개하는 튜토리얼 형식의 기사입니다. 간단하',
    '안녕하세요, 화해 데브옵스팀 장영석입니다. EventBridge를 활용한 자동화   AWS가 제공하는 서비스들은 대부분 모니터링 및 로깅을 제공합니다. 하지만 AWS 리소스에서 CloudWatch로 로그를 수집할 경우, 보관 주기를 CloudWatch의 AWS 콘솔이나 CLI를 사용하여 별도로 설정해줘야 하는 번거로움이 있습니다. 예를 들어 API Gate',
    '‘빌드 타임’에 환경 변수를 만들어서 주입하기 때문에, 환경이 여러 개면 각 환경별로 빌드를 해야 하고 각각의 빌드 결과물은 해당 환경에만 종속되는 문제가 있습니다.(좋은 방법은 아니죠! 여기에 더 자세한 내용이 있습니다.) 이러한 문제를 개선하기 위해서 저희 팀에서는 환경 변수 URL 방식을 사용했는데요, 오늘은 이 방법에 대해서 한번 이야기해 보도록 하',
    'Android OS 업데이트를 통해 개인정보 보호, 보안, 그리고 이용자 경험을 개선하고 있습니다. 이에 더하여, 이용자들이 개선 사항의 혜택을 모두 누리고 Google Play에 기대하는 믿을 수 있는 경험이 보장되도록, 개발자 여러분들과의 협업을 통해 최신 Android 버전에서도 앱이 원활히 작동하는지 확인하고 있습니다. 저희는 현재 새로운 앱과 앱',
    "버전 18에서 가장 강조된 부분은 '동시성'이라고 볼 수 있다. 리액트는 인터럽트 가능한 렌더링 매커니즘을 구현하기 위해 내부를 재설계했으며, 크게 Suspense, Transitions, 스트리밍 서버 렌더링이리는 세 가지의 기능을 새로 출시했다. 이미 Suspense와 lazy에 대해서는 예전부터 소개되어 왔으므로 여기서는 생략하겠다. 스트리밍 서버 렌",
    'Git을 사용하다 보면 지금 작업을 하던 코드를 멈추고 다른 작업을 해야 하는 경우가 있다. 한창 코드를 작성하던 중에 버그나 장애가 발생해서 핫픽스를 해야 하는 상황도 있고 갑자기 다른 작업을 해야 할 수도 있고 지금 하던 접근방식과 다른 접근 방식을 테스트해보고 싶은 경우도 있다. 이런 경우 현재 작업 중인 워킹 디렉터리(혹은 워킹 트리, 아래에서는',
    '많은 CI/CD Tool 중에 왜 Teamcity를 선택했는지 그리고 어떻게 Build Process를 구성했는지에 대해 설명해 드리고자 합니다. 그런데 왜 Build Process 롤 새로 구성하나요? 현재 올디브에서는 Back-end/Front-end 분리 작업을 진행하고 있습니다. (스포아닌 스포이지만 Bakc-end는 Spring Boot + Kot',
    'Ansible은 여러 개의 서버를 효율적으로 관리하기 위해 고안된 환경 구성 자동화 오픈소스 도구입니다. 여러 서버를 구성할 때 사용하는 가장 기본적인 방식은 shell script를 만들어서 돌리는 방식입니다. 하지만 서버의 대수가 많아지고 동시에 환경을 구성해야하는 일이 발생한다면 기존의 shell script로는 한계가 있을겁니다. 이를 위해 고안',
    'MySQL에는 우리가 흔히 알고 있는 숫자형이나 문자형 타입 말고도 공간 정보를 저장할 수 있는 데이터 타입이 존재합니다.이 글에서는 MySQL에서 공간 정보를 저장하는 Spatial Column과 Spatial Index에 대해 정리해보도록 하겠습니다.MySQL에서 제공하는 공간 데이터 타입은 아래와 같습니다.GEOMETRY : 아래의 아무 타입의 공간',
    "구성되는 계층의 숫자에 따라 N 계층 아키텍처 (N-tier Architecture) 라고도 한다. 각 계층은 어플리케이션 내에서의 특정 역할과 관심사(화면 표시, 비즈니스 로직 수행, DB 작업 등)별로 구분된다. 이는 Layered Architecture 의 강력한 기능인 '관심사의 분리 (Separation of Concern)' 를 의미한다. 특정",
    '텍스트로 이뤄졌던 웹이라는 공간이 이미지, 스타일을 넘어 동적이고 유저와 티키타카하는 공간이 되어가고 있습니다. 이런 공간을 만들어야 하는 프론트엔드 개발자로서 항상 css는 두려움과 귀찮음의 공간이기 마련입니다. 하지만 디자이너님이 뽑아준 대로 이쪽으로 나왔다 저쪽으로 들어가는 화려한 애니메이션과 이미지를 멋지게 랜더링 하고 조작할 수 있게 도와주는 좋은',
    '레거시 시스템을 살펴보면 필터에서 요청 파라미터나 메세지에 담긴 <, > 등의 특수 문자를 다른 문자열로 치환하는 코드를 종종 보곤 합니다. 이런 시큐어 코딩(secure coding)의 필요성을 잘 몰랐을 땐 요청 파라미터나 메세지가 변환되는 것에 대해 불편함을 토로하곤 했습니다. 이 포스트에선 XSS 공격에 대한 전반적인 개념과 대표적인 공격 유형 중',
    'Big O 표기법과 시간복잡도 알고리즘들의 성능을 판단하는 지표로는 시간 복잡도(Time Complexity)와 공간 복잡도(Time Complexity)가 있다. 시간 복잡도는 알고리즘의 수행시간을 의미하는 지표이며, 공간 복잡도는 알고리즘의 메모리 사용량을 의미한다. 보통 알고리즘에 대해서 공부하다보면 이 알고리즘의 시간복잡도는 O n입니다 혹은 O의',
    '디자인시스템 내에서 관리되지 않은 버튼이 있다고 하면 폰트 크기, 배경색, 테두리 둥글기 등이 페이지마다 제각각일 수 있습니다. 디자이너 혹은 유관부서와 특정 페이지의 버튼에 관해 얘기할 때 “프로필 설정 페이지의 최하단 저장 버튼”과 페이지 명과 위치를 같이 얘기해야 합니다. 이와 같은 대화는 불필요하게 대화 시간을 길어지게 하고, 디자인과 개발 부서에서',
    'location 객체의 pathname에 요청한 주소가 있으니깐 이걸 비교했다. 요청 경로에 해당하는 컴포넌트를 렌더링 하는 App 컴포넌트다. 브라우져에서 /user 로 요청하면 UserPage가 그렇지 않으면 HomePage가 보일 것이다. 네비게이션을 살짝 넣어보자. const HomePage = () =&gt; ( &lt;&gt; &lt;',
    '부제: Data in action: A model of a Dinner Party (1)제가 이전에 작성했던 글을 참조해도 좋습니다. 개요친애하는 Bonnie BK님의 추천 덕분에. 최근에 아래 책을 구매했습니다. 해외도서다보니 오는데 2주가 걸렸고, 퇴근 후 조금씩 조금씩 읽었는데 원서라 그런가 1단원을 읽는데 일주일이 걸렸습니다. (총 18단원)어쩌면',
    'must-know patterns for writing clean code with Python Python을 사용해서 좋은 코드를 작성하기 위한 10가지 방법을 짧게 소개하는 기사입니다. 이런 기사를 많이 보셨겠지만 이런 주제는 언제나 리마인드 한다는 마음으로 계속해서 읽어보시면 좋습니다. 이렇게 많이 발행된다는 점은 이것이 중요하다는 뜻이기 때문이죠',
    'Cypress를 통한 E2E 테스트는 현업에서 오래 작성해봤고 전반적으로 만족스러운 경험이였지만 뭔지 모를 답답함이 분명 존재했었다. 그러던 와중에 playwright test가 2021년 6월 처음으로 1.x 버전이 등장했고 ‘비교해 봐야지’라는 생각이 들어 코드를 작성해봤다.⚠️ 읽기 전에..이 글은 둘 중 어떤 것이 우위에 있는지를 말하는 글이 아니다',
    '안녕하세요. 저는 LINE+ UIT 조직에서 프런트엔드 개발을 하고 있는 이상철입니다. 저는 UVP(Universal Video Player)라는 사내 동영상 컴포넌트 라이브러리를 모노레포 환경에서 개발하고 있는데요. 어떻게 하면 모노레포를 조금 더 잘 활용할 수 있을까 고민하던 중에 Turborepo를 만나게 되었습니다. 이번 글에서는 Turborepo가',
    '백엔드 서비스에서 여러 AWS S3 객체를 하나의 ZIP 객체로 만드는 데 사용했던 방법에 관해서 설명해보고자 합니다.모두싸인 서비스에서는 여러 종류의 파일을 다룰 수 있습니다. 계약 문서, 감사 추적 인증서, 첨부 파일 등의 파일을 다루게 되는데 이러한 파일들은 작성이 완료된 계약 문서를 기준으로 내려받을 수 있습니다. 그러나 이전에 모두싸인에서는 문서',
    "주요 구독 상품과 추가 구독 상품으로 구매 상품의 위계가 나뉜다. 명시적으로 유저가 구독을 취소하지 않는 이상 구독은 영원히 계속된다. 이 두 가지 제약 사항은 유저의 변화하는 요구에 대응하지 못하게 하는 주요 원인이 되고 있었다. 유형의 상품을 구독하는 서비스의 경우 이제 대부분의 유저들이 '영원한 구독'이라는 규칙 자체를 부담스러워하는 경우가 많아졌다",
    'React의 커스텀 훅 함수를 테스트하다가 아래와 같은 상황을 만나게 되었다. 커스텀 훅 C는 Recoil 상태를 업데이트하는 로직을 가지고 있다. Recoil 상태 A는 커스텀 훅 함수 안에서 업데이트되고, 리턴된다. Recoil 상태 B는 커스텀 훅 함수 안에서 업데이트되지만, 리턴은 되지 않는다. 즉 커스텀 훅 C를 통해서는 상태 B에 접근할 수 없',
    'GitOps는 DevOps의 실천 방법 중 하나로 애플리케이션의 배포와 운영에 관련된 모든 요소들을 Git에서 관리(Operation) 한다는 뜻입니다. 아주 간단하게 말해서 GitOps는 Kubernetes Manifest파일을 Git에서 관리하고, 배포할때에도 Git에 저장된 Manifest로 클러스터에 배포하는 일련의 과정들을 의미합니다. Gi',
    '컴퓨터와 회화(painting)를 전공했고 꽤 성공한 누군가가 프로그래머는 과학자보다 화가와 공통점이 더 많다고 했다. 정말로, 프로그래밍을 잘하려는 노력을 하다보면 과학보다는 경험적으로 실력을 쌓아야하는 운동이나 미술과 비슷하다고 느껴진다. 좋은 그림을 알아보는 능력과 그림을 잘 그리는 것이 별개이듯 코드를 보고 좋다 나쁘다를 판단할 줄 아는 것과 좋은',
    'React 에서의 keykey는 React가 어떤 항목을 변경, 추가 또는 삭제할지 식별하는 것을 도와줍니다. key는 엘리먼트 or 컴포넌트에 안정적인 고유성을 부여하기 위해 배열 내부의 엘리먼트에 지정해야 합니다. 이때 key 속성에는 해당 배열 내부에 각기 고유(uniquq) 값을 넣어 주어야 합니다.list key 렌더링 예시const numbers',
    'API는 Application Programming Interface의 약자로, 소프트웨어간의 응답과 요청을 통한 데이터 통신을 위한 방법과 규칙을 의미한다. API는 OS에서도 제공 (e.g. Windows API) 할 수 있고, 프로그래밍 언어 (e.g. Java API) 에서도 제공할 수 있고, 웹 애플리케이션 (e.g. Facebook API) 에서',
    '나는 데이터 분석가이다.하지만 데이터 분석을 싫어한다.왜냐하면 데이터 분석가는 분석을 하면 안 되기 때문이다데이터 분석가로서 일을 하다 보면 수시로 아래와 같은 질문이 떠오른다"서비스를 성공시키기 위해 데이터 분석가는 무엇을 해야 하는?"경력 초기에는 내가 무엇에 흥미 있는지에 초점을 두었다. 그렇기에 머신러닝도 업무에 써먹어 보고, 통계도 깊이 파고 들어',
    '타입스크립트 4.1부터 Template Literal Types라는 기능이 생겼습니다. 쉽게 말하면, 자바스크립트의 Template Literal 문법과 타입스크립트의 String Literal Type이 합쳐진 기능입니다. const name = "장호승"; const str = `안녕하세요 제 이름은 ${name}입니다.`; type Fruit =',
    '새로운 프로젝트의 구조를 보다 명확하게 설계하고 요구사항의 변화에 더욱 기민한 코드로 리팩터링 하기 위해 고민했던 팀의 개발 전략과, 그 접근 방식으로 개발을 어떻게 진행할 것인지 공유하고자 한다. 초기 상태 팀에서 인수받은 프로젝트는 프런트엔드 개발 주체가 몇 차례 바뀌었고, 많지 않은 인력으로 유지 보수와 신규 기능 개발을 동시에 진행하고있는 SPA 프',
    'strace는 리눅스에서 서버 병목을 확인할 수 있도록, 시스템 콜(시스템 호출, System call)을 측정하는 툴입니다. strace를 활용하면, 리눅스 커널과 프로세스 사이에서 발생하는 시스템 콜, 시그널 전달(Signal deliveries), 프로세스 상태 변화(Process state) 등을 모니터링할 수 있습니다. strace에서 쓸 수',
    '여러개의 앱과 서브모듈로 라이브러리를 관리하고 계신가요?그렇다면 Gradle Catalog로 새로운 의존성 관리를 시작해 보세요.안녕하세요.헤이딜러 안드로이드팀의 윤영직입니다.최근, 한 개 이상의 앱을 개발하고 유지보수 하는 팀이 늘어나고 있습니다.그리고 개발자들은 항상 같은 고민을 합니다.“코드를 여러 앱에서 재사용 할 수 없을까?”헤이딜러에서도 마찬가지',
    'OscillatorNode 란? Oscillator의 사전적 의미는 "전기적으로 진동을 만들어내 음을 출력하는 장치"이다 Web Audio API 에서의 OscillatorNode는 "컴퓨터를 이용해 특정 주파수, 파형의 음원을 만들어내는 소스 Node"이다. 즉, 별도의 음원을 입력받지 않고 스스로 음원을 만들어내는 "소스Node" 객체다. 이에 반해,',
    '애드테크는 AD(Advertising, 광고)와 Tech(Technology, 기술)이란 단어가 합쳐진 형태로, IT 기술이 적용된 광고기술을 의미합니다.0.1 광고 도메인에서 사용되는 주요 단어인벤토리, 광고 지면, 광고 스페이스: 인벤토리는 퍼블리셔가 판매할 수 있는 광고 지면을 뜻함. 이때 노출(CPM), 클릭(CPC), 전환(CPA) 등 여러 방식으',
    '이번 글은 LTV 지표에 대한 내용입니다. 이 포스트 [link]를 주로 참조하였습니다.원 글은 이 곳에서 확인하실 수 있습니다.LTV (LifeTime Value)란?LTV는 Lifetime Value, “고객의 생애 가치”라고 불리는 지표로, 고객이 평생동안 기업에게 어느 정도의 가치를 가져다 주는지를 정량화한 지표입니다. 이 LTV는 확률 기반 모형으',
    '영구 캐싱을 통한 빌드 성능 개선향상된 알고리즘과 기본값을 통해 장기 캐싱 개선트리 쉐이킹의 개선 및 코드 생성으로 번들 크기 개선웹 플랫폼과의 호환성 향상 v4에서 기능을 구현하면서 이상한 상태로 남겨진 내부 구조 정리 (v4에 대한 리팩토링?..)v5에 주요 변경점을 도입하여 추후 기능 업데이트에 대비해 가능한 v5 버전을 오래 유지하도록 목표Nod',
    'DBMS 서버에서 메모리 관리는 매우 중요한 부분중 하나에요. DBMS 서버의 메모리 관리는 서버의 안정적인 운영뿐만 아니라 성능과도 직결되는 부분이 기 때문이죠.이번 이야기에서는 MongoDB의 아래 2가지 궁금증을 풀어 보려고 해요.mongos의 과다한 메모리 사용량의 원인TCMalloc보다는 JEMalloc이 나은 선택인 경우여기에서 부터는 문장의 간',
    '페이지가 처음 로드되기 시작한 시점을 기준으로 하여 뷰포트 내에서 볼 수 있는 가장 큰 이미지 또는 텍스트 블록의 렌더링 시간 여기서 주목해야 할 중요한 점은, Google은 LCP에 빨리 도착하는 한 사용자가 LCP에 어떻게 도달하는지는 신경 쓰지 않는다는 것이다. 페이지 로드 수명주기의 시작과 LCP 사이에서 발생할 수 있는 다른 일이 많이 있다. 다',
    '​요즘 사용자들은 불안하다. 개인정보가 새어나갈까 불안하다. 정보가 유출되더라도 잘 모르는 경우가 많고 혹여 뒤늦게 알게 됐더라도 이미 퍼질 대로 퍼진 다음이라 망연자실할 뿐이다. 마냥 당연한 일로 여길 수도 없는 노릇이다. 많은 이용자를 보유한 서비스라면 기업에서도 한 번쯤은 이러한 고민을 해볼 법하다.​글로벌 서비스를 운영하는 구글에서도 마땅',
    '구글은 현재 차기 모바일 운영체제(OS) 안드로이드13을 테스트하고 있다. 프리뷰, 베타를 거쳐 안정화 작업이 끝나면 올해 하반기 모습을 드러낼 전망이다. 그 전에 열리는 구글 2022 I/O, 이른바 개발자 컨퍼런스로 불리는 행사에서 향후 개발·배포 일정에 대한 자세한 설명이 있을 것이라는 전망이 뒤따른다.​아직 안드로이드13이 개발 중인 가운데',
    'Composite 액션을 통해서도 여러 액션을 하나의 액션으로 만든 뒤에 워크플로우에서 사용할 수 있으므로 각 프로젝트에서 같은 작업을 반복하지 않고 액션을 재사용할 수 있다. 액션으로 할 수 있는 부분과 안되는 부분을 파악 중이라서 그전에는 사용해 보지 않았기에 Composite 액션을 테스트했다. 가이드 문서가 잘 되어 있어서 가이드 문서를 따라',
    '마이크로인터랙션이 워낙 보편화되고 심화되어서 경험 디자인 설계가 당연한 것으로 여겨지긴 하지만, 사실 여기에는 과학적인 설계 원칙이 있다는 사실을 이 책은 알려주고 있다. 마이크로인터랙션의 역사를 간략히 살펴본 뒤, 마이크로인터랙션을 설계할 때 알아야 할 핵심 원칙을 익혀보도록 하자. 역사상 최고의 마이크로인터랙션 - 마우스를 이용한 복사 / 붙여넣기 19',
    '항상 투박한 느낌이 드는 클래스 컴포넌트가 대다수인 코드 베이스에서 작업하고 있었습니다. 자, 먼저 매초 증가하는 카운터 예시를 살펴보겠습니다.자동으로 증가하는 카운터를 위해 많은 코드를 작성해야 합니다. 보일러 플레이트나 부가적인 코드가 많아질수록 오류 가능성은 높아지고 개발자의 경험은 악화될 것입니다.훅이 등장했을 때, 저는 큰 기대에 차 있었습니다.',
    '개인정보 보호와 보안, 개발자 생산성에 더해 태블릿 및 대화면 지원을 핵심 테마로 Android 13의 첫 번째 개발자 프리뷰를 출시했습니다. 오늘은 앱에서 시도해 볼 수 있는 새로운 기능과 변경 사항이 반영된 Android 13 Developer Preview 2를 소개해 드리고자 합니다. Android가 개발자와 사용자를 위한 더 나은 플랫폼이 되도록',
    '컴포넌트 계층 구조에서 부모-자식 간에는 프롭스(props)를 전달하면서 협력한다. 컴포넌트끼리 접촉해 있어야만 이 메세지를 전달할 수 있는 구조이다. 그렇지 않고 떨어져 있으면 메세지를 전달할 수 없는 것이 리액트 트리의 한계이다. 컴포넌트 A와 B는 접해 있어서 프롭스를 직접 전달할 수 있다. B, C도 마찬가지다. 반면 A와 C는 떨어져 있기 때문에',
    'Open API 는 단어 그대로 “개방된 API”입니다. 즉, 누구나 사용될 수 있도록 API의 endpoint가 개방되어있다면 Open API인것이죠. 예를 들어, 기상청의 단기예보 조회API, 우체국의 우편번호 API 등이 있습니다. Public API라고도 부릅니다. OpenAPI 는 의미가 완전 다릅니다. OpenAPI또는 OpenAPI Speci',
    '불변 객체 불변 객체가 뭘까? 간단히 말해서 생성 후에 상태를 바꿀 수 없는 객체를 말한다.그럼 상태도 바꿀 수 없는 객체를 왜 사용할까? 여러 장점이 있지만 그중 몇 개만 적어보면 상태를 바꿀 수 없기 때문에 동시에 여러 곳에서 사용하더라도 해당 객체를 사용하는 쪽에서는 안전하게 사용할 수 있다. 또 불변 객체에 대해 작업하는 코드는 불변 객체를 사용하는',
    '하쿠나 iOS팀에서는 신규 기능을 머지 할 때 Xcode 프로젝트 파일에서 충돌나는 고통을 줄여 보고자 Tuist를 도입해 사용하고 있습니다. 이번 모듈화 작업 역시 Tuist를 사용해 모듈 정의와 구성에 많은 도움을 받았고, Tuist의 버전업이 계속 되는 만큼 하쿠나 iOS 프로젝트에 필요한 기능이 추가된다면 적극적으로 도입해 볼 생각입니다. 모듈화',
    'NextJS를 사용해서 배포하면, 뒤에 www.test-url.com/home.html (가칭) 이런 형태로 뒤에 html이 붙는 걸 확인할 수 있다.  그냥 React.js를 활용할 때와는 달리, NextJS는 SSR을 활용하기 때문에, 이런 현상이 있는 것 같다. 이런 형태의 URL은 도저히 용납할 수 없는(?) 형태였기 때문에, 최우선순위를 두고 찾아',
    'HTTP/2가 HTTP/1의 어떤 문제들을 해결해 주는지 간단히 알아보고 AWS의 CloudFront와 Application Load Balancer에서 HTTP/2를 적용하는 방법에 대해 소개합니다. HTTP/1 1991년에 처음 세상에 나와서, 1999년에 1.1 버전이 나온 이후로 버전업 없이 20년을 넘게 쓰여왔습니다. 하지만 요즘의 웹 환경은 HT',
    'Mozilla Common Voice는 오픈 소스 음성 데이터베이스를 쉽게 다운로드하거나 기여하여 더욱 풍부한 데이터베이스를 만드는 프로젝트입니다. 기업이 아닌 누구나 고품질의 음성 데이터로 애플리케이션 구축의 기회를 주자는 취지의 오픈소스입니다. #opensource golang을 이용한 구독 커머스 아키텍처 설계 구독 커머스 아키텍처',
    'OverviewPermalink 이번 포스팅에서는 Injection공격에 대해서 설명해보도록 하겠습니다. OWASP top10에서 2013, 2017 연속으로 1위를 차지한 만큼 굉장히 위험한 공격기법입니다. 쉬운 공격 난이도에 비해 파괴력이 어마어마하기 때문에 보안에 손을 한번이라도 담궈본 사람들은 무조건 들어봤을겁니다. Code Injectio',
    '"선언적 프로그래밍 패러다임"과 "데이터 중심의 이벤트 이미터" 라는 두 가지 포인트가 있다. 간단하게 하나씩 짚어보면 선언적 프로그래밍 패러다임: 코드가 과정을 표현하는 것이 아니라 행위 자체를 표현하는 것. 대표적인 예로 HTML이나 SQL같이 어떻게 내부 구조가 이루어져 DOM을 렌더링하거나 데이터를 가져올지 표현하는 것이 아니라 어떤 DOM을 표현',
    '결제 처리에서 주문완료까지 비동기형태 구성 되어 있었습니다. 그렇다보니 여러가지 외부요인으로 인해서 주문이 정상 처리 되지 않기도 했고, 비동기를 정상적으로 처리하기 위해 많은 개발자분들의 고생한 흔적들이 남아 있었습니다. 그 이야기를 글로만 적기보다는 보다 쉽게 다이어그램으로 표현해보겠습니다. 1) 결제 인증까지의 일반적인 프로세스 위의 사진은 일반적인',
    '앱에서 만족시켜야 할 가장 중요한 요구사항은 당연히 주어진 정보를 디자인대로 잘 화면에 표현하는 일입니다. 스냅샷테스트는, 바로 이 화면이라는 출력물을 테스트합니다. 즉, 주어진 정보를 어떻게 표현해야 하는지에 대한 정답지로, “레퍼런스 이미지”를 미리 만들어두고, 우리의 코드가 같은 정보를 처리했을 때 레퍼런스 이미지와 정확히 똑같은 화면을 출력하는지를',
    'html2canvas는 이미지로 변경하고 싶은 엘리먼트를 순회하면서 엘리먼트의 위치, 스타일 등을 수집해서 캔버스에 그립니다. 그중에 박스 모델을 구현하고 있는 부분에 대해서 알아보았습니다. 네 방향의 각 테두리 별로 포인트 4군데의 위치를 계산하여 테두리 영역을 위한 path를 생성하고 색을 칠하는 것으로 테두리를 구현하고 있는 것을 확인할 수 있었습니다',
    '브릿지는 자바스크립트 엔진이 직접 네이티브 메서드를 호출할 수 있는 자바스크립트 인터페이스(JSI) 모듈로 대체될 것입니다. 이 모듈은 C++로 작성된 가벼운 범용(general-purpose) 레이어입니다.현재 아키텍처에서는 자바스크립트 코어 엔진을 사용하여 특정 엔진과만 호환됩니다. 하지만 JSI는 엔진에서 분리되어 Chakra, v8, Hermes등과',
    'OverviewPermalink 요새 새로운 팀의 on-boarding교육을 받고 있는데 거기서 배운 것들 중에 정리해둘 만한 것들을 포스팅 해보려고 합니다. 첫 번 째 시리즈로는 Think Like a Hacker! 로, 코딩할때 고려해야 할 취약점들의 설명과 예방 방법에 대한 내용입니다. 이번 포스팅에서는 Cross-Site Scripting(XSS)',
    '써드파티 컨텍스트에서의 WebSQL 지원 중단 및 제거 M102 (dev) 파일 처리 Navigation API Sanitizer API Origin Trial 그룹에 대한 로컬 실행 결정 setTimeout(0)의 최대 중첩 레벨 증가 setTimeout(..., 0) timeout 고정 제거 버전별 이슈 리스트 1. M101 써드파티',
    '동기와 비동기는 프로세스의 수행 순서 보장에 대한 매커니즘이고 블록킹과 논블록킹은 프로세스의 유휴 상태에 대한 개념으로 완전한 별개의 개념이라는 것이다. 아무래도 동기와 블록킹, 비동기와 논블록킹의 작동 매커니즘이 더 직관적이기 때문에 많은 사람들이 이 개념들을 같은 것 혹은 비슷한 것으로 오해하고 있는데, 방금 이야기 했듯이 이 두가지 개념은 서로 전혀',
    '우리는 쉽고 빠르게 더 나은 결과를 만들어내기 위해 각종 도구를 이용합니다. Laravel이나 Spring과 같은 웹 프레임워크들은 웹 서비스를 만들기 위한 대표적인 도구들입니다. 수많은 프로그래머들의 오랜 시간 고민한 끝에 탄생한 프레임워크들은 더 나은 방법으로 프로그램을 작성하는 것을 도와주고 있습니다. 그리고 그렇게 만들어진 프레임워크들은 하나같이',
    '문자로 관리하기가 불편해서 이걸 Excel로 옮기는 과정을 한번 해보았습니다. 일단 저는 안드로이드폰임으로 문자를 가져오는데 앱의 도움을 빌렸습니다. 사용한 앱은 SMS Backup &amp; Restore 이고 검색해보면 세세한 사용방법이 나오니 일단 백업 파일부터 만들어봅시다. 팁이라면 모든 핸드폰번호를 백업하기보다는 상품권이 온 번호만 선택해서 백업',
    'Understanding Decorators in Python Python이 제공하는 기능 중에서 제가 가장 매력적이라 생각하는 데코레이션에 대해서 자세히 소개하는 기사입니다. Python f-strings Are More Powerful Than You Might Think 유명하지만, 그렇다고 적극적으로 사용하지 않는다고 느껴지는 f-string',
    '신입으로 입사했던 첫 해, 협업을 해보니 코드를 쓰는 시간만큼이나 읽는 시간도 엄청 많다는 걸 알게 되었다. 동료(또는 나)의 코드가 잘 읽히면 내 작업 속도가 빨라졌고 흐름을 이해하기 어려운 코드에 부딪히면 느려졌다. 그래서 그때부터 독자의 입장도 고려해야겠다는 생각을 하게 됐다. 소프트웨어의 사용자와 독자 양 쪽 모두에 감정 이입하는게 프로그래머의 일인',
    'Hibernate에서 반응형 방식의 JPA 라이브러리인 Hibernate Reactive를 오픈했습니다. 반응형 프로그래밍에 대해서는 Red Hat 블로그에 올라온 ‘5 Things to Know About Reactive Programming‘ 글과 LINE Engineering 블로그에 올라왔던 ‘Armeria로 Reactive Streams와 놀자!',
    '이 글에서는 모노레포 개념 편에 이어 Yarn, Lerna, Nx 그리고 Turborepo 도구에 대해 자세히 소개해 드리려고 합니다. Yarn Lerna Nx Turborepo 1. Yarn Yarn 1.x https://classic.yarnpkg.com/en/docs/cli/ Yarn(1.x) 또는 npm(7.x)의 worksp',
    'WSL에서 GUI 방식으로 편하게 클릭해서 설치하는 우분투는 같은 버전끼리는 CLI로 익숙하지 않은 명령어를 학습해야만 쓸 수 있었습니다. 그러던 중, 우분투용으로 제공하는 멀티패스(Multipass)가 눈에 들어왔습니다. 멀티패스(Multipass)는 클라우드 형태로 우분투 VM을 생성하는 도구입니다. 버추어박스(VirtualBox) 느낌도',
    '플러터에서 로그인을 처리하여 브라우저에 넘기는 식으로 리펙토링했던 경험에 대해 살펴보겠습니다. 문제 인식 | 간편 로그인이 안되요 일단 간편 로그인이 무엇인지에 대해 살펴보겠습니다. 사이드 프로젝트에서 카카오톡을 이용한 간편 로그인을 지원하고 있습니다. 바로 아래 사진을 보면 브라우저의 경우 카카오톡으로 로그인 버튼을 누르게 되면 해당 핸드폰에 카카오톡이',
    '상태에 따라 화면을 렌더링하고, 유저와 인터렉션을 처리하며, 상태가 변경됐을때 다시 화면을 렌더링하는 UI의 본질적인 관심만이 남았다. 이 계층이 Vue 애플리케이션의 핵심이라 해도 과언이 아니다. Vue 애플리케이션은 부모 컴포넌트로부터 주입받은 props 와 자신의 상태인 data 에 반응형으로 UI를 렌더링하는 component 들을 조합하여 전체',
    '기본 <select>요소를 위와 같이 유려한 ui와 함께 좋은 ux를 지원하는것이 다른 요소에 비해 간단하지 않기 때문이다. 예를 들어, Button컴포넌트는 대부분 <button>요소에 스타일(css)을 적용하는 방식으로 구현한다. 하지만, select는 지원하는 CSS 스타일이 한정적이기 때문에 ‘스타일을 적용’하기 어렵다. <select>의 기능을 가',
    '이전에는 PDF 파일의 생성이 필요할 경우 pdfmake라는 라이브러리를 이용하여 PDF를 만들어주고 있었습니다. 라이브러리 홈페이지를 참고하시면 아시겠지만, 콘텐츠를 배열로 정의하여 손쉽게(?) PDF 파일을 생성할 수 있습니다. 손쉽게(?)에 물음표가 들어간 이유는 디자이너가 디자인해 준 예쁜 모습으로 PDF를 만들어내기 위해서는 꽤 많은 노력이 들어가',
    'html2canvas issue와 PR을 뒤져봅니다. 누군가 dotted와 dashed를 지원하는 PR을 올려둔 것을 찾을 수 있습니다. 곧바로 Fork 한 후에 해당 PR의 내용으로 패치를 해봅니다. 그리고, 이미지 태그를 사용하기 전 마크업을 이용하여 PDF를 생성해 보았습니다. 그림 15. PDF에서 점선(dotted)가 표현되고 있다 드디어! PDF',
    '안녕하세요, 이 글은 필자가 데이터 분석 업무를 하면서 실제 겪었던 일을 회상하며 정리한 글입니다. 글에서 다루는 상황은 실제 업무와는 무관하도록 각색하였습니다.Welcome to the Data Analytics World김코딩씨는 7년차 개발자입니다.일에 대한 흥미가 예전 같지 않던 김코딩 씨는 얼마 전부터 데이터를 다루는 일에 관심이 생겼습니다. 때마',
    '엔지니어라면 누구나 꿈꾸는 일이 있습니다. 마법의 빗자루로 하루아침에 레거시를 청소하고, 핑거 스냅 한 번으로 모든 사용자가 최신 버전을 사용하도록 만드는 일입니다(현실에서는 그렇게 강제했다간 사용자의 절반이 사라질 수 있습니다). 왜 한 번에 갈아엎는 작업은 스펙이 아무리 명료해도 어려울까요? 비즈니스는 하루도 쉬지 않고 전진해야 하는 상황에서, 회사가',
    '레이아웃 알고리즘 이해하기 : Understanding Layout Algorithms의 번역 글로 CSS를 공부하면서 프로퍼티의 사용법을 배웠지만 제대로 이해하려면 레이아웃 알고리즘을 배워야 한다고 설명하고 있다. 기본 레이아웃 알고리즘은 Flow 레이아웃인데 z-index는 Flow 알고리즘에 구현되어 있지 않기 때문에 z-index를 제대로 사용하려면',
    '레거시 코드를 리팩토링하며 얻은 경험을 공유합니다. 스프링부트환경에서 전략패턴을 활용했습니다.우리 직방에서는 스마트주차장이라는 서비스를 제공하고 있습니다. 스마트주차장은 아파트단지의 차량 입출 차 관련 서비스입니다. 차량 입출 차를 제어하는 회사는 매우 많기 때문에 연동하는 업체도 매우 많습니다. 업체와 연동하는 부분도 아주 많은데 그 중 방문차량 예약,',
    'DBMS의 구조 변경은 단연코 기차의 바퀴를 빼고 바꾸는 핵심 작업이라고 할 수 있으며, 특히 대용량 테이블의 구조 변경 작업은 “서비스 영향도 최소화”와 “최단 시간 완료” 사이에서 최적의 지점(Sweet spot)을 찾아야 해요. 오늘은 MySQL 서버가 서비스중인 상태에서, 테이블의 구조를 변경하는 작업에서 주의해야 할 이야기를 하나 하려고 해요.문장',
    '저희 팀에선 서버 환경이 아닌 모바일 환경에서 AI 모델을 추론해야 하는 상황이 자주 있는데요. 이에 모바일 GPU 환경에서 ‘최소한의 성능 감소와 최대한의 속도 향상’을 탐색하는 과정에서 세운 여러 가지 가설과 이를 증명하기 위한 실험 내용을 공유하면 좋겠다는 생각이 들어서 글을 쓰게 되었습니다. 비록 NVIDIA GPU와 Apple 칩셋 하나씩만 사용해',
    '그때는 미처 알지 못했고, 지금은 조금 알 듯하고, 내일은 더 알았으면 싶고 안녕하세요, 넷마블 인프라자동화팀 안현지입니다. 부푼 마음으로 넷마블에 입사했던 2021년 1월이 엊그제 같은데, 시간이 빠르게 흘러 사계절이 지나 다시 봄이 돌아왔습니다. 어느덧 저는 “신입” 딱지를 떼고 2년 차가 됐고, 짧은 지난 1년간 겪었던 희로애락의 순간이 빠',
    'How to run uWSGI Python으로 만든 서비스를 배포하실 때 한번쯤은 보시게 될 uWSGI의 세부적인 사항을 소개하는 기사 입니다. uWSGI에 대해서 궁금하셨다면 이 기사를 참고하시고, WSGI가 궁금하시다면 약간 힘들긴 하지만 PEP 3333을 꼭 읽어보세요. Processing large JSON files in Python with',
    '5,362 명의 경력 개발자, 예비 개발자가 참여한 온라인 설문 조사 결과를 기반으로 제작한 리포트입니다. 프로필/기술 스택/커리어와 관련된 답변을 통해 개발자들의 솔직한 의견을 엿보세요! 중복 응답 문항, 응답자의 답변이 누락된 문항이 포함되어 응답 비율 합계가 100% 미만이거나 초과될 수 있습니다.',
    '바이트를 설명하기 위해서는 먼저 비트(bit)를 알아야 한다. 비트는 Binary Digit의 줄임말로 컴퓨터가 이해할 수 있는 정보의 최소 단위이다. 0 또는 1 정보를 담을 수 있으며 비트를 조합하여 더 큰 범위의 데이터를 다룰 수 있다. 2비트이면 2^2(2의 2제곱)로 4가지의 경우를 나타낼 수 있으며 8비트는 2^8(2의 8제곱)로 256가지의 다',
    '모든 거래를 누구나 투명하게 볼 수 있고 검증할 수 있는 것이 바로 블록체인의 특징입니다. 하지만 LINE Blockchain을 개발하고 운영하면서 블록체인의 복원력이나 탈중앙성과 같은 블록체인의 특성은 유지하면서 개인 정보는 보호되길 원한다는 요구 사항을 여러 서비스에서 전달받았는데요. 이와 같이 아래와 같이 크게 두 가지로 정리해 볼 수 있습니다.',
    'WSL2에서는 ‘shutdown’으로 재부팅을 하거나 로컬 PC를 재부팅하면, 매번 IP 주소를 새로 할당받습니다. 로컬호스트(127.0.0.1)로도 동작하기 때문에, 큰 이슈 없이 사용하시는 분들도 계십니다. 하지만 여러 VM을 올려서 사용하거나, 로컬 PC 외부와 통신하면서 사용하시는 분들에게는 매번 IP주소가 바뀐다는 자체가 매우 성가실 수밖에 없습니',
    '도커 빌드 속도에 영향을 미치는 레이어(layer)와 캐시(cache)에 대해 알아보겠습니다. 도커 이미지는 빌드시 Dockerfile 의 명령어들을 차례로 실행하면서 레이어를 생성합니다. 이때 특정 명령어들(RUN, ADD, COPY)로 생성된 레이어는 파일 용량을 커지게 만들고, 이미지를 생성하는 시간도 길어지게 하죠. FROM ubuntu RUN',
    '이제 UI와 관련이 없는 기반 기술, API에 대한 상세한 내용, 그리고 UI와 관련이 없는 서비스 정책이나 업무 규칙을 모두 분리해내고 온전히 UI 와 관련된 관심만이 남았다. 남아있는 UI 와 관련된 관심사들은 크게 두 계층 Application 과 단어적 정의 그대로의 UI 로 나눈다. 그리고 이 두 계층 모두 Vue 라는 프레임워크 위에 구현되게',
    'Compose는 적은 코드와 직관적인 Kotlin API로 선언적 프로그래밍이 가능하여 상태값 관리에 훨씬 용이하다고 Android Developer Document에 소개 되어있었기에, 많은 고민 끝에 도입하기로 결정했습니다.잘한 일 일까요? 왜 저희는 Compose를 도입하려 했고, 어떤 이득이 있었는지에 대해서 포스팅 해보았습니다.Hello Compo',
    "리액트 커스텀 훅을 작성하는 방법과 훅 테스트를 작성하는 방법에 대해서 설명한다. 리액트 훅에 대한 더 자세한 설명은 리액트 훅 공식문서를 참고하자. 테스트할 리액트 커스텀 훅 필자는 여러 컴포넌트에서 중복해서 사용되는 로직을 공유하기 위해서 커스텀 훅을 사용했다. 다음의 예시를 살펴보자. import { useEffect, useState } from '",
    'Kotlin JDSL(JPA Domain Specific Language)을 만든 배경과, Criteria API와 비교해서 어떤 점에서 더 편리한지 설명드리겠습니다. Criteria API를 사용하면서 불편했던 점 Criteria 쿼리는 Java 오브젝트를 이용해 동적으로 타입 세이프(type-safe)하게 작성할 수 있는 쿼리입니다.',
    '왜 Domain 계층을 격리해야 하는가? 과거 대부분 서버에서 처리했던 비즈니스 로직들이 근래에는 프론트엔드 애플리케이션에서 직접 처리하는 일이 많아졌다. 문제는 이러한 비즈니스 로직들이 가뜩이나 복잡한 UI를 처리하기 위한 로직들과 한곳에 섞여 복잡함을 증가시킨다는 것이다. 이 둘은 대게 그 변경의 주기가 다르다. 근본적인 서비스의 정책은 그대로인 채',
    'React v18.0 : 오랫동안 준비되면 React의 새 메이저 버전 v18이 릴리즈 되었다. 18 버전 새 기능의 대부분은 새로운 concurrent 렌더러 위에 만들어졌고 18에서 가장 중요한 변경사항이다. Concurrency는 기능이라기보다는 다양한 버전의 UI를 만들 수 있게 하는 메커니즘이다. Concurrent는 엄밀히 호환 안 되는 변경사항',
    '언어는 도구에 불과하다는 말에는 전적으로 동의합니다. 하지만 동일한 제품을 만드는 데 더 나은 품질과 더 빠른 속도로 개발할 수 있다면 그 도구를 선택하는 것이 팀을 위해서, 제품을 위해서 더 나은 선택이라 생각됩니다. 언어를 전환하는 것이 비록 적은 시간이 있어야 하는 것이 아니긴 하지만 팀원 모두가 더 전문성을 가진 도구를 사용하게 됨으로써 장기적으로',
    '올해 초, 스캐터랩에서 출시한 "AI 챗봇 이루다"로 인한 뜨거운 논란은 서비스 운영 중단을 끝으로 잠잠해졌지만 AI 분야에 데이터 보안과 편향, 윤리적 가치 등의 많은 화두를 던졌다. 이러한 논쟁들이 그토록 뜨거웠고 지금까지도 "제2의 이루다 사태"를 막기 위한 여러 행보들이 이어지고 있는 이유는 결국, 잘못 개발된 AI가 사람들에게 부정적이고 불쾌하며,',
    '모두싸인은 센드그리드를 통해 이메일을 전송하고 있습니다. 서비스가 성장하면서 이메일 요청이 증가했고, 센드그리드의 API Response Time 이 간헐적으로 오래 걸리는 이슈는 모두싸인 알림 서비스로 전파되는 상황이 되었습니다. 내부 비즈니스 로직이 센드그리드 이메일 전송 API를 호출하고 응답을 기다리게 되어 있었기 때문입니다.전송 지연 중임을 보여주',
    '코드 베끼기 : 뇌가 절전모드일 때는 온라인 강의로 무작정 코드 따라쓰기 하루의 집중력이 소진된 저녁 시간대나 머리쓰기 싫은 날에는 온라인 강의를 들었다. 트리하우스의 유료 멤버십에 가입했고 유데미에서 유료 강좌를 구매했다. 앱 개발 강좌는 보통 이론 설명이 약간 있고 대부분은 강사가 화면에 치는 코드를 보고 따라 치면서 샘플 앱을 완성하는 형식이다. 그래',
    "'회원 탈퇴' 기능에 대한 요구사항을 받았습니다. 탈퇴하면 회원 데이터가 '삭제' 되도록 구현했습니다. 판매 상품을 삭제 할 수 있어야 한다는 요구사항을 받았습니다. 내부 관리용 어드민 사이트에서 판매 상품을 삭제하면 판매 상품 데이터가 '삭제' 되도록 구현했습니다. 그리고 서비스 운영을 시작하자 이런 질문과 요청을 받기 시작합니다. CS 담당자/마케터 s",
    '해운대에 사는 친구를 만나러 갈 겸 속초에서 부산까지 도보 여행을 가기로 했다. 지도를 켜서 동해안을 따라 길을 그려봤다. 대략 400km 정도다. 한시간에 4km를 걷는다고 했을때 총 100시간이 걸리고, 하루에 10시간 정도 걸을 수 있으니 총 10일이 걸릴 것으로 예상한다. 지도에도 이렇게 나오니 더욱 자신있게 친구한테 전화해서 다음주 일요일 밤에',
    '데이터분석가 포지션은 PM/PO, 개발자 등에 비해 역할이 애매하게 느껴질 때가 많습니다. 예측모델링 위주의 업무를 하는 데이터분석가가 아니라면 때로는 데이터 많이 잘 하는 PM/PO도 할 수 있어 보이는 겹치는 업무가 많기 때문에 그렇게 느껴지는 것 같습니다 (어쩌면 PM/PO가 잡부 업무도 수행하기 때문에 그럴 수도 있겠네요). 그럼에도 데이터분석가의',
    'AppsScript는 구글 워크스페이스에서 제공하는 여러 가지 앱에 부가 기능을 추가할 수 있도록 도와주는 프로그래밍 도구이다. 언어는 자바스크립트의 형태를 띄고 있지만 브라우저도 nodejs도 아닌 자신만의 호스팅 환경을 구축해 쓰고 있다. 그래서 파일 확장자도 .gs이며, 활용하는 객체나 문법도 약간 다르다. 특징',
    'Google Play 스토어 엔지니어링 책임자들은 지난 2020년에 전체 홈페이지 기술 스택 개편이라는 중대한 결정을 내렸습니다. 출시 후 10년이 넘은 기존 코드에 수없이 많은 Android 플랫폼 버전 및 기능 업데이트가 누적되면서 막대한 기술 부채가 발생했습니다. 개발자 생산성이나 스토어 자체의 사용자 경험 또는 성능에는 부정적인 영향을 미치지 않으면',
    'STUDY WITH ME! 이상한 부호의 집합체. 필요한 게 있으면 구글에서 검색해서 긁어다 사용하곤 했다. 하지만 내가 사용하기에 딱 맞는 자료는 나오지 않고, 변형해서 사용하려니 머리가 아프다. 보는 것처럼 어렵기만 하진 않은 정규식. 같이 공부해보자!! 정의 문자열에서 찾을 수 있는 일정한 패턴을 기호화한 표현식 12345 여기 문자열 12345가',
    '주변에 Lambda로 구성된 serverless 백엔드를 개발하고 있다고 하면, 종종 듣는 질문이 있는데요. 전역 변수가 유지되냐는, 즉 Lambda 런타임이 일회성이 아니냐는 질문입니다. 백엔드에서는 단일 요청에만 유효한 일회성 요소도 있지만, 데이터베이스 connection처럼 런타임 내에서 계속 유지되어야 하는 요소도 있습니다. 저도 예전엔 EC2 인',
    '저번에 작성했던 TCP의 헤더에는 어떤 정보들이 담겨있는걸까? 포스팅에 이어 이번에는 TCP의 핸드쉐이크 과정과 그 속에서 변화하는 TCP 상태에 대해서 한번 알아보려고 한다. TCP는 신뢰성있는 연결을 추구하기 때문에 연결을 생성하고 종료하는 순간에도 나름의 신뢰성 확보를 위해 핸드쉐이크(Handshake)라고 하는 특별한 과정을 거치게 된다. TCP를',
    '데이터 불변성은 자바스크립트를 비롯한 프로그래밍 언어에서 중요한 자리를 차지해왔다. 여기 부분적으로 불변성을 보장하기 위한 두 가지 자바스크립트 메서드가 있다. 바로 Object.freeze와 Object.seal이다. 이번 포스트에서는 꽤 헷갈릴 수 있는 두 가지 메서드를 비교해 본다. Object.defineProperty freeze와 seal을 각각',
    '왜 서버와 API를 통해 메세지를 주고 받는 책임을 갖는 API Client 를 별도의 계층으로 정의하고 격리해야할까? UI 컴포넌트와 API의 강한 결합은 복잡도를 증가시킨다. 서버 API를 호출하는데는 생각보다 많은 구체적인 사항들이 포함된다. 예를들면 “어떤 EndPoint의 어떤 API를 호출할지”라거나 “API의 에러코드”에 따라 이후 흐름을',
    'C나 C++로 서버를 개발하거나 라이브 운영을 하다 보면 다양한 크래시와 마주합니다. 여러 원인이 있겠지만, 그중에서도 ‘null’ 이슈는 흔한 농담이 될 만큼 자주 마주합니다. ‘null’은 무조건 발생하는 크래시기 때문에, 다른 이슈와 비교하면 뇌리에 박혀버릴 정도로 우리를 괴롭힙니다. 실제 크래시 현황에서 ‘null’이 유발하는 크래시가 어느 정',
    '들어가며 안녕하세요, 채널톡 웹팀 Dugi 입니다 채팅은 채널톡 제품의 핵심 기능이며 대부분의 사용자가 제품 내에서 만나는 feature입니다. 채널톡의 채팅 경험을 더 빠르고 부드럽게 만드는 일은 사용자 경험의 큰 부분을 개선하는 일이기도 합니다. 당장 저희들부터가 팀 메신저로 채널톡을 활용하고 있으니까요! 웹팀의 task force 중 하나인',
    '분석된 문장과 단어, 문법은 데이터의 형태로 저장되고 있습니다. 문장을 분석하여 단어들을 추출하여 저장하고, 문장의 어떤 문법적 요소가 들어있는지 tagging 합니다. 이 중에서 문장을 어떻게 분석하고 활용하는지와 분석된 문장들의 유사도를 구해봅시다.밀당 영어 콘텐츠의 영어 문장 분석은 Google 자연어 처리 엔진으로 어떤 문장 구조와 단어를 가졌는지',
    '개발하고 있는 프론트엔드 애플리케이션의 복잡함에 압도당해본 적이 있는가? 새로운 기능을 추가하거나, 기존 기능에 대한 개선을 요청받아서 관련된 코드를 열었는데 갑자기 숨이 턱 막힌다거나... 천라인이 넘어가는 `if` 로 점철된 컴포넌트를 만났다거나... 분명 5분 전에 배포한 건 서버 API인데 내 애플리케이션이 동작하지 않게 되었다거나.. 브라우저의',
    'MutationObserver는 특정 dom의 변경을 감시하는 기능을 제공해준다. 이 기능을 사용하기 위해서는 인스턴스를 만들고, 감시하고자 하는 dom을 등록해야 한다. 1) MutationObserver 생성자, 함수 💡 MutationObserver를 사용하기 위해서 생성자와 함수에 대해 알아보자. (1) MutationObserver 생성자',
    '테스트코드는 쉽고 빠르게 작성할 수 있고, 앱의 기능 대부분을 테스트 할 수 있으며, 무엇보다도, 장기적인 차원에서 뿐만이 아니라 단기적인 차원에서 순간순간의 개발 속도도 훨씬 빠르게 만들어주었습니다. 테스트코드를 어떻게 사용하기에 그럴 수 있었는지, 뱅크샐러드에서 다년간의 시행착오를 통해 쌓아온 각종 노하우를, 총 3편의 글들을 통해 대방출합니다. 1',
    'Go 언어의 장점은 간결한 문법, 컨벤션 통일, 가벼운 고루틴(Java의 쓰레드) 등이 있고, Docker 역시 Go 언어로 개발되어 있을 정도로 많은 곳에서 사용 중입니다.2022년 3월에 Go 1.18이 릴리즈되면서 제네릭이 새롭게 추가된다고 하여 예제를 중심으로 간략하게 정리해 보았습니다. Go 언어 v1.18부터 제네릭이 들어간다고 한다. (벌써',
    '새로운 프로젝트를 설계하거나 기존 프로젝트가 성장하면서 규모가 커질 때 우리는 효율적인 프로젝트 구조를 고민합니다. 핀포인트 프로젝트의 프론트엔드 구조를 개선하면서 검토하고 조사했던 모노레포(monorepo)의 개념과 프로젝트 구성 기법들을 두 편으로 나누어 공유하고자 합니다. Google, Facebook, Microsoft, Uber, Airbnb,',
    '프로그래머의 가장 어려운 업무가 이름 짓기라는 설문 결과도 있듯이 변수에 적절한 이름을 지어주는 것은 어렵고 오래걸리는 일이다. 영어가 모국어가 아닌 사람들에게는 더 어려울 수 밖에 없는데 특히 Bool 변수명을 올바르게 지으려면 몇가지 영문법을 숙지해야한다. Bool 변수명은 사소한 차이로도 의미가 많이 바뀌어 코드를 읽는 사람을 더 헷갈리게 할 수도',
    '무한 스크롤(infinite scroll) 기능을 테스트하기 위한 코드를 작성하면서 만난 에러와 해결하는 과정을 정리하였습니다. 1. Intersection Observer APIPermalink Intersection Observer는 타겟 엘리먼트(target element)가 관찰하고 있는 화면에 보여지는지 확인하는 Web API 기능입니다. 이번 포',
    'Heaptrack 수집기에는 몇 가지 특징이 있습니다. 구동 중인 프로세스를 후킹할 수 있음.즉, 워밍업(Warming up) 이후에도 프로파일링을 할 수 있음.시작부터 프로파일링도 할 수 있음.수집한 데이터는 일정 주기로 압축함.수집 중간에 결과를 분석해야 하는 경우, 수집기를 종료하지 않고 수집한 데이터를 복사할 수 있음.수집 시에는 성능이 일부',
    '올해 1~2월 즈음 우연히 google/promises를 알게 되었는데 소개 글과 샘플 코드 몇 줄을 보고 나서 ‘이건 꼭 써봐야겠다’는 생각이 들었다. 뭘 하는 프레임워크인지는 깃헙에 잘 소개되어 있어 상세한 설명은 생략하지만 한 줄 요약을 하자면 비동기 작업에 대한 결과를 completion handler로 처리하는 iOS의 특성에 기인하는 nested',
    '요즘 라이브 서비스의 레거시 코드 리팩터링을 하고 있다. 흔히 가변 상태를 관리하는 Context 클래스가 레거시 코드에 있는 건 새삼스럽지 않았지만, 과도하게 사용하고 있어서 정리가 필요했다. 가변 상태 Context 사용 시 문제점 가변 상태를 가지는 Context 클래스가 2, 3개도 도 아니고 10개쯤 되면 과하다고 생각한다. 이렇게 많은 Conte',
    '최근에 AWS의 서울/도쿄 리전에서 CloudFront 장애가 발생했다. EC2, RDS, ElasticCache에 비해 CloudFront는 모니터링을 잘 안하게 되는데, 장애가 발생하면 서비스 전체에 직격타가 된다. 대부분의 정적 파일 (이미지 등)이 CloudFront를 통한 CDN으로 전달이 되기 때문이다. 그래서 CloudFront가 평소보다 응',
    '함수는 값을 반환한다. 리액트 앨리먼트를 반환하는 함수를 리액트에서는 함수 컴포넌트(Function Component)라고 부른다. 클래스에 비해 함수가 간편한 것 처럼 함수 컴포넌트는 비교적 단순하다. 그만큼 제약도 있다. 함수 컴포넌트는 컴포넌트 생애 주기라는 것이 없다. 물론 클래스 컴포넌트가 제공하는 메소드도 없다. 컴포넌트가 생성되고 마운트 되고',
    '메모리릭은 우리의 워라밸을 해치는 대표 주자입니다. 윈도우와 리눅스를 구분하지 않고, 예상치 못한 곳에서 돌발 출현해서 우리를 긴장시킵니다. 윈도우 서버에서 메모리릭을 찾기 위해 메모리 프로파일링하는 방법은  “워라밸 브레이커, 메모리릭을 찾아라“ 글에서 가볍고 길게 보실 수 있습니다. 이번 글에서는 리눅스에서 메모리를 프로파일링할 때 사용하는 Heaptr',
    'Tailwind의 utility-first 특성과 장단점은 이미 많은 곳에서 소개가 되고 있고, 저희 팀에서도 장점이 더 많다고 판단하였습니다. 직접 Tailwind를 경험해본 바로는 개발 속도가 빨라지는 장점이 크게 와닿았습니다. 스타일 시트를 오가는 컨텍스트 스위칭도 없고, 클래스 이름을 시맨틱하게 정하기 위해 고민해야 하는 시간도 사라졌습니다. 페이지',
    'Node.js 환경에서 Typescript, Express.js로 백엔드 코드를 작성하고, AWS Lambda로 배포하여 사용하고 있습니다. 이전에 Serverless framework로 AWS 인프라 구축하기, AWS Lambda에서 Express 사용하기 같은 기록을 다 남겨놨으니 참고하셔도 좋을 듯 합니다. 기존 백엔드 코드의 문제점 기존에는 순수 e',
    '프로토타이핑과 퍼블리싱의 불연속성에서 오는 한계 Adobe XD, Figma 등등 훌륭한 프로토타이핑 툴은 시중에 많이 나와 있다. 하지만 개발자에게 있어 프로토타이핑 툴은 어떤 한계를 지니고 있는 것으로 느껴진다. 디자이너가 아무리 훌륭하게 디자인을 해 줘도, 개발자가 퍼블리싱하는 과정에서 필연적으로 오차가 발생하기 마련이다. 결국 그림에서 코드로 디자인',
    "객체에 데이터를 할당하면, 데이터 자체를 저장하는 게 아닌 데이터를 저장한 메모리의 주소값을 참조한다. 결국 객체가 참조하는 주소가 변하지 않는 한, const로 선언해도 값을 변경할 수 있다. const obj = {'a': 12, 'b': 13}; obj.a = 55; console.log(obj); 그럼 객체의 재할당은 막을 수 없나? 아니다",
    '복합기의 시작 버튼을 눌렀습니다. 그리고 그 앞에서 스캔이 완료될 때 까지 하염없이 기다렸다가 결과물(스캔된 파일)을 갖게 된다면, 이것은 blocking 입니다. 10분은 아무것도 안하기에는 꽤 긴 시간인데 말이죠. blocking 방식에는 다른 일을 모두 중지하고 작업이 완료되기 만을 오매불망 대기하는 이 기다림이 항상 포함되어 있습니다. 반면 non-',
    '소스코드의 특정 모듈이 의도된 대로 작동 하는지 검증하는 절차모든 함수와 메소드에 대한 Test case 를 작성하는 절차JUnit5 는 크게 세가지의 모듈로 구성되어있습니다.JUnit Flatform JVM에서 테스트 프레임워크를 실행하는데 기초를 제공합니다.테스트를 하기 위한 TestEngine API 제공합니다.JUnit JupiterJUnit 5에서',
    'Github Issue 프로젝트를 진행하면서 발생하는 모든 이슈 (버그 발생, 개발, 풀 리퀘스트 등등) 이슈 생성하기 → 참고로 이슈페이지에서 @이름 을 통해 다른 사용자를 언급할 수 있고, #num 을 통해 커밋, 이슈 들을 참조해 소통을 원활하게 할 수 있다. Label 설정하기 각 이슈에 tag / label을 부여하여 이슈의 검색효율을 높',
    '조직은 자신의 커뮤니케이션 경로를 반영한 설계를 하도록 제약받는다. - 콘웨이 콘웨이가 말한 법칙이란 조직 커뮤니케이션의 실제 경로(닐스 플래깅이 언급한 가치 창출 구조)와 조직이 개발한 소프트웨어 아키텍처 사이의 강한 연관성, 혹은 알란 켈리가 준동형의 힘(homomorphic force)이라 부른 것을 의미한다. 설계가 조직의 구조를 벗',
    '성능 최적화를 위해 Reflow를 줄이는 방법에 대해서 알아보는 중 DOM의 위치나 사이즈를 가져오는 것도 reflow를 발생시킬 수 있다는 내용을 접하게 되었고 테스트를 진행해보았습니다. 먼저 그냥 단순히 사이즈나 위치를 가져오는 것은 reflow를 발생시키지 않지만, DOM의 스타일을 수정하는 경우 정확한 사이즈나 위치 정보를 가져오기 위해서 강제 re',
    '웹 서버에서 HTTP 요청에 응답할 때, 처리 결과를 간결하게 알려주기 위해서 HTTP 응답 상태코드가 사용되죠. 가장 대표적인 응답 코드로 200 OK, 404 Not Found, 500 Internal Server Error 등이 있습니다. 그런데, HTTP 상태 코드의 목록을 자세히 들여다 보면 이런 생소한 응답 코드도 존재한답니다. https://',
    'MSA에서 Event Driven 이 함께 언급되는 이유는 무엇일까요? MSA 핵심 키워드 중 느슨한 결합과 연관이 있습니다. 각 마이크로서비스는 서로 간 느슨한 결합을 가져감으로써 타 시스템에 대한 의존과 영향도를 줄이고 각 시스템의 목적에 집중함으로써 강한 응집을 갖는 시스템을 만들 수 있습니다. Event Driven 은 이를 돕습니다. 이해를 돕',
    'AWS EC2에 Ansible을 이용하여 Apache Airflow 구성에 필요한 모듈 서비스는 프로세스와 데몬으로 동작할 수 있도록 코드로 관리하고, Bash Operator를 통해 Amazon Simple Storage Service (이하 Amazon S3)에서 Directed Acyclic Graphs (이하 DAG’s) 코드의 싱크를 맞출 수 있도',
    'Gson은 타입 안정성 부분으로 인해 사용을 재고할 수밖에 없었습니다. Kotlin에서는 아래와 같이 클래스 생성자에 default value를 사용할 수 있습니다.그렇다면 Gson을 활용해서 pico 데이터만 있는 JSON 파일을 위의 클래스로 직렬화하고자 할 때, ddeokGu는 “Cute”라는 값으로 잘 들어갈까요?위와 같이 ddeokGu는 null',
    '(출처: 기즈모도) 편의를 위해 스마트폰에 다운로드한 앱이 나도 모르게 개인 정보를 쏙쏙 빼내간다면 어떨까? 큰 배신감이 들 것이다. 문제는 이런 상황을 앱 개발사도 모르고 있었다는 점이다. 앱을 만들어 배포한 개발사가 아닌 제 3자가 개인 정보를 수집하고 있었던 것.​지난 6일(현지시간), 미국 매체 월스트리트저널(WSJ)은 구글이',
    '모노레포란 같은 레포지토리에서 서로 다른 프로젝트들을 관리하는 소프트웨어 개발 전략을 말합니다. (출처: Wikipedia) 각 프로젝트를 서로 다른 레포지토리에서 관리하는 전략과 비교했을 때 코드 재사용, 외부 의존성 관리, 모든 프로젝트를 아우르는 리팩토링 측면에서 장점이 있습니다. 저희 조직은 소수의 FE 엔지니어가 다수의 FE 프로젝트를 개발 및 운',
    '자바스크립트 Web Audio API는 "짧은 오디오 데이터"를 다룰 때 AudioBufferSourceNode 객체를 이용한다. 이 글에서는 AudioBufferSourceNode를 통해 1) 개발자가 생성한 오디오 데이터, 2) mp4, wav 등의 파일로 된 짧은 음원 등을 다루는 방법을 정리한다. 글의 가장 하단에는 각각에 대한 예제 코드를 정리',
    '스프링 시큐리티(Spring Security)는 스프링에서 애플리케이션 인증과 권한 부여 같은 보안 기능을 제공하는 하위 프레임워크입니다. CVE-2016-5007 취약점은 스프링 시큐리티가 지원하는 권한 검증과 URL 패턴 검사 로직을 우회하도록 허용시켜서 접근 권한 관리를 무력화시킵니다. 즉, 접근 권한이 없는 URL에 우회 접근할 수 있다는 의미입니다',
    '데이터가 파편화된다는 것은 개발자 개개인이 특정한 기능 개발을 위해서 여러 데이터 시스템에 의존하여 개발을 해야 한다는 의미이고, 이는 개발 생산성 저하를 일으킬 수 있습니다. 따라서 사내의 모든 데이터를 하나로 흐르게 하는 데이터 파이프라인을 구축할 필요가 있었습니다.정리하자면 큐 시스템 도입 데이터 파이프라인 구축 두 가지 이슈를 해결하기 위한 솔루션을',
    "webpack loader는 특정 확장자를 명시하고 이에 대해 필요한 로더를 붙이는 방식으로 작성합니다. 이때 적용 순서에 따라 다른 방식으로 로더를 적용시킬 수 있는데요. 2개 이상의 로더를 적용하는 설정을 작성할 때는 다음과 같은 방식으로 작성할 수 있습니다. // 1 { test: /\\.ts|tsx$/, loaders: ['babel-l",
    '데이터베이스 트랜잭션(Database Transaction)은 데이터베이스 관리 시스템 또는 유사한 시스템에서 상호작용의 단위이다. 여기서 유사한 시스템이란 트랜잭션이 성공과 실패가 분명하고 상호 독립적이며, 일관되고 믿을 수 있는 시스템을 의미한다. - wikipedia DBMS는 각각의 트랜잭션에 대해 ACID를 보장한다. 간단하게 읽어보자. 원자',
    '프로파일링 기능을 사용하면 애플리케이션에 대한 부가적인 분석 정보를 얻을 수 있다. 세부 기능으로는 애플리케이션의 실행 방식과 메모리, CPU 리소스가 할당되는 방식에 대한 분석을 제공하는 Async Profiler, 애플리케이션이 실행되는 동안 JVM에서 발생한 이벤트에 대한 정보를 수집하는 모니터링 도구인 Java Flight Recorder 등이 있다',
    '아래 글은 인과추론 Summer Session 2021 강의를 듣고 정리한 결과입니다.인과 추론을 위한 연구 디자인인과 추론을 위한 연구 디자인의 위계 관계를 다음과 같이 정리해볼 수 있다.Level of Causal InferenceResearch Design7Meta-Analysis6Randomized Experiment (RCT)5Quasi-Exper',
    'Domain Specific Languages(DSL)은 코드의 내부 로직을 숨기고 재사용성을 올려줍니다. 어떤 경우는 비 개발자가 사용하도록 고안되는 경우도 있어서, 일반적인 프로그래밍 언어보다 훨씬 쉬운 사용성을 가집니다. 핵심은 해당 도메인을 아는 사람이면 누구나 쉽게 해당 도메인을 제어할 수 있도록 DSL을 제공하는것이 목적이며, 그렇기 때문에 프로',
    '코드 리뷰란 한 개발자가 코드를 작성하면 다른 개발자가 정해진 방법으로 피드백을 주고받는 과정을 말합니다. 이 과정을 통해 본인이 발견하지 못한 실수를 다른 사람이 발견하여 코드의 부작용(Side effect)과 오류를 조기에 대응할 수 있으며, 개발 내 정해진 컨벤션 규칙을 유지하고 기술 부채를 줄일 수 있습니다. 또한 여러 명의 개발자가 참여함으로써 문',
    'MapStruct 라이브러리는 객체 간의 매핑을 편리하게 해준다. 스프링 프레임워크에서 데이터 조회 API를 개발할 때를 생각해보자. 컨트롤러를 통해서 들어온 요청이 여러 비즈니스 로직과 데이터 접근 로직을 거치면서 여러 계층 간의 데이터 변경을 한 후에 최종적으로 응답을 반환한다. DTO(Data Transfer Object)와 Entity 간의 변환을',
    '아토믹 디자인 디자인 요소들을 나누어 파악하고 이 요소들을 조합을 통해서 디자인을 구성하는 방식. 즉, 컴포넌트 중심의 디자인 패턴. 리액트는 컴포넌트를 중심으로 만들어지는 프레임워크로, 컴포넌트의 재사용성이 매우 중요하다. 중복이 되는 컴포넌트를 공통으로 사용할 수 있도록 빼는 것이 관건인데, 이것은 개발을 진행하다 보면 일일히 생각하며 진행하는 것이 어',
    'Processing large JSON files in Python without running out of memory 대용량 JSON 파일을 처리에 관한 짧은 기사 입니다. 데이터 분석에서 대량의 JSON을 만날 때가 거의 없긴 하지만, 그래도 알아두시면 나중에 도움이 될지도 모를 일이죠 :D Pass-by-value, reference, and as',
    '이 글은 “내가 만약 지금 프론트엔드를 가르친다면 어떻게 가르칠까?” 에 가깝다. 그러니 어느정도 가치 판단은 스스로 내리기를 바란다. 이 글에서는 총 6개의 스프린트 (12주)를 거치는 동안의 학습법을 다룬다. 물론 시간은 더 넉넉하게 사용해도 괜찮다. 여기서는 하루 4시간을 이론 학습에 투자하고, 2시간을 휴식, 다시 4시간을 실습 학습에 투자하는 걸',
    '안드로이드 앱에서 과거부터 사용해오고 있던 DI도구인 Koin에서 구글에서 권장하는 공식 DI 라이브러리 Hilt로 넘어갔던 과정, 그리고 이를 통해 느낀 점에 대해 여러분들께 공유 드리려고 합니다. Koin에서 힐트로 넘어간 이유? 😎 안드로이드 팀에서 사용하고 있던 스펙 2021년 4월까지 저희 서비스는 아래 코드 구성과 함께 DI도구로 Koin을',
    '기업의 기술 블로그는 해당 기업의 실적과 성과, 체계와 문화, 전략과 가치가 반영된 결과다. 언뜻 보면 기업 홈페이지나 SNS처럼 홍보나 PR 수단으로 인식될 때도 있지만 기술 블로그는 엄연히 기업의 조직문화와 개발 문화를 반영한다. 단적으로 비교할 수 있는 예가 네이버와 우아한형제들의 기술 블로그다.네이버는 2011년 자사 개발자들의 지식과 실전 노하우를',
    '통합 도메인에서 전문적인 4개의 세부 도메인으로 세분화기존에는 하나의 레거시 서버에서 CRM/CMS/LMS/B2C 4개의 도메인 서비스를 모두 제공해왔습니다. 각 도메인이 기능이 세분화 되고 크기가 커짐에 따라 의존성 문제와 관리 비용의 상승과 더불어 개발 비용을 상승시키는 문제가 발생합니다. 각 도메인을 분리하여 개발 비용은 낮추고 기존 모놀리식 구조에서',
    '프론트엔드 개발을 하다보면 날짜와 관련된 여러가지 연산이 요구될 때가 많은데요. 예를 들어 캐시백 지급일을 상품 결제 완료일로부터 45일 뒤의 날짜로 보여준다거나, 생성된지 1분이 지나지 않은 글의 경우 작성일을 “방금” 이라고 보여주는 등의 니즈가 있을겁니다. 하지만 위와 같은 날짜 연산들을 Javascript의 Date 객체만을 사용해 처리하기엔 번거롭',
    '안녕하세요! 빅데이터 스터디입니다~ 다음으로 대시보드를 빠르게 개발하는 방법을 알려 드리겠습니다.기업의 디지털화가 진전됨에 따라 관리자의 데이터 가치에 대한 활용의식이 높아지고 데이터 분석에 대한 수요가 나날이 증가하고 있습니다.특히 경영진에겐 시각화 대시보드가 인기가 높습니다.한편, 대형 화면은 경영 데이터를 전면적으로 전시할 수 있고 관리 전략을 상화시',
    'display를 flex로 설정하여 flexible 속성을 부여합니다. 또한 flex-direction을 column으로 설정하여 행이 아닌 열을 기준으로 자식 요소들이 나열되게 합니다. width, height 즉 너비와 높이 또한 16px로 기존에 tistory #1 스킨에서 설정해준 초기 설정값을 지향합니다. margin은 auto로 하여 여백을 페이',
    '웹 접근성의 본질은 유저를 향해 있습니다. 웹 접근성과 관련된 기술 중에 시맨틱 마크업 정도밖에 몰랐었던 저로서는, 그동안 시맨틱 태그를 사용하면 취할 수 있는 장점으로 SEO 최적화와 의미론적인 마크업 작성을 통한 협업 효율 상승을 꼽았었습니다. 그런데 시맨틱 태그를 사용해보고 스크린 리더 디버깅을 해보니, 이제 저정도의 설명은 웹 접근성을 너무 과소평가',
    '서비스를 하는 조직은 규모가 커지고 확장되면서 다양한 제품을 만들어가게 됩니다. 시간이 지나면서 서비스에 대한 기획서도 작성하게 되고 개발과 관련된 다양한 문서들도 생깁니다. 기획서를 위한 디자인 툴과 개발을 위한 hand-off 소프트웨어도 트렌드에 따라 다양하게 사용하는데 화해 개발팀은 google drive ppt, whimsical, zeplin,',
    '캐시는 속도 차이로 인한 퍼포먼스 저해를 막기 위한 것이라고 생각해도 과언이 아니다. 단 한 대의 서버 내부에서도 여러 이유로 캐시를 사용할 수 있으며, 여러 서버 간의 통신에서도 캐시를 사용할 수 있다. 어느 하나가 상대적으로 너무 느리기 때문에 생기는 문제를 계층적 구조를 통해 해결하고자 한 방법이 캐시라고 할 수 있다. “Caching”은 이제 특정',
    '사용자 스토리는 사용자나 구매자에게 가치를 줄 수 있는 소프트웨어의 기능을 서술한 것입니다. 쉽게 얘기하면, 사용자가 소프트웨어를 통해 무엇을 할 수 있는지를 사용자 관점에서 서술한 것이라고 할 수 있습니다. &lt;사용자 스토리의 예시&gt; 사용자는 자신의 프로필을 특정 기업이 검색하지 못하도록 제한할 수 있다 사용자는 자신의 프로필을 채용',
    '# Web Audio API란? Web Audio API란 오디오 데이터를 입력받아, 각종 처리 및 분석을 수행할 수 있게 해주는 API이다. Web Audio API에서 다룰 수 있는 소리 데이터는 아래의 4가지가 있다. 1) Oscillator: 주파수, 볼륨, 파형을 계산해 만들어내는 소리 2) AudioBuffer: 짧은 오디오 데이터 3) Me',
    '우리가 일상생활에서 느낄 수 있듯 웹은 다른 학문이나 기술에 비해 유독 빠르게 진화해 왔습니다. 그래서 역사가 약 30년이 채 되지 않음에도 큼직한 패러다임이 두 번이나 바뀌었죠. 웹의 과거와 미래를 분석하는 사람들은 그 분기점들을 기준으로 웹을 1.0, 2.0, 그리고 3.0으로 구분하고 있습니다.이번 시간에는 이러한 웹의 역사를 가볍게 훑어보며 시기별',
    '어느정도 규모있는 개발팀이 구성되어 있다면 Jira를 이용해서 프로젝트 관리를 하고 계실 겁니다.(애증의 jira…)Jira프로젝트에서 Release를 잘 활용하면 배포되는 앱의 버전별 이슈를 효율적으로 관리할 수 있습니다.Release 버전을 사용해서 앱을 배포하고 관리하고 계신다면,다음과 같은 프로세스로 진행하고 계실겁니다.앱을 배포하고 GitHub에서',
    '아래 글은 인과추론 Summer Session 2021 강의를 듣고 정리한 결과입니다.Frameworks for Causation인과관계를 위한 프레임워크가 왜 필요할까?Various Approaches to CausationLogic/Theory-Oriented(1) Theory-Based Hypothetical Causation (이론에 기반한, 가설적',
    'carousel-slide를 left를 이용해서 직접이동시키는 방식이 아니라 transfrom과 translateX를 이용해서 이동시키는 거 처럼 보이는거라 offsetLeft값을 가져오지 못하여 이를 어떻게 해결할까 하다가 이벤트가 발생하는 지점들을 계산하여 이용하였고 추가적으로 width와 index를 이용하여 이동시켰다. 연속으로 버튼을 누른다던가 할',
    '기술 온보딩의 첫 번째 프로젝트인 만큼 본격적으로 HTML,CSS,JS를 다루기 전 잃어버린 감을 찾아오는 몸풀기 단계라고 생각을 했는데요. 오랜만에 바닐라 자바스크립트를 하는 게 어색하기도 했지만, 이 기반이 튼튼해야 추후 새로운 프레임워크를 다뤄도 흔들림이 없겠다 싶어서 열심히 임했습니다. 제가 이번 프로젝트를 통해 깨닫게 된 것은 다음과 같습니다',
    '프로듀서의 기본 역할 소스에 있는 메시지들을 카프카의 토픽으로 전송하는 것프로듀서의 기본 동작 프로듀서의 send() 메소드 → 시리얼라이저 → 파티셔너 → 카프카파티션&gt; 성능향상을 위한 병렬 처리가 가능하도록 하기 위해 토픽은 파티션으로 구성되어져 있다.&gt; 메시지는 파티션의 로그 세그먼트에 저장된다.(이전 글 3, 4 참고)파티셔너&gt; 파티',
    '템플릿 메서드 패턴이 무엇인지 설명하기 전에 직관적으로 필요성을 이해하기 위해, 라면을 끓이는 과정을 코드로 구현해본다. 우리는 진라면, 삼양라면, 너구리 이 3가지 라면을 끓일 것 이다. 어떤 종류의 라면을 끓이는지 상관없이, 국물 라면이라면 아래 순서대로 조리하는 것이 일반적일 것 이다. 가스 불을 켠다 → 냄비에 물을 받고 끓인다 → 라면을 준비한다',
    '데이터 사이언스에 관심 있는 사람에게 추천하는 3가지 활동지난 데이터 사이언스에 관심 있는 사람에게 추천하는 3가지 활동 1편에서는 데이터 사이언스 관련 경진대회 플랫폼을 소개해드렸습니다. 데이터 사이언스 관련 경진대회는 각종 기업에서 필요한 데이터 니즈에 의해 운영되는 만큼 실제 현업에서는 어떤 데이터를 보유하고 있으며 이를 어떻게 활용할지에 대한 고민을',
    'React 16.6부터 추가된 Suspense는 주로 JS 번들의 Lazy Loading을 위한 기능이었습니다. React.lazy를 사용해 컴포넌트를 동적으로 임포트하고, Suspense 안에 넣어주면 자동으로 번들이 분리되고(Code Splitting) 해당 컴포넌트가 렌더링될 필요가 있을 때 React는 비동기적으로 번들을 가져옵니다. React Do',
    '카프카는 메인 허브 역할을 하기위해서 안정성을 높이는 방법으로 리플리케이션을 선택한 것입니다.1.1 리플리케이션 동작 개요리플리케이션 동작을 알아 보기위해서 토픽을 생성하고 describe옵션을 통해서 토픽을 상세히 보겠습니다.# create topic./kafka-topics.sh --bootstrap-server &lt;publicIp&gt;:9092',
    '자바스크립트는 <canvas> 태그의 화면을 캡처/녹화하는 방법을 제공한다. 예를 들어 캔버스에서 동작 중인 애니메이션을 녹화하여 동영상 등으로 저장할 수 있다. 작업 순서는 아래와 같다. # canvas 태그 화면 캡처/녹화 방법 1. canvas태그 화면 스트림 취득 : HTMLCanvasElement.captureStream()=&gt;MediaS',
    'API 29 이상의 기기에서 별도의 쓰기 권한이 없어도 다운로드 디렉토리에 파일을 다운로드받을 수 있다는 것을 알고 계셨나요?모르고 계셨다면 이 글을 통해 API 28 이하와 API 29 이상의 기기별로 어떻게 처리해야하는지 알아보고 앱에 적용해보세요.안녕하세요.헤이딜러 안드로이드팀의 김태현입니다.Android 10에 Scoped Storage가 나온 이후',
    '타입스크립트의 클래스는 자바스크립트의 ES6보다 좀 더 기존 자바나 C++의 클래스와 유사합니다. 그래서 좀 더 MVC 패턴같은 구조를 만들어보고자 한 것이죠. 전체적인 구조는 컨트롤러의 생성자에서 모델을 등록하여, 해당 모델을 이용하게끔 하는 구조입니다. 이 과정에 추상클래스로 구현된 컨트롤러와 모델이 존재하구요. 우선 추상클래스인 controller.t',
    'M100 멀티 스크린 윈도우 배치 WebTransport serverCertificateHashes 옵션 검색 주소창 사전 렌더링 M101 (dev) Web USB 동일객체 동작 window.open에서 true를 참 같은(truthy) 값으로 수정 Dev Trial 배열 그룹핑 1. M100 멀티 스크린 윈도우 배치 이슈 새로운 스',
    '호이스팅 인터프리터가 변수와 함수의 메모리 공간을 선언 전에 미리 할당하는 것을 의미합니다. 다소 말이 어려웠는데, 조금 더 풀어서 정리를 하면 다음과 같습니다. 실제로 변수 선언이나 함수 선언이 스코프 최상단으로 끌어올려지는 것은 아닙니다. 실행 컨텍스트는 코드가 실행되기 위해 필요한 환경이며, JavaScript 엔진이 코드를 실행하기 위해 필요한 여러',
    'Apache Kafka(이하 카프카)는 대용량, 대규모 메세지 데이터를 빠르게 처리하도록 개발된 분산 스트리밍 플랫폼입니다.카프카가 개발되기 이전에는 데이터 소스부터 데이터 타겟까지 복잡한 구조를 가지고 있었습니다. 새로운 시스템을 더할 때마다 복잡도가 기하급수적으로 올라갔습니다.카프카가 개발되어 적용 후에는 시스템간 의존성을 간접적으로 만들 수 있게 되었',
    '일반적으로 프로젝트의 코드 퀄리티를 올리기 위해서는 단위 테스트를 비롯해 여러가지 장치를 도입한다. 이때 가장 가성비가 좋은 작업이 정적 코드 분석을 도입하는 것이다. 정적 코드 분석은 코드내에서 발견할 수 있는 코드 스멜, 잠재적인 결함, 컨벤션 체크, 보안 취약점 등을 코드 레벨에서 분석해서 레포팅 해준다. 이런 정적 코드 분석 도구에는 여러가지가 있지',
    '자바스크립트는 <audio>, <video>태그나 Audio, Video객체를 통해 재생 중인 오디오/비디오를 녹음/녹화하는 방법을 제공한다. audio나 video의 차이는 audio객체를 사용하느냐, video객체를 사용하느냐의 차이밖에 없다. 출처: https://curryyou.tistory.com/448 [카레유] # audio/vide',
    'JSDOM은 Node.js 환경에서 돌아가기 때문에 속도도 빠르고 대부분의 경우에 꽤 괜찮은 솔루션이지만, 브라우저 표준이 잘 구현되고 테스트되는 것을 해당 라이브러리에 의존해야 하는 점과 브라우저간 동작이 다른 점 등을 포착할 수 없는 단점들을 안고 있습니다. 그리고 또 하나 중요한 점은 … 동작하는 테스트 케이스를 눈으로 확인할 수가 없다는 것입니다!간',
    'TFX는 프로덕션 머신러닝 파이프라인을 위한 end-to-end 플랫폼이에요. 2019년에 완전히 오픈소스화 되었고, 컴포넌트 단위로 ML 워크플로우를 개발한 후 여러 환경(Apache Beam, Dataflow, Kubeflow, Airflow)등에서 실행가능해요. 물론 데이터 수집/변환, 학습, 배포 등을 위해 잘 작성된 컴포넌트도 같이 제공되어요.TF',
    'Ace the System Design Interview — Uber/Lyft 차량 공유 앱인 Uber와 Lyft 같은 앱의 아키텍처 기초를 설명한 글입니다.(영문) #architecture 페이스북 개발자의 성과 만들기 메타(페이스북)에서 근무하는 지인과 대화 후 메타에서는 어떻게 업무가 시작, 실행, 관리되고 성과로 이어지는지 그리고 성과를 어떻게 평',
    '웹폰트를 경량화할 때 보통 원하는 문자 글리프만 남기고 나머지 데이터는 삭제하는 방법을 이용한다. 이걸 서브셋폰트, 폰트 서브셋팅이라고 부른다. 필요한 글자만 남기고 나머지는 다 삭제하기 때문에 만약 페이지에서 이 삭제된 글자를 출력하려 하면 제대로 출력할 수 없다. 보통 인터넷 상에서 변환된 웹폰트 파일을 다운로드 하여 바로 사용하는 경우 가끔 특수문자',
    '아카이빙하는 동안에는 Xcode 사용이 어렵다는 아쉬움이 여전히 존재합니다. 간혹 팀원 간 배포 환경이 달라서 문제가 될 수도 있고요. 관련 명령어를 모두 파악해야 하고, 명령어를 잘못 입력할 가능성도 있습니다. 처음 앱 배포 명령어를 입력하게 되는 주니어 개발자는 왠지 모르게 덜덜 떨게 됩니다.. 제 이야기입니다. Fastlane, 매우 편리한 배포 자',
    '단일 인스턴스로 병목이 되고 있는 redis pubsub 을 “scale out이 가능한 messaging system으로 대체해보자” 는 방향으로 접근해 보고자 합니다. 1. Pubsub messaging system Enterprise 레벨의 요구사항에 따라, messaging system은 더 낮은 지연시간 동안, 더 많은 지점에, 더 많은 메세지',
    '모예 모바일 앱은 웹과의 기능 차이가 크지 않고 React를 기반으로 작성되어 있습니다. 따라서 웹 프로젝트에서 TypeScript로 작성된 몇개의 모듈(Custom Hooks나 API 요청 함수, 각종 헬퍼 함수 등등)들을 그대로 옮겨와 모바일 프로젝트에서도 사용하고 있는데요. yarn workspace와 lerna, 혹은 npm을 통한 모듈 분리를 사용',
    'Redshift 는 PostgreSQL 을 포크하여 구글의 빅쿼리에 버금 가도록 AWS 에서 직접 튜닝하여 제공하고 있는 대용량 데이터 베이스 입니다. 그래서 멋들어지게 여러 테이블을 조인 해서 쿼리를 보았고, 운영 환경의 Redshift에서도 당연히 평균이상의 속도는 보이지 않을까 하는 생각을 했습니다. 쿼리 속도도 속도지만, 레드 시프트는 Hash 조',
    'JS에서는 객체에 특정 속성이 있는지 체크할 수 있는 방법이 in, hasOwn, hasOwnProperty가 있다. 그런데, 이 메소드는 어떤 차이가 있길래 여러 개가 존재하는걸까? 이번시간에는 이 세 메소드의 차이에 대해 알아보았다.(차이점만 보고 싶다면, 바로 2.메소드 간 차이보기로 넘어가자) 1) in 연산자 in연산자는 특정 속성이 해당',
    'Python Processing large JSON files in Python without running out of memory 대용량 JSON 파일을 처리에 관한 짧은 기사 입니다. 데이터 분석에서 대량의 JSON을 만날 때가 거의 없긴 하지만, 그래도 알아두시면 나중에 도움이 될지도 모를 일이죠 :D Pass-by-value, reference,',
    '기존 인덱스를 필드의 변경 빈도에 따라 두 인덱스로 분리 검색 시 두 인덱스에 검색 쿼리 요청하고 결과를 종합 배경 작년 말, 가게 변경 이벤트가 빠르게 증가하면셔 저희 검색시스템 ES가 트래픽에 버거워하는 모습이 간혹 보였습니다. 피크 시간대에는 간간이 검색 timeout이 발생하기도 하였고, 가게 변경 이벤트 처리가 지연되는 현상이 관찰되기도 하였',
    '지금 개발하시는 코드에서 ViewModel의 이벤트 처리를 어떻게 하고 계신가요?헤이딜러에서 LiveData -&gt; SingleLiveData -&gt; SharedFlow -&gt; EventFlow로이벤트 처리 방법을 변화 하기까지 과정을 소개합니다.여러분은 어느 단계의 코드를 사용하고 계신가요?안녕하세요헤이딜러 안드로이드팀의 박상권입니다.안드로이드',
    '효과적인 비동기 요청 관리를 위한 Redux Store의 구조와, 변경된 구조에 맞게 약간의 변화를 준 Redux Utils(reducer, saga를 만드는 factory 함수)들을 소개해보려고 합니다. 그동안 탐구해왔었던 Redux Store를 통한 비동기 요청 관리법이라는 주제에 마무리, 완결판 격인 포스팅이 될 것 같습니다. 기존 AsyncEnti',
    '어떻게 클라이언트의 HTTP 요청 메시지가 서버에 전송되고, 이걸 받은 서버의 HTTP 응답 메시지가 클라이언트에 전송되는지, 그리고 브라우저가 컨텐츠를 표시하는데까지의 모든 과정을 번호순으로 정리해 보았습니다. 조금 자세하지 못하게 요약된 부분도 있기도 해서 관련 레퍼런스, 이미지와 함께 설명하도록 하겠습니다. 1. 브라우저가 주소창에 입력된 URL을 해',
    '데이터 사이언스에 관심 있는 사람에게 추천하는 3가지 활동데이터를 읽어 들어와 필요한 전처리, 수학적 작업 등을 거친 뒤 상황에 따라 머신러닝을 포함한 인공지능 알고리즘을 적용하며 그에 맞는 솔루션까지 제공하는 모든 활동을 통틀어 데이터 사이언스(Data Science)라고 합니다. 최근 빅데이터와 인공지능이 모두 각광받고 있어 데이터 사이언스를 공부하고자',
    'Kubernetes cluster 인증서의 수명은 1년입니다. Kubernetes 인증서가 만료되면, 결과적으로 kubelet 서비스가 실패합니다. 실제로 현재 운영중인 gitlab-runner가 정상적으로 작동하지 않았던 현상이 있습니다. ERROR: Build failed (system failure): timedout waiting for pod',
    '1998년에 만들어진 curl은 Daniel Stenberg이 만든 URL로 요청을 보내고 받을 수 있는 명령행 도구이다. 물론 너무 유명한 도구이므로 이렇게 따로 설명할 필요도 없다. 보통 HTTP/HTTPS 요청을 테스트해 볼 때 많이 사용하는데 요즘은 Postman이나 Insomnia같은 편리한 도구들도 많지만, 터미널에서 쓰기엔 curl만 한 것도',
    'CloudFlare의 정적사이트 플랫폼인 CloudFlare Pages가 출시되었다. 이미 Netlify 와 같이 정적 사이트 플랫폼이 많은데 굳이 CloudFlare를 써야하나? 싶었다. (저도 그동안은 Netlify을 썼기 때문에) 그럼에도 써봐야하는 이유는 Free Plan의 구성이 말도 안되게 좋기 때문이다. 무제한 사이트 발행 무제한 요청 무',
    'NestJs의 주요 기능들을 차례대로 Spring의 유사한 기능들과 비교해보면서 간단히 사용하는 법을 써보려 합니다.일단 처음 NestJs 문서를 보면 나오는 항목은 Controller입니다. HTTP route를 관리하기 위한 친구로 Spring의 Controller와 사용법이나 형태가 매우 유사하여 쉽게 익숙해질수 있었습니다.먼저 스프링에서는 ‘/tes',
    'brew install asciiquarium brew install asciiquarium을 통해 asciiquarium을 설치합니다. asciiquarium 실행하기 asciiquarium Terminal에 asciiquarium을 입력합니다. 다음과 같이 이쁘게 실행되는 것을 볼 수 있습니다. asciiquarium 명령어 모음',
    'height, width, top, left 같은 속성의 변화는 레이아웃(리플로우)을 유발한다. 그러면 브라우저는 다른 엘리먼트에도 레이아웃 변화가 있는지를 재귀적으로 확인해야하고 이를 계산하는 데에는 많은 비용이 든다.  만약 그 계산이 애니메이션의 1 프레임(약 16.7ms)보다 오래 걸리면 애니메이션의 프레임은 제 시간에 렌더되지 못하고 스킵되기 때',
    'GitHub Actions를 활용해서 master/main에 코드가 merge될때알아서 Release/Tag 를 만들어주도록 하는 방법입니다.- 단 1분만에 설정할 수 있습니다.안녕하세요.헤이딜러 안드로이드팀의 박상권입니다.GitHub을 사용하고 계신다면앱이나 웹 등의 서비스를 배포하고 난 뒤에 Release / Tag를 만드시고 계실겁니다.Git Flow',
    '메이븐(maven)은 프로젝트 빌드와 의존성(dependency)을 관리해주는 도구입니다. 메이븐을 사용하면 프로젝트를 빌드할 때 테스트 코드를 단위 테스트와 결합 테스트로 나눠 실행할 수 있습니다. 테스트가 나뉘어 실행되는 원리를 알아보기 전에 먼저 메이븐과 관련된 개념들을 몇 가지 정리하고 글을 이어가곘습니다. 라이프 사이클(lifecycle) 페이즈(',
    "작년 연말 SNS를 뜨겁게 달궜던'내 트리를 꾸며줘'를 기억하시나요? 2021년 12월 20일에 오픈해서 2022년 1월 10일에 종료된 이 서비스는 계정 주인의 지인들이 트리에 메시지를 남기면, 크리스마스 자정에 한 번에 공개되는 익명 메시지 서비스입니다.'내 트리를 꾸며줘'는 250만 개의 계정, 3700만 개의 선물 수, 117만명의 동시 접속자라는",
    'API를 사용하는 유저들의 비율이 현저히 낮아지기 전까진 두 버전 모두 사용 가능해야 한다.이 프로젝트에서의 성공적인 마이그레이션의 조건은 다음과 같았습니다.(여기에서부터는 용어의 반복을 줄이기 위하여 기존의 구조에서 작성된 구버전의 코드와 API를 “V1”, 새로운 구조에서 구현된 신버전의 코드와 API를 “V2”로 명명하여 아래의 내용을 이어가도록 하겠',
    '태블릿, 폴더블, Chrome OS 등 Android 대화면 기기 수는 2억 5천만 개가 넘으며, 2023년까지 폴더블은 약 3천만 대, Android 태블릿은 약 4억 대 이상 활용될 것으로 예상됩니다. 이같이 수요가 증가함에 따라 유저들은 소셜 네트워킹 및 게임 플레이에서 멀티 태스킹부터 여러 작업 수행에 이르기까지, 대화면을 그 어느 때보다 다양한 방',
    '사용자들이 데이터 파이프라인 개발을 할 수 있도록 각각 격리된 Airflow 환경을 제공해야 합니다.Airflow 웹에 접속할 수 있는 URL을 각 기능별로 제공해야 합니다.사용자 환경은 GitHub의 Action을 통해 자동으로 생성되고 회수돼야 합니다. 그럼 위 사항들을 하나씩 살펴보겠습니다.  Airflow 환경 구성 먼저 사용',
    'API 서버를 운영하다 보면 상시로 백단에서 처리 할일이 생깁니다. 임시로 써야 할일이 있으면 스크립트를 만들어서 API에서 사용하면 되지만 애매합니다.이럴 때 미리 짜놓은 스크립트를 커맨드 라인에서 실행할 수 있도록 해주는 NestJs 라이브러리를 찾아보니 nestjs-command 가 있었습니다. 이 라이브러리를 이용하여 CLI 프로그램을 만들어보겠습니',
    'Python Processing large JSON files in Python without running out of memory 대용량 JSON 파일을 처리에 관한 짧은 기사 입니다. 데이터 분석에서 대량의 JSON을 만날 때가 거의 없긴 하지만, 그래도 알아두시면 나중에 도움이 될지도 모를 일이죠 :D Pass-by-value, refer',
    '브라우저의 내장 API는 웹 개발 요구사항에 따라 한계를 가진다. 커스텀 오류 메세지를 보여준다거나 폼을 제출하기 던에 입력값을 검증하는 등의 행위는 내장 API 만으로 는 구현이 까다롭다. 이러한 요구사항은 아래 세 개로 정리할 수 있다. 값을 필드에 바인딩할 수 있다. 폼 제출을 처리할 수 있다. 제출 전에 필드 값을 검증할 수 있다. 오류 메시지도',
    'Canvas에 로드한 춘식이 이미지의 데이터 속에서 유일한 색상 값 목록을 추려내어 하단에 ColorBlock으로 뿌려주는 일을 합니다. 동작의 원리부터 가볍게 살펴보겠습니다. 먼저 Canvas를 통해 다음의 작업이 가능합니다. 이미지 그리기 이미지 데이터 가져오기 이미지 픽셀 데이터 조회하기 주어진 세 가지 작업에 대한 문서 자료를 차분하게 살펴보신다',
    '해시 테이블은 어떤 특정 값을 받으면 그 값을 해시 함수에 통과시켜 나온 인덱스(index)에 저장하는 자료구조이다. 보통 배열을 사용해서 구현하는 경우가 많은 것 같다. 일단 해시 함수가 뭐길래 사용한다는 건지 해시가 뭔지 설명하기 전에 해시 테이블이라는 개념이 어디서부터 출발한 것인지 알아보자. 직접 주소 테이블(Direct Address Table)',
    '파편화되어 있는 데이터 파이프라인 환경 때문에 관리 포인트가 늘어나는 문제온 프레미스(on premise) 환경에 구축돼 있기 때문에 추가로 구축이 필요한 경우 비용(서버, 운영, 구축 시간 등)이 증가하는 문제여러 개발자가 하나의 데이터 파이프라인에서 비즈니스를 개발하기 때문에 온 프레미스 환경에 각 개발자에게 맞는 여러 개발 환경이 필요한 문제 점',
    'Github에는 Code Owner라는 기능이 있는데, Repository 내에 특정 파일이나 특정 디렉토리, 원하면 특정 확장자 별로도 Owner를 지정하여 파일 및 코드를 관리할 수 있는 방식이다. 이를 활용하면 코드리뷰를 위해 PR 생성 시, 작업한 파일에 관련된 Owner들을 자동으로 PR(Pull Request) Reviewer로 지정할 수 있다.',
    '이번 포스팅에서는 styled-components 를 사용하여 간편하고 코드의 변화량이 거의 없이 다음과 같이 darkMode를 추가하는 작업을 진행하도록 하겠습니다.ThemeProviderThemeProvider 는 styled-components 에서 지원 하는 함수로 redux 처럼 ThemeProvider 로 감싼 내부의 컴포넌트들에게 공통된 gl',
    'resize 이벤트는 브라우저의 크기가 변경될 때 발생한다. 만약, 브라우저 크기 변화에 따른 dom의 변경 크기를 구하려면 getBoundingClientRect(), getComputedStyle()를 사용해줘야한다. 2) 예시 아래 예시는 브라우저 크기를 변경한 뒤, div의 변화된 너비를 화면에 출력했다. 💡 그런데, 특정',
    'connection-manager는 클라이언트와 웹소켓으로 연결되는 커넥션을 관리하고, 메시지 소싱과 라우팅, 서버 푸시를 담당합니다. 특이한 점은, connection-manager를 스케일 아웃하면 클라이언트가 어느 connection-manager로 연결됐는지 알 수 없기 때문에 외부 시스템에서 소싱된 메시지의 타깃을 connection-manager',
    'A new year, a new MDN : MDN이 그동안 wiki 기반으로 운영해오다가 GitHub을 이용한 마크다운 기반으로 변경하면서 디자인을 전면 개편했다. 새로운 로고도 공개하면서 조만간 개인화 기능을 추가한 유료 구독 서비스를 공개할 예정이라고 한다.(영어) Solid.js feels like what I always wanted React to',
    '팀 단위의 프로젝트에서는 Github Action 빌드의 결과를 Slack으로 보내겠지만, 개인적인 프로젝트에서는 Telegram을 사용할 때가 많다. 메세지 제한이 없고 슬랙은 무료 Plan에서는 채널당 메세지가 10,000개 제한이 있다. 네이티브 앱이라 슬랙에 비해 속도 체감이 심하다 특정 프로젝트의 build 결과를 텔레그램 메신저로 받을',
    'Go에서는 오류를 Error로 다룬다. 아쉽게도 Error에는 기본적으로 Stack Trace가 포함되어 있지 않아 오류가 발생 시 Stack Trace 없이 오류 메시지만 출력한다. 아래 코드를 보자. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 package main import ( "errors" "fmt"',
    '모던 웹 개발 환경을 새롭게 꾸미면서 도입하게 된 기술 스택 중 유용한 것들 몇 가지에 대해서 간단히 소개하겠습니다.프론트엔드 전반에 걸쳐 시각적 일관성을 얻기 위해 우리는 디자인 시스템을 개발합니다. 예컨대, 이상적인 제품은 오직 한 종류의 Button 집합, 통일된 Typography 세트를 가지며 UI 요소는 어떤 개발자가 작업 했는가에 상관없이 동일',
    'Environment란 개념은 Terraform 0.9 버전에 생겼으나 용어의 혼란으로 인해 0.10 버전에서 Workspace라는 용어로 변경 되었습니다. 참고Workspace를 시작하려면 tfstate 를 어떻게 관리하느냐에 대한 고민이 제일 먼저 시작 될 것입니다.기본 Workspace Prefix의 경우에는 env: 로 시작하게 되어, 원하시면 바꾸',
    'OpenAPI Specification을 작성해서 API Client를 자동 생성하여 개발자 경험을 높히는 작업을 했던 적이 있었습니다. 예전에 개발해서 배포했던 oas-api-client라는 오픈소스를 사용해 자동 생성된 API Client는 프론트엔드에서 아래와 같이 사용하고 있습니다. await client.getPostsByCursor({ count',
    '리액트의 useEffect 훅(hook)을 사용할 때 이벤트 정리 등을 위한 클린-업(clean-up) 함수를 테스트하는 방법이 있는지 궁금했습니다. 간단하게 useEffect 훅과 클린-업 함수에 대해 알아보고, 테스트 방법에 대해 정리해보았습니다. 1. useEffect HookPermalink React docs - Using the Effect Ho',
    'CI로 사용하고 있는 Jenkins에서 빌드시간을 획기적으로 줄이는 방법에 대한 포스팅입니다. GitHub에서 PR을 만들때는 2가지의 경우가 있습니다.피쳐 개발, 코드개선, 버그 수정 등의 develop으로 merge하는 PR배포, 핫픽스를 위해 master로 merge하는 PR2번의 경우라면, 배포를 위한 릴리즈 파일을 만들어야 하므로 assembleR',
    "테오님 후에 '프론트엔드 개발자에게 알고리즘 공부가 미치는 영향' 과 같은 주제로 태오님의 생각을 적어주실 수 있을까요? 어떻게 보면 코딩 테스트가 개발자를 솎아내는 첫 번째 작업이라고도 볼 수 있는데, 공부를 하면서도 제가 짜는 코드에서는 전혀 사용되지 않는 것 같고.. 실무에서는 어떻게 쓰일 수 있을지? 이런 동기부여가 있으면 정말 좋을 것 같습니다…",
    '도메인을 이해하고, 문제를 정의한 후, 해법을 개발하는 일을 즐긴다. 개발자는 단순히 코드만 짜는 사람이 아닙니다. 물론 코드를 짜는 것이 개발자가 해야 할 가장 기본이자 핵심 업무이고, 코드가 우리 작업의 결과물이라는 것을 부정할 사람은 없을 겁니다. 그러나 도메인 이해와 문제 정의 없이 코드만 짠다는 것은 우리 스스로를 저평가하는 것이라고 생각합니다. ',
    '비동기 통신 취소 하기프론트 영역에서 비동기 통신은 보통 성공 or 실패를 반환하게 됩니다. 물론 비즈니스 로직을 통해서 네트워크를 무시하고 취소상태로 할수는 있으나 실제 네트워크 요청은 그대로 진행되게 됩니다. 하지만 AbortController 를 사용하면 네트워크 요청을 취소할 수 있습니다.AbortController 란AbortController 는',
    'The State of JavaScript 2021 : 매년 발표되는 JavaScript 개발자의 설문 조사를 통해서 생태계의 현황을 정리한 사이트 올해는 만여 명이 설문에 참여했다. 지역별 연봉, 프레임워크, 테스트 도구, 백엔드, 모바일 등 다양한 영역이 정리되어 있어서 어떤 기술을 많이 사용하고 있고 최근에 어떤 기술이 관심이 커지고 있는지 쉽게 알',
    '데이터 품질 불량, 데이터 사용 곤란, 데이터 완전성 부족, 데이터 구경 불일치, 업무 사용자가 거의 사용할 수 없습니다...업무 측면에서 관리되지 않은 데이터는 거의 가치가 없습니다.점점 더 많은 기업과 조직이 디지털화에 나서자 데이터 관리는 기업에 더욱 중요해졌습니다. 대부분의 사업의 성공은 데이터의 신뢰성, 보안성 등에 달려 있기 때문입니다.오늘 소개',
    '많은 개발자들이 개발자의 성장에 대한 지원을 해주고 관심을 가지는 회사를 선호한다. 컨퍼런스 가고 싶다고 하면 돈도 내주고 책도 사주고 스터디를 하고 싶다고 하면 사무실도 빌려주거나하는 그런 회사 말이다. 간혹 조직 문화 차원에서 업무 시간에 공식적으로 공부할 수 있는 시간을 내어주는 회사도 있다. 이런 회사들의 특징은 조직원이 성장하는 것이 결과적으로는',
    '이번시간에는 TDD는 무엇이며, TDD 중에서 단위테스트도 직접 해보자! 1) TDD란? TDD(테스트 주도 개발)은 말 그대로 개발보다 테스트를 우선 실행하는 걸 말한다. 그림1은 기존 개발 프로세스로 설계 → 개발 → 테스트 순으로 진행된다. 만약 테스트 결과 실패를 하게 되면 설계를 수정하고 개발 코드를 변경하므로 비용이 높다. 하지만 그에 비',
    'JS로 요소의 스타일에 접근하는 방법인, window.getComputedStyle와 Element.style에 대해 알아보았다! 1) getComputedStyle()? (1) 형태 window.getComputedStyle(el[, pseudo-class]); getComputedStyle는 요소(el)의 모든 CSS 속성값을 객체 형태(CSS',
    '자바스크립트의 date객체를 이용해 달력을 만들어보자. 만들기 조건 table이 아니라 flex 레이아웃을 이용 클래스를 활용해 css로 스타일 지정 달력은 월요일부터 시작 이전달의 월요일부터 마지막 날까지 표기 다음 달의 1일부터 일요일까지 표기 선택자 등등은 JQuery 이용 날짜 정보를 가져오기 위해서 자바스크립트의 date 객체를 이용할 예정이다',
    '다음 글은 코어자바스크립트 교재를 참고해서 자바스크립트에 대해 그동안 헷갈리던 부분과 핵심부분을 요약정리한 부분입니다. 1. 데이터 타입 변수 : 변경 가능한 데이터가 담길 수 있는 공간 식별자 : 그 변수의 이름을 말한다. 참조 카운트 : 자신의 주소를 참조하는 변수의 개수 가비지 컬렉터(GC) : 런타임 환경에 따라 특정 시점이나 메모리 사용량이 포화',
    'htop은 Unix을 기반으로 한 Mac을 비롯한 Linux 시스템에서 CPU 사용량, Memory 사용량, Processor, SWP, 등을 GUI 화면으로 나타내 사용자가 보기 쉽게 하여 관리하도록 할 수 있는 프로그램입니다. htop 설치 brew install htop iTerm2(terminal) 을 실행 한 후 brew 명령어를 이용하여 htop',
    'helm은 k8s 패키지 매니저다. 공식 문서에 흔한 그림 하나 없고 이래저래 영 마음에 들지 않아서 개념적으로 이해하는 데 필요 이상의 노력이 드는 것 같아서 어쩔 수 없이 따로 핵심만 추려서 정리해본다. 일단 k8s 패키지 매니저가 뭔지 그림으로 맛을 보자. 이해하기 쉽게 한 가지 방식만을 골라서 단순화 했으며, 실제로는 물론 여러가지 시나리오, 방식으',
    '외부 서비스가 장애가 났다네요..A : 혹시 알림에 이런 기능을 붙일 수 있을까요? → 할 수는 있는데… 그럼 계약 기능에 영향이 어떻게 가는지 한 번 확인을…계약서 발송과 정보 알림을 이메일과 카카오톡으로 하고 있고, 관련 외부 서비스를 사용하고 있습니다. 해당 외부 서비스들이 장애가 나게 되면 1~3번의 계약과 관련된 서비스조차 이용을 못 하게 됩니다.',
    '제가 며칠 전에 클린소프트웨어 책을 보니 SOLID 법칙이 나오던데요, 자바나 C++ 같은 클래스 구조로 객체를 만드는 언어에서는 쉽게 따라해볼 수 있겠는데, 함수 위주로 작성하는 js, ts를 사용하는 프론트엔드에서도 사용이 가능한지, 현업에서 클린 소프트웨어를 만들기 위해 SOLID 법칙을 사용하고 계신 부분이 있는지 궁금합니다. 타입스크립트 클린코드',
    '개발한 프로젝트가 점점 커짐에 따라서 Watch 중에 빌드를 여러 번 돌리게되면 어느 순간 갑자기 out of memory가 뜨면서 프로세스가 죽어버리는 이슈가 발생하였다. 이 문제는 사실 꽤 예전부터 발생했던 이슈지만 계속 비즈니스 이슈를 개발하느라고 외면받고 있던 이슈였는데 우연히 기회가 되어 해당 이슈를 자세히 들여다 볼 수 있었다. 사실 구글에 w',
    '객체 사이에 일 대 다의 의존 관계를 정의해 두어, 어떤 객체의 상태가 변할 때 그 객체에 의존성을 가진 다른 객체들이 그 변화를 통지받고 자동으로 갱신될 수 있게 만듭니다. GoF 디자인 패턴 책을 보면 어렵게 설명되어 있지만, 많은 개발자 분들께 친숙한 발행(publish)과 구독(subscribe) 모델을 생각하면 이해가 쉽습니다. 옵저버(observ',
    '타입스크립트의 never 타입은 다른 타입만큼 흔하게 사용되거나 피할 수 없는 것이 아니기 때문에 충분히 논의되고 있지 않다. 타입스크립트 초보자는 조건부 타입 같은 고급 타입을 처리하거나 이해하기 어려운 오류 메시지를 읽을 때만 나타나는 never 타입을 무시할 수 있다. 타입스크립트에서 never 타입을 사용하기 좋은 케이스가 꽤 있다. 하지만, 조심',
    'GitHub Actions에서 해당하는 워크플로(빌드 생성)을 Remote 서버에 실행 요청Remote 서버는 빌드를 생성하여 Firebase 또는 App Store에 업로드업로드 완료 이후, Slack 메시지와 Mail을 전송하여 담당자에게 알림결과적으로 위의 프로세스는 GitHub Actions를 통해서 자동화하였는데, 여러 서비스(Jenkins 또는',
    '클라이언트는 서버에 HTTP 프로토콜로 핸드쉐이크 요청을 한다. 서버에서는 응답 코드를 101 로 응답해준다. postman 이라는 도구에서 웹소켓 연결을 했을 때는 아래와 같이 101 으로 응답받는 것을 확인할 수 있다. 웹소켓을 위한 별도의 포트를 오픈해야 하나요? 그렇지 않다. HTTP 또는 HTTPS 통신을 위해 오픈한 포트를 사용한다. 웹소켓은 H',
    'react-router에서 내부적으로 사용하는 RouterContext때문에 history change event가 일어날 때마다 계속 리렌더링이 일어난다는 겁니다. Switch 하위에 있어서 history change가 일어나면 어차피 변경되는 컴포넌트들은 상관이 없지만, Navigation이나 Tab Bar같이 Switch 바깥에 있는 UI 컴포넌트들은',
    'Push Notification?Javascript로 를 통해 웹과 모바일에 푸쉬 메세지를 발송하는 PWA 기능입니다. 즉 브라우저에서 네이티브와 마찬가지로 사용자에게 알림 메세지를 보낼 수 있습니다. 아직 사파리 계열은 제대로 지원되고 있지 않지만 크롬, 안드로이드 에서는 네이티브와 같은 알림 메세지를 받아보실 수 있습니다. 이제 PWA의 푸쉬 메',
    "Code Review Guidelines for Data Science Teams 모든 과정에서 각별한 관심을 기울여야 하지만, 그 중에서도 특별히 많은 노력을 들여야 하는 '코드 리뷰'를 데이터 분석팀에서 어떤 형태로 진행해야 하는지 자세히 소개하는 기사이다. Optimizing Memory Usage in Python Applications 메",
    '시니어 엔지니어가 조직에서 무슨 역할을 해야하는가에 대해서는 회사에 따라서도, 상황에 따라서도 다른 듯 하다.무엇보다 시니어에 대한 기준조차도 회사별로 너무 천차만별이고, 또 다양하게 이루어지다보니 절대적인 기준을 세우기는 조금 어려운 듯 하기도 하다. 그래서 이 글은 대략적으로 ‘내가 생각하는 시니어 엔지니어의 역할’ 에 대해서 이야기 한다.먼저 개발자의',
    'Rocket.Chat 은 zulip, slack과 비슷한 오픈소스 메신저 서버/클라이언트 프로그램입니다. 실시간 채팅을 할 수 있고, 음성과 화상채팅도 가능합니다. 또한 다양한 서버 OS를 지원하고 있습니다. 다나와에서는.. 다나와 Devops/검색 팀에서는 메신저로 로켓챗 서버를 구축해서 사용중입니다. 진행했던 이슈들에 대한 대화내역과 이미지, U',
    'Gareth Davies 님의 사진, 출처: Pexels이 글에서는 밀당 영어 프론트엔드에서 커다란 코드 덩어리로 되어 있던 모놀리스(Monolith)를 여러 개로 나누고, 점진적으로 React (15 → 17), Material-UI(0.18.6 → v5 Beta) 라이브러리 업데이트를 하기 위해 Rush를 사용하여 모노레포(Monorepo)를 도입을 하',
    '들어가며..next.js 를 통해 작업 하는 중 데이터 자체는 서버사이드렌더링의 결과물을 보았으나 스타일 부분은 적용되지 않아 이에 대해 알아보고 해결한 방법에 대해서 알려드리려 합니다.next.js 란?next.js 는 리엑트로 서버사이드 렌더링(server side rendering) 등을 편하게 작업하기 위해 만든 프레임워크로 next.js 를 통해',
  ]

export const brands = [
  '롯데백화점 본점',
  '(주)신세계',
  '마돈나가발백화점',
  '금성털실백화점',
  '한국백화점협회',
  '극동전기조명백화점',
  '극동조명백화점',
  '동명인테리어장식백화점',
  '광고백화점',
  '대구백화점수퍼체인',
  '가발백화점마돈나',
  '가야기프트판촉물백화점',
  '기프트인포판촉물백화점',
  '21세기축산물백화점',
  '성창소형엔진백화점',
  '가가세계주류백화점',
  '금고백화점',
  '기프트인포판촉물백화점',
  '윤신근애견종합백화점',
  '롯데백화점본점헌터',
  '만리동누수공사백화점',
  '한국종합볼트백화점',
  '명가안경백화점',
  '시흥가구백화점',
  '고려인삼백화점',
  '남대문인삼백화점',
  '코리아세계주류백화점',
  '가자주류백화점한상인',
  '조일광고백화점',
  'USM 롯데백화점 본점',
]

export const prodname = [
  'LEDBERG 레드베리',
  'OMLOPP 옴로프',
  'STÖTTA 스퇴타',
  'LEDBERG 레드베리',
  'RAMSTA 람스타',
  'STRÖMLINJE 스트룀리니에',
  'MOGNAD 몽나드',
  'NORRFLY 노르플뤼',
  'MÖRKRÄDD 뫼르크레드',
  'HÅRTE 호르테',
  'SNÖYRA 스뇌위라',
  'OMLOPP 옴로프',
  'TRÅDFRI 트로드프리',
  'RYET 뤼에트',
  'IRSTA 이르스타',
  'MOLGAN 몰간',
  'SOLVINDEN 솔빈덴',
  'TRÅDFRI 트로드프리',
  'NÄVLINGE 네블링에',
  'LAKENE 라케네',
  'STÖTTA 스퇴타',
  'TRETTIOTRE 트레티오트레',
  'VISSVASS 비스바스',
  'MOGNAD 몽나드',
  'LEDSJÖ 레셰',
  'GODMORGON 고드모르곤',
  'VAXMYRA 박스뮈라',
  'UPPLYST 우플뤼스트',
  'ANSLUTA 안슬루타',
  'EBBARED 에바레드',
  'LIVSÅR 리브소르',
  'RAMSTA 람스타',
  'RYET 뤼에트',
  'GODAFTON 고다프톤',
  'LJUSANDE 유산데',
  'ÖSTANÅ 외스타노',
  'LEDARE 레다레',
  'RYET 뤼에트',
  'NÄVLINGE 네블링에',
  'FUBBLA 푸블라',
  'RYET 뤼에트',
  'PELARBOJ 펠라르보이',
  'BÄVE 베베',
  '2SOLVINDEN 솔빈덴',
  'LEDARE 레다레',
  'GODAFTON 고다프톤',
  'SPIKEN 스피켄',
  'ÅRSTID 오르스티드',
  'OMLOPP 옴로프',
  'BÄVE 베베',
  'GODMORGON 고드모르곤',
  'LEDFYR 레드퓌르',
  'SÖDERSVIK 쇠데르스비크',
  'ROLLSBO 롤스보',
  'SOLVINDEN 솔빈덴',
  'UPPLYST 우플뤼스트',
  'NÄVLINGE 네블링에',
  'STORHAGA 스토르하가',
  'STRÅLA 스트롤라',
  'KRUX 크룩스',
  'NÄVLINGE 네블링에',
  'BLÖTSNÖ 블룃스뇌',
  'LEDFYR 레드퓌르',
  'OMLOPP 옴로프',
  'GODAFTON 고다프톤',
  'BÄGAREN 베가렌',
  'STRÅLA 스트롤라',
  'GODMORGON 고드모르곤',
  'DUGGREGN 두그렝',
  'SOLVINDEN 솔빈덴',
  'RYET 뤼에트',
  'ROLLSBO 롤스보',
  'SOLARVET 솔라르베트',
  'RYET 뤼에트',
  'GODAFTON 고다프톤',
  'URSHULT 우르스훌트',
  'KORNSNÖ 코른스뇌',
  'NÄVLINGE 네블링에',
  'LUNNOM 룬놈',
  'NÄVLINGE 네블링에',
  'SOLSKUR 솔스쿠르',
  'YPPERLIG 위펠리그',
  'NÄVLINGE 네블링에',
  'SÖDERSVIK 쇠데르스비크',
  'UTSUND 웃순드',
  'LEDARE 레다레',
  'TRÅDFRI 트로드프리',
  'RYET 뤼에트',
  'LEDARE 레다레',
  'YPPERLIG 위펠리그',
  'GODAFTON 고다프톤',
  'UTSUND 웃순드',
  'VAXMYRA 박스뮈라',
]
